import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as s,a as t,o as n}from"./app-DB5Ixhye.js";const l={};function r(h,i){return n(),e("div",null,[i[0]||(i[0]=s('<h1 id="用一行命令把任意网站变成桌面应用" tabindex="-1"><a class="header-anchor" href="#用一行命令把任意网站变成桌面应用"><span>用一行命令把任意网站变成桌面应用</span></a></h1><p>传统意义上，网站不是”用户<strong>拥有</strong>的东西“，而更像是”用户<strong>访问</strong>的地方“，具有以下特点：</p><ol><li><strong>用户不访问时，网站不在用户的设备上存在</strong>：这意味着网站不像应用程序那样可以安装在用户的设备上，用户不使用时，网站不会占用设备资源；</li><li><strong>用户只能通过打开浏览器访问网站</strong>：用户需要主动打开浏览器，输入网址或点击链接才能访问网站；</li><li><strong>高度依赖网络连接</strong>：网站需要网络连接才能访问，如果用户没有网络，就无法访问网站。</li></ol><p>但如果我们发现了一个有意思的网站，想拥有它，这时就不希望它是传统意义上的网站了，更希望是一个原生的APP。这样当我们使用时，点击一个图标即可打开，提供沉浸式的用户体验。</p>',4)),t(" more "),i[1]||(i[1]=s(`<p>举个例子，笔者写公众号使用的排版工具<a href="https://doocs.github.io/md/" target="_blank" rel="noopener noreferrer"><strong>doocs/md</strong></a>，官方提供了网站，也可以自己本地部署，但页面用起来体验始终不如本地APP，并且自己部署也会存在新功能难以快速同步的问题。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030266.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pwa很好-但不通用" tabindex="-1"><a class="header-anchor" href="#pwa很好-但不通用"><span>PWA很好，但不通用</span></a></h2><p>使用Chrome浏览器打开网页时，细心地小伙伴能发现导航栏有时会有这样的小图标。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030267.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击一下，就能将网页下载到本地。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030268.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这种能下载的网页叫<strong>渐进式Web应用</strong>（Progressive Web App，<strong>PWA</strong>），可以直接通过浏览器安装，像原生APP一样在线或离线使用。但想让一个网站成为PWA是有前提的，需要在网站开发的时候就按照规定的方式编写代码（具体的要求这里就不详述了，有兴趣的朋友可以自行查一下）。</p><p>对于一些不是PWA的网站，如前文提到的doocs/md，还有没有其他办法将其变成桌面软件呢？</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030270.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="将任意网页变为桌面应用" tabindex="-1"><a class="header-anchor" href="#将任意网页变为桌面应用"><span>将任意网页变为桌面应用</span></a></h2><p>是的，有，刚好有这么一个便利的工具——<a href="https://github.com/tw93/Pake" target="_blank" rel="noopener noreferrer"><strong>Pake</strong></a>。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030271.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Pake是国内一个前端大佬做的开源工具，能够将<strong>任何网页</strong>转换成桌面应用程序。它支持Mac、Windows和Linux系统，并且相较于Electron打包的应用程序体积更小、速度更快。Pake提供了命令行工具来简化打包流程，并允许用户自定义开发。</p><p>下面简要介绍一下提供的三种使用方式：</p><h3 id="常用包下载" tabindex="-1"><a class="header-anchor" href="#常用包下载"><span>常用包下载</span></a></h3><p>提供了一些常用网站的包，进行一些定制优化，可以去仓库<a href="https://github.com/tw93/Pake/releases" target="_blank" rel="noopener noreferrer">Release</a>下载安装使用。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030272.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="命令行一键打包" tabindex="-1"><a class="header-anchor" href="#命令行一键打包"><span>命令行一键打包</span></a></h3><p>对于未提供的网站，可以使用下面命令一键打包。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 npm 进行安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pake-cli</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 命令使用格式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS]...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打包举例</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://www.shawnxie.top/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Shawn-Weekly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令参数详细说明可以参考<a href="https://github.com/tw93/Pake/blob/master/bin/README_CN.md" target="_blank" rel="noopener noreferrer">README_CN</a>。</p><p>注：Pake底层使用的是Tauri，环境一定要按照<a href="https://tauri.app/zh-cn/v1/guides/getting-started/prerequisites/#%E7%AE%A1%E7%90%86-rust-%E5%AE%89%E8%A3%85" target="_blank" rel="noopener noreferrer">要求</a>安装，不然会出现一些报错。如果按照下面命令安装后还有问题，可以在Issue里找一下解决方法。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MAC环境安装</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 CLang 和 macOS 开发依赖项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xcode-select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 Rust</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;=https&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --tlsv1.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://sh.rustup.rs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># node安装一下最新版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v20.17.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们就用一行命令把前文中提到的doocs/md打包成桌面APP吧！</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://doocs.github.io/md</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Wechat-MD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --icon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./Markdown.icns</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>省略命令执行过程，得到一个安装包。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030273.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装之后我们就能像本地APP一样使用doocs/md网站啦，大功告成！</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030274.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="定制开发" tabindex="-1"><a class="header-anchor" href="#定制开发"><span>定制开发</span></a></h3><p>针对爱折腾的用户，也提供了「定制开发」方式，可深度二次开发定制功能。笔者刚好前端和Rust都不会，直接Pass。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 本地开发[右键可打开调试模式]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打包应用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="原理浅析" tabindex="-1"><a class="header-anchor" href="#原理浅析"><span>原理浅析</span></a></h3><p>前面提到Pake底层使用了<a href="https://tauri.app/zh-cn/" target="_blank" rel="noopener noreferrer">Tauri</a>，它是一款应用构建的工具包，能够为使用Web技术的所有主流桌面操作系统构建软件。Tauri的核心是用Rust构建的，CLI（命令行界面）则利用了Node.js。相较于其他同类型工具，Tauri拥有诸多优点。奈何笔者前端和Rust都不太懂，就不进一步探究啦，感兴趣的小伙伴可以自行查查资料。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030275.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div style="text-align:center;"> —— 完 —— </div><hr><p>关注“<strong>肖恩聊技术</strong>”公众号，原创技术文章第一时间推送~</p><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/20241103221454.png" alt="公众号二维码" width="300">`,40))])}const d=a(l,[["render",r]]),o=JSON.parse('{"path":"/blogs/tools/one-cmd-web-to-app.html","title":"用一行命令把任意网站变成桌面应用","lang":"zh-CN","frontmatter":{"icon":"en-to-square","date":"2024-09-28T00:00:00.000Z","category":["技术提效"],"tag":["Mac","桌面应用","教程"],"description":"传统意义上，网站不是”用户拥有的东西“，而更像是”用户访问的地方“，具有以下特点： 用户不访问时，网站不在用户的设备上存在：这意味着网站不像应用程序那样可以安装在用户的设备上，用户不使用时，网站不会占用设备资源； 用户只能通过打开浏览器访问网站：用户需要主动打开浏览器，输入网址或点击链接才能访问网站； 高度依赖网络连接：网站需要网络连接才能访问，如果用...","head":[["meta",{"property":"og:url","content":"https://shawnxie.top/blogs/tools/one-cmd-web-to-app.html"}],["meta",{"property":"og:site_name","content":"肖恩聊技术"}],["meta",{"property":"og:title","content":"用一行命令把任意网站变成桌面应用"}],["meta",{"property":"og:description","content":"传统意义上，网站不是”用户拥有的东西“，而更像是”用户访问的地方“，具有以下特点： 用户不访问时，网站不在用户的设备上存在：这意味着网站不像应用程序那样可以安装在用户的设备上，用户不使用时，网站不会占用设备资源； 用户只能通过打开浏览器访问网站：用户需要主动打开浏览器，输入网址或点击链接才能访问网站； 高度依赖网络连接：网站需要网络连接才能访问，如果用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030266.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-10T09:50:29.000Z"}],["meta",{"property":"article:tag","content":"Mac"}],["meta",{"property":"article:tag","content":"桌面应用"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-09-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-10T09:50:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用一行命令把任意网站变成桌面应用\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030266.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030267.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030268.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030270.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030271.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030272.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030273.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030274.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030275.png\\"],\\"datePublished\\":\\"2024-09-28T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-10T09:50:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ShawnXie\\",\\"url\\":\\"https://shawnxie.top\\"}]}"]]},"headers":[{"level":2,"title":"PWA很好，但不通用","slug":"pwa很好-但不通用","link":"#pwa很好-但不通用","children":[]},{"level":2,"title":"将任意网页变为桌面应用","slug":"将任意网页变为桌面应用","link":"#将任意网页变为桌面应用","children":[{"level":3,"title":"常用包下载","slug":"常用包下载","link":"#常用包下载","children":[]},{"level":3,"title":"命令行一键打包","slug":"命令行一键打包","link":"#命令行一键打包","children":[]},{"level":3,"title":"定制开发","slug":"定制开发","link":"#定制开发","children":[]},{"level":3,"title":"原理浅析","slug":"原理浅析","link":"#原理浅析","children":[]}]}],"git":{"createdTime":1746870629000,"updatedTime":1746870629000,"contributors":[{"name":"Shawn Xie","username":"Shawn Xie","email":"xiexiao064@gmail.com","commits":1,"url":"https://github.com/Shawn Xie"}]},"readingTime":{"minutes":4.16,"words":1248},"filePathRelative":"blogs/tools/one-cmd-web-to-app.md","localizedDate":"2024年9月28日","excerpt":"\\n<p>传统意义上，网站不是”用户<strong>拥有</strong>的东西“，而更像是”用户<strong>访问</strong>的地方“，具有以下特点：</p>\\n<ol>\\n<li><strong>用户不访问时，网站不在用户的设备上存在</strong>：这意味着网站不像应用程序那样可以安装在用户的设备上，用户不使用时，网站不会占用设备资源；</li>\\n<li><strong>用户只能通过打开浏览器访问网站</strong>：用户需要主动打开浏览器，输入网址或点击链接才能访问网站；</li>\\n<li><strong>高度依赖网络连接</strong>：网站需要网络连接才能访问，如果用户没有网络，就无法访问网站。</li>\\n</ol>\\n<p>但如果我们发现了一个有意思的网站，想拥有它，这时就不希望它是传统意义上的网站了，更希望是一个原生的APP。这样当我们使用时，点击一个图标即可打开，提供沉浸式的用户体验。</p>\\n","autoDesc":true}');export{d as comp,o as data};
