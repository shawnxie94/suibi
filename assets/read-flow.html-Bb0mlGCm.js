import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as s,a as n,o as t}from"./app-CPjHyBDD.js";const l={};function p(r,i){return t(),e("div",null,[i[0]||(i[0]=s('<h1 id="碎片时间刷文章-懒人阅读方案分享" tabindex="-1"><a class="header-anchor" href="#碎片时间刷文章-懒人阅读方案分享"><span>碎片时间刷文章！懒人阅读方案分享</span></a></h1><p>成年人缓解焦虑的三种方式：<strong>阅读、运动和冥想</strong>。其中阅读的门槛和成本最低，通过碎片化阅读能有效利用垃圾时间，在缓解焦虑的同时提升自己。但在这个信息爆炸的时代，优质信息反而更难发现。</p><p>首先是<strong>信息分散</strong>，各类APP、公众号、网站和newsletter像一盘散沙，阅读时需要反复切换、筛选，进一步消耗本就稀缺的时间和精力。</p><p>其次是<strong>信息密度低</strong>，内容形式日益短视频化，降低了碎片化阅读的效率。</p><p>再者是<strong>算法困境</strong>，各类APP为留住用户都会使用推荐算法，通过分析用户的行为和偏好，推荐“感兴趣”的内容给用户，但算法收集的信息毕竟有限，会导致推荐的内容单一，用户的行为又会进一步加重这种单一化，最终形成信息茧房。</p><p>最后是<strong>AI的冲击</strong>，低成本的AI工具快速生成了大量垃圾内容，充斥在各大平台，严重干扰到有价值内容的获取。</p><p>针对以上问题，如果有这样一个工具，能够统一整合所有类型的信息源，让我们在碎片化的时间里，<strong>像刷短视频一样阅读</strong>，岂不美滋滋？</p>',7)),n(" more "),i[1]||(i[1]=s(`<h2 id="基本思路" tabindex="-1"><a class="header-anchor" href="#基本思路"><span>基本思路</span></a></h2><p>基本思路见下图，大体包含四个部分：</p><ul><li><strong>信息收集</strong>：标准化信息源内容拉取过程；</li><li><strong>信息存储</strong>：云端数据存储，支持多端快速访问；</li><li><strong>信息阅读</strong>：碎片化阅读，注重效率和体验；</li><li><strong>信息留存</strong>：一键留存，扩充个人知识库。</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101720464.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="详细方案" tabindex="-1"><a class="header-anchor" href="#详细方案"><span>详细方案</span></a></h2><p>介绍一种具体的实现方案，大家可以自行折腾平替方案。</p><h3 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h3><h4 id="准备运行环境" tabindex="-1"><a class="header-anchor" href="#准备运行环境"><span>准备运行环境</span></a></h4><p>推荐使用阿里云、腾讯云和UCloud等云服务器，也可以使用自己的电脑。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101046200.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="安装宝塔面板" tabindex="-1"><a class="header-anchor" href="#安装宝塔面板"><span>安装宝塔面板</span></a></h4><p><a href="https://www.bt.cn/new/index.html" target="_blank" rel="noopener noreferrer">宝塔面板</a>是一款服务器管理软件，支持windows和linux系统，可以通过Web端轻松管理服务器，提升运维效率。例如：创建管理网站、FTP、数据库，拥有可视化文件管理器，可视化软件管理器，可视化CPU、内存、流量监控图表，计划任务等功能。</p><p>简而言之，它能够简化服务器操作，减少大量繁琐的环境配置工作。</p><ul><li>云厂商一键安装宝塔面板</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101049740.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>手动安装宝塔面板</li></ul><p>Windows直接下载软件安装，Linux系统使用命令安装（<a href="https://www.bt.cn/new/download.html" target="_blank" rel="noopener noreferrer">官方安装文档</a>）：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /usr/bin/curl ];</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> curl -sSO https://download.bt.cn/install/install_panel.sh;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install_panel.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ed8484bec</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>宝塔面板主页</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101055001.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="安装mysql" tabindex="-1"><a class="header-anchor" href="#安装mysql"><span>安装MySQL</span></a></h4><p>用来存储RSS源和文章内容。宝塔面板支持各种数据库的快捷创建和配置，步骤：</p><ul><li>点击数据库边栏，选择对应的数据库类型并安装环境</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101106730.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>环境安装完成后，点击“添加数据库”创建（具体创建参数在工具使用DB时说明）</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101109934.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="对接方式统一" tabindex="-1"><a class="header-anchor" href="#对接方式统一"><span>对接方式统一</span></a></h3><p>数据源对接方式采用<a href="https://zh.wikipedia.org/wiki/RSS" target="_blank" rel="noopener noreferrer">RSS</a>，它是一种消息来源格式规范，用以聚合多个网站更新的内容并自动通知网站订阅者。这个规范很久远了，已从曾经的互联网“宠儿”变成了如今的“弃子”。但针对本文场景却是一个不错的选择，确定了规范就能标准化对接方式，况且还有不少怀旧人士在使用和折腾RSS。</p><p>使用 RSS 的一大难题是找到“订阅源”，因为不是所有的信息源都支持RSS订阅，如果不支持则需要通过工具为其生成。</p><h4 id="有rss订阅" tabindex="-1"><a class="header-anchor" href="#有rss订阅"><span>有RSS订阅</span></a></h4><p>一些网站提供了明显的RSS订阅链接：</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101131338.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果网页没有明显的RSS订阅链接，可以通过油猴脚本快速查找：</p><ul><li>安装<a href="https://chromewebstore.google.com/detail/%E7%AF%A1%E6%94%B9%E7%8C%B4/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener noreferrer">篡改猴</a>浏览器插件并配置<a href="https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss" target="_blank" rel="noopener noreferrer">RSS+</a>脚本</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101136358.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>检索网页RSS订阅源</li></ul><p>如果网页提供了订阅源，则会在页面右下角显示数字，点击后可查看订阅源详情。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101138241.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="无rss订阅" tabindex="-1"><a class="header-anchor" href="#无rss订阅"><span>无RSS订阅</span></a></h4><p>如果信息源本身不提供RSS，通过下面这些工具能够覆盖90%场景的RSS订阅源生成。</p><ol><li><a href="https://github.com/cooderl/wewe-rss" target="_blank" rel="noopener noreferrer">wewe-rss：公众号转RSS</a></li></ol><p>能够将公众号文章转换成RSS订阅源。宝塔面板配置步骤：</p><ul><li>配置MySQL数据库</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101201484.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>新增Docker编排模版</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101202910.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>模版内容填入：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;3.9&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cooderl/wewe-rss:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">4000:4000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 数据库连接地址(下面password替换为刚刚新建数据库密码，172.17.0.1是容器中宿主机IP)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">DATABASE_URL=mysql://wewe-rss:password@172.17.0.1:3306/wewe-rss?schema=public&amp;connect_timeout=30&amp;pool_timeout=30&amp;socket_timeout=30</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 服务接口请求授权码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">AUTH_CODE=123456</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 提取全文内容模式</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # - FEED_MODE=fulltext</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 定时更新订阅源Cron表达式（每天8、11、17、20点刷新）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CRON_EXPRESSION=0 0 8,11,17,20 * * ?</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 服务接口请求限制，每分钟请求次数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # - MAX_REQUEST_PER_MINUTE=60</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 外网访问时，需设置为服务器的公网 IP 或者域名地址</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # - SERVER_ORIGIN_URL=http://localhost:4000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加Docker容器编排</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101206927.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>wewe-rss配置</li></ul><p>若执行顺利就能在{服务器IP}:4000访问wewe-rss服务了，如果打不开检查一下容器是否正常启动或者端口外网访问防火墙是否开启。</p><p>a. 配置微信读书账号</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101311856.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>b. 添加公众号源</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101318012.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>c. 获取RSS订阅源</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101319691.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><a href="https://github.com/DIYgod/RSSHub" target="_blank" rel="noopener noreferrer">RSSHub：万物皆可 RSS</a></li></ol><p>RSSHub 给各种奇奇怪怪的网站生成了 RSS 源，堪称“万物皆可 RSS”。适配了 300 多个网站，，涵盖了知乎、微博、豆瓣、B站、贴吧、斗鱼、小红书、网易云音乐、U2B、Github、Reddit 等国内外主流网站。</p><p>国内访问官网比较慢，可通过宝塔面板自部署，再结合<a href="https://chromewebstore.google.com/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa" target="_blank" rel="noopener noreferrer">RssHub Radar</a>浏览器插件快速获取RSS订阅源。配置步骤：</p><ul><li>宝塔面板安装RSSHub</li></ul><p>在Docker应用商店搜索安装即可。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101341409.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>正常启动后，可在{服务器IP}:1200访问RSSHub服务。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101340524.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>RssHub Radar 插件配置实例地址</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101343885.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>获取RSS订阅源</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101344308.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>自定义爬虫</li></ol><p>如果上述工具都无法满足需求，可通过自定义爬虫来实现RSS订阅源定制生成。虽然有一定技术门槛，但使用现成的爬虫工具结合AI编程，实现难度也不算高。笔者目前定制化诉求不高，这部分暂不展开，等之后有具诉求再写文章讲述。</p><h3 id="信息存储" tabindex="-1"><a class="header-anchor" href="#信息存储"><span>信息存储</span></a></h3><p>信息对接统一后需要一个工具来获取并存储信息。<a href="https://github.com/FreshRSS/FreshRSS" target="_blank" rel="noopener noreferrer">FreshRSS</a>是一个开源的RSS阅读器，支持多平台（web应用），支持自定义订阅，内容分类管理和API（多端集成），非常适合用来进行内容存储和同步。宝塔面板配置步骤：</p><ul><li>数据库配置</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101201684.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>新增Docker编排模版</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101357126.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>模版内容填入：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  freshrss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">freshrss/freshrss:latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">freshrss</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">freshrss-app</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;8900:80&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 主机端口:容器端口</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./data:/var/www/FreshRSS/data</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 持久化数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./extensions:/var/www/FreshRSS/extensions</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 插件目录</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      TZ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Asia/Shanghai</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 时区</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      MYSQL_HOST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">172.17.0.1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      MYSQL_USER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">freshrss</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       # 替换为自己的数据库密码</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      MYSQL_PASSWORD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">password</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      MYSQL_DATABASE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">freshrss</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加Docker容器编排</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101359797.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>FreshRSS配置</li></ul><p>正常部署后就能在{服务器IP}:8900访问FreshRSS了，首次登录会有一些环境检查和配置，按照引导操作即可。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101403533.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>a. 信息源导入</p><p>在订阅管理”导入/导出“中导入事先整理好的RSS订阅源，之后返回主页刷新即可实现内容拉取。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101404498.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>b. 自动刷新</p><p>默认未开启自动刷新，这对懒人来说不太友好，可通过配置宝塔面板定时任务实现定时刷新。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101457371.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> freshrss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> php</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/www/FreshRSS/app/actualize_script.php</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>c. API授权</p><p>为了实现多端接入FreshRSS，需要开启API授权。</p><ul><li>认证配置中开启”允许 API 访问“</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101409415.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>在账户配置”API“管理中设置密码并提交</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101411990.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="多端阅读" tabindex="-1"><a class="header-anchor" href="#多端阅读"><span>多端阅读</span></a></h3><p>终于到了阅读时刻！为了实现随时随地像刷短视频一样阅读，需要在手机上安装<a href="https://github.com/readrops/Readrops" target="_blank" rel="noopener noreferrer">Readrops</a>并连接到FreshRss。Readrops 是一款开源的多服务 RSS 客户端，适用于 Android 平台，它支持本地 RSS 解析、外部服务支持（集成FreshRSS）、分享等功能。</p><ul><li>安装</li></ul><p>在<a href="https://github.com/readrops/Readrops/releases" target="_blank" rel="noopener noreferrer">releases</a>中下载最新apk安装即可。</p><ul><li>FreshRSS账号配置</li></ul><p>在账号管理中添加FreshRSS账号，确认后返回主页刷新内容。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101421950.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>分享模版配置</li></ul><p>首选项最后一项可以设置分享文本模版，方便快速生成内容留存文案。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101424231.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="碎片信息记录-素材化" tabindex="-1"><a class="header-anchor" href="#碎片信息记录-素材化"><span>碎片信息记录（素材化）</span></a></h3><p><a href="https://flomoapp.com/" target="_blank" rel="noopener noreferrer">flomo</a>（浮墨笔记）是一款全平台的卡片笔记工具，能帮助用户快速记录想法与灵感，并更好地回顾过往记录。通过Readrops分享到flomo，实现碎片素材快速记录，方便后续写作时寻找灵感。</p><ul><li>分享到flomo</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101435952.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>flomo回顾</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101434539.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>如果不想折腾这套流程，市面上也有一些现成的产品，推荐网站 bestblogs.dev。提供了大量信息源内容汇总，且结合AI打分对内容进行了精选，每周也能整理精选内容形成周刊并通过邮件推送。网站的信息收集和处理流程已经十分完善，如果你没有太多个性化诉求，完全可以直接使用。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505100947286.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但对笔者来说，个性化比流程完整更重要，以最小成本实现个性化诉求，是我的首要目标。对信息的挑剔感能培养人在内容上的品味。搭建完这套流程后，通过不断优化信息源和阅读转换方案，让我们更好地逃离垃圾信息，冲破信息茧房。</p><div style="text-align:center;"> —— 完 —— </div><hr><p>关注“<strong>肖恩聊技术</strong>”公众号，原创技术文章第一时间推送~</p><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/20241103221454.png" alt="公众号二维码" width="300">`,122))])}const d=a(l,[["render",p]]),o=JSON.parse('{"path":"/blogs/tools/read-flow.html","title":"碎片时间刷文章！懒人阅读方案分享","lang":"zh-CN","frontmatter":{"title":"碎片时间刷文章！懒人阅读方案分享","icon":"en-to-square","date":"2025-05-11T00:00:00.000Z","category":["技术提效"],"tag":["RSS","自动化","碎片阅读","自我提升"],"description":"成年人缓解焦虑的三种方式：阅读、运动和冥想。其中阅读的门槛和成本最低，通过碎片化阅读能有效利用垃圾时间，在缓解焦虑的同时提升自己。但在这个信息爆炸的时代，优质信息反而更难发现。 首先是信息分散，各类APP、公众号、网站和newsletter像一盘散沙，阅读时需要反复切换、筛选，进一步消耗本就稀缺的时间和精力。 其次是信息密度低，内容形式日益短视频化，降...","head":[["meta",{"property":"og:url","content":"https://shawnxie.top/blogs/tools/read-flow.html"}],["meta",{"property":"og:site_name","content":"肖恩聊技术"}],["meta",{"property":"og:title","content":"碎片时间刷文章！懒人阅读方案分享"}],["meta",{"property":"og:description","content":"成年人缓解焦虑的三种方式：阅读、运动和冥想。其中阅读的门槛和成本最低，通过碎片化阅读能有效利用垃圾时间，在缓解焦虑的同时提升自己。但在这个信息爆炸的时代，优质信息反而更难发现。 首先是信息分散，各类APP、公众号、网站和newsletter像一盘散沙，阅读时需要反复切换、筛选，进一步消耗本就稀缺的时间和精力。 其次是信息密度低，内容形式日益短视频化，降..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101720464.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-10T13:54:57.000Z"}],["meta",{"property":"article:tag","content":"RSS"}],["meta",{"property":"article:tag","content":"自动化"}],["meta",{"property":"article:tag","content":"碎片阅读"}],["meta",{"property":"article:tag","content":"自我提升"}],["meta",{"property":"article:published_time","content":"2025-05-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-10T13:54:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"碎片时间刷文章！懒人阅读方案分享\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101720464.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101046200.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101049740.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101055001.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101106730.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101109934.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101131338.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101136358.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101138241.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101201484.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101202910.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101206927.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101311856.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101318012.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101319691.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101341409.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101340524.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101343885.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101344308.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101201684.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101357126.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101359797.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101403533.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101404498.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101457371.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101409415.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101411990.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101421950.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101424231.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101435952.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101434539.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505100947286.png\\"],\\"datePublished\\":\\"2025-05-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-10T13:54:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ShawnXie\\",\\"url\\":\\"https://shawnxie.top\\"}]}"]]},"headers":[{"level":2,"title":"基本思路","slug":"基本思路","link":"#基本思路","children":[]},{"level":2,"title":"详细方案","slug":"详细方案","link":"#详细方案","children":[{"level":3,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[]},{"level":3,"title":"对接方式统一","slug":"对接方式统一","link":"#对接方式统一","children":[]},{"level":3,"title":"信息存储","slug":"信息存储","link":"#信息存储","children":[]},{"level":3,"title":"多端阅读","slug":"多端阅读","link":"#多端阅读","children":[]},{"level":3,"title":"碎片信息记录（素材化）","slug":"碎片信息记录-素材化","link":"#碎片信息记录-素材化","children":[]}]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1746885297000,"updatedTime":1746885297000,"contributors":[{"name":"Shawn Xie","username":"Shawn Xie","email":"xiexiao064@gmail.com","commits":1,"url":"https://github.com/Shawn Xie"}]},"readingTime":{"minutes":8.86,"words":2659},"filePathRelative":"blogs/tools/read-flow.md","localizedDate":"2025年5月11日","excerpt":"\\n<p>成年人缓解焦虑的三种方式：<strong>阅读、运动和冥想</strong>。其中阅读的门槛和成本最低，通过碎片化阅读能有效利用垃圾时间，在缓解焦虑的同时提升自己。但在这个信息爆炸的时代，优质信息反而更难发现。</p>\\n<p>首先是<strong>信息分散</strong>，各类APP、公众号、网站和newsletter像一盘散沙，阅读时需要反复切换、筛选，进一步消耗本就稀缺的时间和精力。</p>\\n<p>其次是<strong>信息密度低</strong>，内容形式日益短视频化，降低了碎片化阅读的效率。</p>\\n<p>再者是<strong>算法困境</strong>，各类APP为留住用户都会使用推荐算法，通过分析用户的行为和偏好，推荐“感兴趣”的内容给用户，但算法收集的信息毕竟有限，会导致推荐的内容单一，用户的行为又会进一步加重这种单一化，最终形成信息茧房。</p>\\n<p>最后是<strong>AI的冲击</strong>，低成本的AI工具快速生成了大量垃圾内容，充斥在各大平台，严重干扰到有价值内容的获取。</p>\\n<p>针对以上问题，如果有这样一个工具，能够统一整合所有类型的信息源，让我们在碎片化的时间里，<strong>像刷短视频一样阅读</strong>，岂不美滋滋？</p>\\n","autoDesc":true}');export{d as comp,o as data};
