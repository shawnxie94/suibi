import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as i,a as n,o as r}from"./app-CPjHyBDD.js";const s={};function g(o,e){return r(),a("div",null,[e[0]||(e[0]=i('<h1 id="文章图片自动管理方案-github-picgo-jsdelivr-obsidian" tabindex="-1"><a class="header-anchor" href="#文章图片自动管理方案-github-picgo-jsdelivr-obsidian"><span>文章图片自动管理方案：Github + PicGo + jsDelivr + Obsidian</span></a></h1><p>笔者在<a href="https://mp.weixin.qq.com/s/HDUjesD7Qs5o9qm3bPs_ZA" target="_blank" rel="noopener noreferrer">我的内容创作最强搭子——Kimi</a>中介绍了周刊创作时素材收集和整理的基本思路，这之后便会进行文章撰写。</p><p>写作在电脑本地进行，采用 <a href="https://www.markdownguide.org" target="_blank" rel="noopener noreferrer">Markdown</a> 语法，不过其有一个缺点——<strong>不能所见即所得</strong>。因此需要一个专业的 Markdown 写作编辑器来展示效果，笔者目前使用双链笔记工具 Obsidian。</p><p>另外本地写作使用 Markdown 时还有一个痛点——<strong>图片管理困难</strong>。图片粘贴后默认存放到本地目录下，如果路径进行了变更还需要手动调整图片的引用。前期周刊写完后还需要一一检查图片的引用，相当的痛苦，这对写作意愿有不小的消耗。</p><p>针对上述第二个痛点，本文将介绍一种图片管理方案，不花一分钱即可实现文章图片自动管理，做到“<strong>一次写作，到处（粘贴）发布</strong>”。</p>',5)),n(" more "),e[1]||(e[1]=i('<h2 id="工具介绍" tabindex="-1"><a class="header-anchor" href="#工具介绍"><span>工具介绍</span></a></h2><p>对本文涉及的工具进行简要介绍：</p><ul><li><strong><a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a></strong></li></ul><p>代码托管云服务网站，帮助开发者存储和管理其项目源代码。在本文中充当<strong>免费图床</strong>作用。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231816214.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong><a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener noreferrer">PicGo</a></strong></li></ul><p>一个用于快速上传图片并获取图片 URL 链接的工具。在本文中提供<strong>图片上传+管理</strong>功能。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231814767.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong><a href="https://www.jsdelivr.com/" target="_blank" rel="noopener noreferrer">jsDelivr</a></strong></li></ul><p>国外的优秀公共 CDN 服务提供商，也是首个打通中国大陆与海外的免费 CDN 服务。在本文中用来<strong>加速 Github 仓库的图片链接访问速度</strong>。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231817239.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong><a href="https://obsidian.md/" target="_blank" rel="noopener noreferrer">Obsidian</a></strong></li></ul><p>一款强大的知识管理和笔记软件，以Markdown编辑器为基础，支持双向链接和图谱视图，帮助用户构建知识网络。在本文中配合插件<a href="https://github.com/renmu123/obsidian-image-auto-upload-plugin" target="_blank" rel="noopener noreferrer">image-auto-upload</a>实现文章<strong>图片自动管理</strong>。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231819700.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="详细方案" tabindex="-1"><a class="header-anchor" href="#详细方案"><span>详细方案</span></a></h2><p><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231847843.png" alt="" loading="lazy"><br> 上图为各工具交互示意图，黑色箭头表示图片上传过程，红色箭头表示图片访问过程，下面将介绍详细配置步骤：</p><h3 id="第一步-配置github免费图床" tabindex="-1"><a class="header-anchor" href="#第一步-配置github免费图床"><span>第一步：配置GitHub免费图床</span></a></h3><h4 id="_1-创建公共仓库" tabindex="-1"><a class="header-anchor" href="#_1-创建公共仓库"><span>① 创建公共仓库</span></a></h4><p>在Github中<a href="https://github.com/new" target="_blank" rel="noopener noreferrer">创建</a>一个公共仓库，用于存放上传的图片。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231928488.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-生成github访问token" tabindex="-1"><a class="header-anchor" href="#_2-生成github访问token"><span>② 生成Github访问token</span></a></h4><ul><li>在<a href="https://github.com/settings/tokens" target="_blank" rel="noopener noreferrer">开发设置</a>中选择生成新token</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231930473.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>选择永不过期，并按照下图设置访问权限</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231931131.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>拉到最下面，点击 <code>Generate token</code>，生成并复制（一定要保存好token，只会在创建时显示一次）</li></ul><h3 id="第二步-安装picgo并配置图床" tabindex="-1"><a class="header-anchor" href="#第二步-安装picgo并配置图床"><span>第二步：安装PicGo并配置图床</span></a></h3><ul><li>访问<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener noreferrer">releases</a>找到对应操作系统安装包下载并安装</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231937398.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>打开PicGo，在图床设置中配置好GitHub设置（token即为第一步中申请值）</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231940672.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="第三步-配置图片链接cdn加速" tabindex="-1"><a class="header-anchor" href="#第三步-配置图片链接cdn加速"><span>第三步：配置图片链接CDN加速</span></a></h3><p>按照下述格式配置图片链接即可享有jsdelivr提供的加速能力。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>https://cdn.jsdelivr.net/gh/{github账号名}/{仓库名}/{图片路径}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在PicGo中GitHub设置中设定自定义域名，即可自动生成加速后图片链接。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231949714.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="第四步-obsidian图片自动上传配置" tabindex="-1"><a class="header-anchor" href="#第四步-obsidian图片自动上传配置"><span>第四步：Obsidian图片自动上传配置</span></a></h3><ul><li>在Obsidian的偏好“第三方插件”配置中关闭安全模式，之后浏览插件市场安装image-auto-upload并开启插件</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231951700.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>插件设置中已经默认配好了PicGo相关参数，如有需要也可以自行调整</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231953924.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>按上述配置好后，即可开启丝滑的写作体验</li></ul><p>将图片粘贴到文章中，将自动上传并展示。Markdown图文内容变成了<strong>纯静态数据</strong>，想粘贴就粘贴。</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411232002552.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>文章写好后再结合之前推荐的<a href="https://mp.weixin.qq.com/s/4Du8pyhz9357lxkG0Z8gpQ" target="_blank" rel="noopener noreferrer">doocs/md</a>公众号排版工具，只需<strong>点点点</strong>（粘贴markdown到md，粘贴排版后内容到公众号，再点击发布），一篇规整的公众号文章就发出来啦！</p><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411232018369.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>图片存储还有很多其他方案（专业图床），有兴趣的朋友可以自行检索一下。如果图片链接可以顺畅访问则不需要配置cdn加速，例如使用Gitee作为图床。另外PicGo还提供了大量插件，如果有特殊的需求不妨看看。</p><div style="text-align:center;"> —— 完 —— </div><hr><p>关注“<strong>肖恩聊技术</strong>”公众号，原创技术文章第一时间推送~</p><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/20241103221454.png" alt="公众号二维码" width="300">',52))])}const d=t(s,[["render",g]]),h=JSON.parse('{"path":"/blogs/tools/picture-manage.html","title":"文章图片自动管理方案","lang":"zh-CN","frontmatter":{"title":"文章图片自动管理方案","icon":"en-to-square","date":"2024-11-23T00:00:00.000Z","category":["技术提效"],"tag":["图床","自动化","写作工具","教程"],"description":"笔者在我的内容创作最强搭子——Kimi中介绍了周刊创作时素材收集和整理的基本思路，这之后便会进行文章撰写。 写作在电脑本地进行，采用 Markdown 语法，不过其有一个缺点——不能所见即所得。因此需要一个专业的 Markdown 写作编辑器来展示效果，笔者目前使用双链笔记工具 Obsidian。 另外本地写作使用 Markdown 时还有一个痛点——...","head":[["meta",{"property":"og:url","content":"https://shawnxie.top/blogs/tools/picture-manage.html"}],["meta",{"property":"og:site_name","content":"肖恩聊技术"}],["meta",{"property":"og:title","content":"文章图片自动管理方案"}],["meta",{"property":"og:description","content":"笔者在我的内容创作最强搭子——Kimi中介绍了周刊创作时素材收集和整理的基本思路，这之后便会进行文章撰写。 写作在电脑本地进行，采用 Markdown 语法，不过其有一个缺点——不能所见即所得。因此需要一个专业的 Markdown 写作编辑器来展示效果，笔者目前使用双链笔记工具 Obsidian。 另外本地写作使用 Markdown 时还有一个痛点——..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231816214.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-10T13:54:57.000Z"}],["meta",{"property":"article:tag","content":"图床"}],["meta",{"property":"article:tag","content":"自动化"}],["meta",{"property":"article:tag","content":"写作工具"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-11-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-10T13:54:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文章图片自动管理方案\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231816214.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231814767.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231817239.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231819700.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231847843.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231928488.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231930473.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231931131.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231937398.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231940672.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231949714.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231951700.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231953924.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411232002552.png\\",\\"https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411232018369.png\\"],\\"datePublished\\":\\"2024-11-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-10T13:54:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ShawnXie\\",\\"url\\":\\"https://shawnxie.top\\"}]}"]]},"headers":[{"level":2,"title":"工具介绍","slug":"工具介绍","link":"#工具介绍","children":[]},{"level":2,"title":"详细方案","slug":"详细方案","link":"#详细方案","children":[{"level":3,"title":"第一步：配置GitHub免费图床","slug":"第一步-配置github免费图床","link":"#第一步-配置github免费图床","children":[]},{"level":3,"title":"第二步：安装PicGo并配置图床","slug":"第二步-安装picgo并配置图床","link":"#第二步-安装picgo并配置图床","children":[]},{"level":3,"title":"第三步：配置图片链接CDN加速","slug":"第三步-配置图片链接cdn加速","link":"#第三步-配置图片链接cdn加速","children":[]},{"level":3,"title":"第四步：Obsidian图片自动上传配置","slug":"第四步-obsidian图片自动上传配置","link":"#第四步-obsidian图片自动上传配置","children":[]}]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1746885297000,"updatedTime":1746885297000,"contributors":[{"name":"Shawn Xie","username":"Shawn Xie","email":"xiexiao064@gmail.com","commits":1,"url":"https://github.com/Shawn Xie"}]},"readingTime":{"minutes":3.92,"words":1175},"filePathRelative":"blogs/tools/picture-manage.md","localizedDate":"2024年11月23日","excerpt":"\\n<p>笔者在<a href=\\"https://mp.weixin.qq.com/s/HDUjesD7Qs5o9qm3bPs_ZA\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">我的内容创作最强搭子——Kimi</a>中介绍了周刊创作时素材收集和整理的基本思路，这之后便会进行文章撰写。</p>\\n<p>写作在电脑本地进行，采用 <a href=\\"https://www.markdownguide.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Markdown</a> 语法，不过其有一个缺点——<strong>不能所见即所得</strong>。因此需要一个专业的 Markdown 写作编辑器来展示效果，笔者目前使用双链笔记工具 Obsidian。</p>\\n<p>另外本地写作使用 Markdown 时还有一个痛点——<strong>图片管理困难</strong>。图片粘贴后默认存放到本地目录下，如果路径进行了变更还需要手动调整图片的引用。前期周刊写完后还需要一一检查图片的引用，相当的痛苦，这对写作意愿有不小的消耗。</p>\\n<p>针对上述第二个痛点，本文将介绍一种图片管理方案，不花一分钱即可实现文章图片自动管理，做到“<strong>一次写作，到处（粘贴）发布</strong>”。</p>\\n","autoDesc":true}');export{d as comp,h as data};
