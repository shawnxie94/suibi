<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://shawnxie.top/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://shawnxie.top/rss.xml" rel="self" type="application/rss+xml"/>
    <title>肖恩聊技术</title>
    <link>https://shawnxie.top/</link>
    <description>持续提供有价值的技术内容</description>
    <language>zh-CN</language>
    <pubDate>Sat, 10 May 2025 13:56:14 GMT</pubDate>
    <lastBuildDate>Sat, 10 May 2025 13:56:14 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>AI探索</category>
    <category>技术提效</category>
    <category>代码可视化</category>
    <category>基础理论</category>
    <category>历史考究</category>
    <category>知识点++</category>
    <category>学习随笔</category>
    <category>肖恩杂谈</category>
    <item>
      <title>AI Agent初体验：变革正悄然发生</title>
      <link>https://shawnxie.top/blogs/ai/ai-agent.html</link>
      <guid>https://shawnxie.top/blogs/ai/ai-agent.html</guid>
      <source url="https://shawnxie.top/rss.xml">AI Agent初体验：变革正悄然发生</source>
      <description>2022年12月OpenAI推出ChatGPT，经过2023一整年迭代和各方势力追赶，在24年迎来了集体的爆发。各式各样的工具层出不穷，从最开始的聊天机器人，到AI写作工具、AI图像工具、AI视频工具、AI幻灯片工具和AI编程工具等等。好像任何和内容创作相关的场景都可以和大模型挂钩，都能产生“化学反应”。</description>
      <category>AI探索</category>
      <category>技术提效</category>
      <pubDate>Sat, 18 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>2022年12月OpenAI推出ChatGPT，经过2023一整年迭代和各方势力追赶，在24年迎来了集体的爆发。各式各样的工具层出不穷，从最开始的聊天机器人，到AI写作工具、AI图像工具、AI视频工具、AI幻灯片工具和AI编程工具等等。好像任何和内容创作相关的场景都可以和大模型挂钩，都能产生“化学反应”。</p>
<!-- more -->
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421727.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>AI经历了三次发展浪潮，这次是第三次高峰。技术的变革会经过多次的震荡，但每一次发展浪潮都会让更多的泡沫破灭，使得下次的发展达到更高的高度。作为本次浪潮必将被波及的人员，是时候全面拥抱AI了，早点入局能掌握更多主动性，万一这次真实现 <strong>AGI</strong>（通用人工智能）了呢。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421729.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>相关概念</h2>
<h3>大模型（Large Language Model）</h3>
<p><strong>大型语言模型</strong>（Large Language Model），通常指的是在机器学习和人工智能领域，尤其是深度学习领域中，<strong>参数数量非常多的模型</strong>。这些模型因为拥有大量的参数，能够捕捉和学习到数据中的复杂模式和关系。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421730.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>大模型的一些关键特点：</p>
<p><strong>① 参数数量</strong>：大模型通常拥有数百万甚至数十亿个参数，这些参数在训练过程中不断调整以更好地拟合数据；</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421731.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>GPT-4参数约1.76T</span></span>
<span class="line"><span>GPT-4o参数约200B</span></span>
<span class="line"><span>GPT-4o mini参数约8B</span></span>
<span class="line"><span>o1-preview参数约300B</span></span>
<span class="line"><span>o1-mini参数约100B</span></span>
<span class="line"><span>Claude 3.5 Sonnet参数约175B</span></span>
<span class="line"><span>DeepSeek-V3参数约为671B，激活37B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PS：1B"的全称是"1 Billion"，表示十亿。</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② 计算资源需求</strong>：由于参数众多，大模型需要大量的计算资源，包括高性能的GPU或TPU等硬件加速器；</p>
<p><strong>③ 数据需求</strong>：为了训练这些模型，需要大量的数据来确保模型的泛化能力，避免过拟合。</p>
<p><strong>④ 复杂性</strong>：大模型能够处理更复杂的任务，如自然语言处理（NLP）、计算机视觉（CV）等，并且通常在这些任务上表现更好。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421732.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><strong>语言大模型（NLP）</strong>：是指在自然语言处理领域中的一类大模型，通常用于处理文本数据和理解自然语言。这类大模型的主要特点是它们在大规模语料库上进行了训练，以学习自然语言的各种语法、语义和语境规则。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421733.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>
<p><strong>视觉大模型（CV）</strong>：是指在计算机视觉领域中使用的大模型，通常用于图像处理和分析。这类模型通过在大规模图像数据上进行训练，可以实现各种视觉任务，如图像分类、目标检测、图像分割、姿态估计、人脸识别等。</p>
</li>
<li>
<p><strong>多模态大模型</strong>：是指能够处理多种不同类型数据的大模型，例如文本、图像、音频等多模态数据。这类模型结合了 NLP 和 CV 的能力，以实现对多模态信息的综合理解和分析，从而能够更全面地理解和处理复杂的数据。</p>
</li>
</ul>
<p><strong>⑤ 泛化能力</strong>：是指一个模型在面对新的、未见过的数据时，能够正确理解和预测这些数据的能力。理论上，参数更多的模型具有更强的泛化能力，能够在未见过的数据上表现良好。</p>
<p><strong>⑥ 可扩展性</strong>：大模型可以通过增加参数数量来扩展，以适应更复杂的任务或提高性能。</p>
<p><strong>⑦ 研究和应用</strong>：大模型在学术研究和工业应用中都非常受欢迎，它们推动了许多领域的技术进步。</p>
<p><strong>⑧ 成本</strong>：训练和部署大模型的成本相对较高，这限制了它们的普及。</p>
<p><strong>⑨ 环境影响</strong>：大模型的训练和运行可能会消耗大量的能源，对环境产生影响。</p>
<blockquote>
<p>扩展阅读：<a href="https://mp.weixin.qq.com/s/k4qzJjI60t_F8Dx7ASEI-g" target="_blank" rel="noopener noreferrer">原来用初中数学就能看懂大语言模型的奥秘</a></p>
</blockquote>
<p>虽然LLM很强大，但当前市面上的模型仍有缺陷，主要问题有：</p>
<ul>
<li><strong>信息偏差/幻觉</strong></li>
<li><strong>知识更新滞后性</strong></li>
<li><strong>内容不可追溯</strong></li>
<li><strong>领域专业知识能力欠缺</strong></li>
<li><strong>推理能力限制</strong></li>
<li><strong>应用场景适应性受限</strong></li>
<li><strong>长文本处理能力较弱</strong></li>
</ul>
<p>其中热度较高的问题——<strong>幻觉</strong>，即生成的内容与可验证的真实世界事实不一致，或者偏离用户指令或提供的上下文信息。</p>
<p>幻觉产的原因有多个：</p>
<ul>
<li><strong>训练数据的局限性</strong>：LLM是基于大量文本数据训练的，但这些数据可能会存在偏差、错误或过时的信息。</li>
<li><strong>模型结构的限制</strong>：尽管LLM非常强大，但它们本质上是基于统计模式的预测模型，无法真正”理解”信息。</li>
<li><strong>上下文理解不充分</strong>：LLM可能无法准确把握复杂的上下文关系，导致生成不恰当的内容。</li>
<li><strong>过度泛化</strong>：模型可能会过度依赖某些模式，导致在新情况下产生错误的推断。</li>
<li><strong>缺乏实时更新</strong>：LLM通常是基于静态数据训练的，无法及时获取最新信息。</li>
</ul>
<p>一般缓解幻觉的方法有：</p>
<ul>
<li><strong>提示工程(Prompt Engineering)</strong></li>
</ul>
<p>就是那些如雷贯耳的名词：<strong>Prompt、RAG、反馈</strong>机制。相关概念和技术比较多，大家感兴趣可以自行检索一下或阅读<a href="https://www.promptingguide.ai/zh" target="_blank" rel="noopener noreferrer">提示工程指南</a>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181355837.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><strong>模型开发(Developing Models)</strong></li>
</ul>
<p>从模型架构和训练过程上改善，一般是更多的参数、更好的数据质量。一些关键词：<strong>解码策略 、知识图谱 、监督微调</strong>等。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181358295.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>智能体（AI Agent）</h3>
<p><strong>智能体</strong>（Intelligent Agent）是一个计算机科学和人工智能领域的概念，它指的是一个能够感知其环境并作出行动以实现某些目标或任务的系统。智能体可以是软件或硬件，或者是两者的结合。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421734.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>大模型智能体</strong>是一种基于大型语言模型（LLM）构建的智能体，它具备环境感知能力、自主理解、决策制定及执行行动的能力。这种智能体能够模拟独立思考过程，灵活调用各类工具，逐步达成预设目标。在技术架构上，大模型智能体从面向过程的架构转变为面向目标的架构，旨在通过感知、思考与行动的紧密结合，完成复杂任务。</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>AI Agent = LLM + Planning + Feedback + Tool use</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421735.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>大模型智能体可以理解为各种技术的综合应用，运用的技术（RAG、提示词工程、知识库和实时检索等）能在一定程度上弥补大模型的缺陷，提升生成内容质量。其核心组成部分包括<strong>感知</strong>（perception）、<strong>大脑</strong>（brain）和<strong>行动</strong>（action），更细化的构成有：</p>
<p><strong>① 感知系统</strong>（Perception）：</p>
<ul>
<li>传感器输入：智能体通过传感器收集环境信息，如视觉、声音、触觉等。</li>
<li>数据预处理：对收集到的数据进行清洗、标准化等处理，以便于进一步分析。</li>
</ul>
<p><strong>② 认知系统</strong>（Cognition）：</p>
<ul>
<li>大模型：核心的人工智能模型，能够处理和理解感知系统收集的数据。</li>
<li>知识库：存储相关的知识信息，供智能体进行推理和决策。</li>
<li>推理引擎：基于逻辑和规则进行推理，以形成决策或解决问题。</li>
</ul>
<p><strong>③ 记忆系统</strong>（Memory）：</p>
<ul>
<li>短期记忆：存储当前任务相关的信息。</li>
<li>长期记忆：存储历史数据和经验，用于学习和模式识别。</li>
</ul>
<p><strong>④ 决策系统</strong>（Decision Making）：</p>
<ul>
<li>策略生成：根据感知和认知的结果，生成可能的行动方案。</li>
<li>优化算法：选择最佳行动方案，可能涉及多目标优化、强化学习等技术。</li>
</ul>
<p><strong>⑤ 行动系统</strong>（Action）：</p>
<ul>
<li>执行器：将决策转化为实际的物理动作或指令。</li>
<li>反馈机制：执行后的结果反馈给感知系统，形成闭环控制。</li>
</ul>
<p><strong>⑥ 学习系统</strong>（Learning）：</p>
<ul>
<li>监督学习：通过标记数据学习特定任务。</li>
<li>无监督学习：在没有明确标记的情况下发现数据中的模式。</li>
<li>强化学习：通过与环境的交互学习最优策略。</li>
</ul>
<p><strong>⑦ 交互系统</strong>（Interaction）：</p>
<ul>
<li>自然语言处理：理解和生成自然语言，与人类或其他智能体交流。</li>
<li>多模态交互：结合视觉、听觉等多种感官信息进行交互。</li>
</ul>
<p><strong>⑧ 伦理和安全系统</strong>（Ethics and Safety）：</p>
<ul>
<li>伦理决策：确保智能体的决策符合伦理标准。</li>
<li>安全监控：监控智能体的行为，防止潜在的安全风险。</li>
</ul>
<p><strong>⑨ 用户界面</strong>（User Interface）：</p>
<ul>
<li>可视化界面：为用户提供直观的操作界面。</li>
<li>交互设计：设计用户与智能体交互的方式。</li>
</ul>
<p><strong>⑩ 硬件平台</strong>（Hardware Platform）：</p>
<ul>
<li>计算资源：提供必要的计算能力，如GPU、TPU等。</li>
<li>存储资源：存储模型、数据和结果。</li>
</ul>
<p>一些常见的智能体和智能体构建平台（来源 <a href="https://github.com/e2b-dev/awesome-ai-agents" target="_blank" rel="noopener noreferrer">awesome-ai-agents</a>）：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181418745.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>国内智能体构建平台举例：</p>
<ul>
<li><a href="https://www.coze.cn/" target="_blank" rel="noopener noreferrer">coze</a></li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421736.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><a href="https://agents.baidu.com/center" target="_blank" rel="noopener noreferrer">文心智能体平台</a></li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421738.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<blockquote>
<p>扩展阅读：<a href="https://www.anthropic.com/research/building-effective-agents" target="_blank" rel="noopener noreferrer">Building effective agents</a> （Claude官方：构建高效的智能体指南）</p>
</blockquote>
<h2>实践案例</h2>
<h3>搜索智能体</h3>
<p>顾名思义，就是能够帮你自动检索并总结相关内容的智能体。如果你不擅长信息检索，苦于找不到技术问题或方案的解决思路，那么它可以成为你获取信息的第一步。</p>
<p>易用性：⭐️⭐️⭐️⭐️⭐️</p>
<h4><a class="header-anchor" href="#中文-kimi-探索版"><span>中文：</span></a><a href="https://kimi.moonshot.cn/" target="_blank" rel="noopener noreferrer">Kimi 探索版</a></h4>
<p>具备 AI <strong>自主搜索</strong>能力，可以<strong>模拟人类的推理思考过程</strong>，多级分解复杂问题，执行深度搜索，并<strong>即时反思</strong>改进结果，提供更全面和准确的答案，帮助你更高效地完成分析调研等复杂任务。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421739.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4><a class="header-anchor" href="#英文-storm"><span>英文：</span></a><a href="https://storm.genie.stanford.edu/" target="_blank" rel="noopener noreferrer">Storm</a></h4>
<p><strong>STORM</strong> 是一个利用大型语言模型（LLM）的系统，能够从互联网搜索中撰写类似维基百科的文章。核心在于自动提出好问题，它采用了两种策略来提高问题的深度和广度：<strong>视角引导的问题提问和模拟对话</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421740.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421741.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>问答智能体</h3>
<p>这里特指<strong>私有知识库问答智能体</strong>，能在理解相关资料的前提下总结核心知识点，并基于已有知识给出回答。</p>
<p>易用性：⭐️⭐️⭐️⭐️</p>
<p>底层核心技术包括<strong>提示词和RAG</strong>。提示词的好坏对结果的生成质量影响很大。</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>一个优秀的 Prompt = 角色 + 场景 + 任务 + 输出要求</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>RAG</strong>（检索增强生成）是一个将输入与一组相关的支持文档结合起来的技术，这些文档通常来自于像维基百科这样的来源。这些文档被添加到输入提示中，一起送入文本生成器，从而产生最终的输出。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501130005262.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>Ollama+AnythingLLM搭建本地知识库</h4>
<p><a href="https://github.com/ollama/ollama" target="_blank" rel="noopener noreferrer">Ollama</a> 是一个免费的开源项目，是一个专为在本地机器上便捷部署和运行 LLM 而设计的开源工具，可在<strong>本地运行各种开源 LLM</strong>，它让用户无需深入了解复杂的底层技术，就能轻松地加载、运行和交互各种LLM模型。</p>
<p><a href="https://github.com/Mintplex-Labs/anything-llm" target="_blank" rel="noopener noreferrer">AnythingLLM</a> 是一个全栈应用程序，可以使用商业现成的 LLM 或流行的开源 LLM 和 vectorDB 解决方案来构建私有 ChatGPT。可以在本地运行，也可以远程托管。<strong>能够在智能聊天中检索提供的任何文件</strong>。</p>
<p>下面简单介绍一下搭建步骤：</p>
<p><strong>① 本地大模型安装</strong></p>
<ul>
<li>安装 ollama</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421742.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>安装 llama</li>
</ul>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ollama</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> llama3.2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421743.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>服务器模式启动大模型</li>
</ul>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ollama</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> serve</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421744.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>② 搭建本地LLM交互界面</strong></p>
<ul>
<li>安装 anythingllm</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421745.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>模型配置</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421746.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>导入本地文档</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421747.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>开始智能问答</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421748.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>PS：回答的效果依赖大模型的质量，参数越多的大模型对硬件条件要求更大，大家量力而行。</p>
<h3>编程智能体</h3>
<p>编程智能体是利用LLM来辅助编程的工具，能提供代码自动生成、补全、翻译、注释添加、智能问答等功能，以提高开发效率和代码质量。网上有一些偏激的言论：“<strong>AI 智能体终将取代现有的程序员岗位！</strong>”。</p>
<p>易用性：⭐️⭐️⭐️</p>
<p>提供哪些功能：</p>
<ul>
<li><strong>自动化编码</strong></li>
<li><strong>代码补全和建议</strong></li>
<li><strong>静态代码分析</strong></li>
<li><strong>代码性能分析</strong></li>
<li><strong>代码重构</strong></li>
<li><strong>测试用例生成</strong></li>
</ul>
<p>受限于大模型上下文长度限制，目前对于一些复杂场景表现较差。但随着大模型能力越来越强，会越来越接近较多开发者水平，并在知识广度上更具优势。</p>
<h4><a class="header-anchor" href="#cline-开源编程智能体插件"><span></span></a><a href="https://github.com/cline/cline" target="_blank" rel="noopener noreferrer">Cline：开源编程智能体插件</a></h4>
<p><strong>Cline</strong> 是一个开源项目！集成在 IDE中的自主编码智能体，它能够使用命令行界面（CLI）和编辑器来自动化软件开发任务。</p>
<p>Cline 通过集成大模型编码能力，可以逐步处理复杂的软件开发任务，包括创建和编辑文件、探索大型项目、使用浏览器以及执行终端命令。还可以使用模型上下文协议（MCP）来创建新工具并扩展其功能。Cline 提供了一个人工智能的图形用户界面（GUI），用于确认每个文件更改和终端命令，提供了一个安全且易于访问的方式来探索AI智能体的潜力。</p>
<p>下面简单介绍安装和配置：</p>
<p><strong>① VSCode中安装Cline插件</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421749.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>② 大模型Key配置</strong></p>
<p>大模型推荐使用<a href="https://mp.weixin.qq.com/s/iFZOQsUNkpkXPDvOkE99wQ" target="_blank" rel="noopener noreferrer">DeepSeek-V3</a>，国产开源，物美价廉，生成效果堪比主流闭源（吃草挤奶）。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421750.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421751.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>③ 扩展配置</strong></p>
<p>主要是文件读取、编辑，命令执行，浏览器和MCP等使用权限设置。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421752.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>下面来看一下两个使用案例：</p>
<p><strong>案例1：2048小游戏</strong></p>
<ul>
<li>描述需求并等待编码完成</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421753.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>任务完成信息</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421754.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>生成效果查看</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421755.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>提交修改意见并等待编码完成</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421756.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>验收效果</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421757.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>案例2：代码重构 &amp; 单侧生成</strong></p>
<ul>
<li>打开已有代码或项目并提交重构诉求</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421758.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>提交单侧生成诉求</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421759.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421760.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>基于运行报错修改单侧代码</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421761.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>将报错信息对话框发送给Cline用于修改代码。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421762.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>运行单侧</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421763.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4><a class="header-anchor" href="#cursor-超火的ai代码编辑器"><span></span></a><a href="https://www.cursor.com/" target="_blank" rel="noopener noreferrer">Cursor：超火的AI代码编辑器</a></h4>
<p><strong>Cursor</strong> 是一款基于人工智能的代码编辑器，创建了一个集成开发环境（IDE）。旨在帮助开发人员编写代码，并于AI进行实时互动，提供写代码建议、错误检测和自动补全功能。支持多种编程语言（如Python、JavaScript、Java等）。</p>
<p><strong>案例：根据图片生成前端页面</strong></p>
<ul>
<li>提供一张图片并填写诉求</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421764.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>代码自动生成</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421765.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421766.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>运行查看效果</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421767.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>真的，除了价格都挺美丽。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421768.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>启示</h2>
<p>既见未来，为何不拜。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421769.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501181421727.png" type="image/png"/>
    </item>
    <item>
      <title>没时间了解技术热点？让大模型帮你整理重点吧！</title>
      <link>https://shawnxie.top/blogs/ai/ai-hotspot.html</link>
      <guid>https://shawnxie.top/blogs/ai/ai-hotspot.html</guid>
      <source url="https://shawnxie.top/rss.xml">没时间了解技术热点？让大模型帮你整理重点吧！</source>
      <description>提问：技术人的精神食粮是什么❓ AI给出的第一条是“知识与学习”。学习的方式有很多种，对笔者而言了解新技术和新热点是保持职业热爱很重要的方式。完成日常工作是保证物质基础，人终究还是想追求一些精神价值😂。 但日常工作已经占用了大量的时间，此外还有生活琐事需要对线，根本就没有时间搜集并学习新知识。这时如果有一个工具能自动抓取技术热点并将长篇大论的文字浓缩...</description>
      <category>AI探索</category>
      <category>技术提效</category>
      <pubDate>Mon, 03 Jun 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p><strong>提问：技术人的精神食粮是什么❓</strong><br>
AI给出的第一条是“<strong>知识与学习</strong>”。学习的方式有很多种，对笔者而言了解新技术和新热点是保持职业热爱很重要的方式。完成日常工作是保证物质基础，人终究还是想追求一些精神价值😂。</p>
<p>但日常工作已经占用了大量的时间，此外还有生活琐事需要对线，根本就没有时间搜集并学习新知识。这时如果有一个工具能<strong>自动抓取技术热点</strong>并将长篇大论的文字<strong>浓缩为100~200字左右的摘要</strong>，这样每天花半个小时就能消化信息了，这也太棒了吧（看过摘要也算读过文章了😁）。</p>
<!-- more -->
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261127030.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>实现思路</h2>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261127194.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>实现过程分三步走：信息收集 -&gt; 信息解读 -&gt; 结果展示。其中：</p>
<p><strong>① 信息收集</strong>：对感兴趣的内容进行收集。实现方式可以使用聚合API、RSS或者自定义爬虫；</p>
<p><strong>② 信息解读</strong>：通过大模型对内容进行解读。目前通过端直接访问的大模型大多都带有搜索能力，将网页发送给它就可以生成摘要。但多数大模型开放API不带搜索能力，需要自己抓取网页内容再传递给它处理；</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261127382.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>③ 结果展示</strong>：将文章原始信息和解读后的摘要按照一定格式进行展示。</p>
<h2>落地方案</h2>
<p>业余时间搞了一个DEMO：<a href="https://github.com/Xiaoxie1994/developer-hotspots-summary" target="_blank" rel="noopener noreferrer">developer-hotspots-summary</a>，基本实现了按照配置的榜单信息进行抓取和解读功能，但暂未实现“文章重复数据过滤”、“自定义爬虫”和“文章内容预处理”功能，后续会逐步完善。生成的结果样例如下，完整数据查看☞<a href="https://github.com/Xiaoxie1994/developer-hotspots-summary/blob/main/result/2024-06-03%E7%83%AD%E9%97%A8%E6%96%87%E7%AB%A0.md" target="_blank" rel="noopener noreferrer">生成样例</a>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261128108.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>下面简要说明实现方案：</p>
<h3>信息收集</h3>
<p>信息收集主要是对感兴趣的内容进行收集，可使用聚合API、RSS或者自定义爬虫。目前DEMO实现了基于聚合API和RSS的内容收集，下面介绍不同方式的基本实现思路：</p>
<p><strong>① 聚合API</strong></p>
<p>聚合API已经对信息进行了封装并提供了易用的接口，上手难度最低，但天下没有免费的午餐一般都会按照调用量收取一定费用。DEMO中使用<a href="https://tophub.today/" target="_blank" rel="noopener noreferrer">今日热榜</a>的开放API <a href="https://www.tophubdata.com/" target="_blank" rel="noopener noreferrer">Tophubdata</a>，目前提供了<a href="https://www.tophubdata.com/all-nodes" target="_blank" rel="noopener noreferrer">7500+</a>数据源。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261128784.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>接口的调用也封装的很简洁，通过修改数据源类型可实时获取最新数据，具体代码实现可以查看DEMO源码。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'https://api.tophubdata.com/nodes/mproPpoq6O'</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Authorization: YOUR_ACCESS_KEY'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "status"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "data"</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "hashid"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"mproPpoq6O"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"知乎"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "display"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"热榜"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "domain"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"zhihu.com"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"********"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "items"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "extra"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"455 万热度"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "url"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://www.zhihu.com/question/629047878"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "thumbnail"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://pica.zhimg.com/80/v2-00a693d9ac81c601223512d5725cbacd_1440w.png"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "description"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"美联储加息周期终于似要走到尽头了。 "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "title"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"美元大跳水，10 年期美债收益率大跌，离岸人民币大涨 400 点，美股五连阳，美联储加息周期到头了吗？"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "extra"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"206 万热度"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "url"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://www.zhihu.com/question/621684259"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "thumbnail"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://pic3.zhimg.com/50/v2-0e599dcb44ad61215462fdfbb58d983e_qhd.jpg"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "description"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"感觉老一辈的亲戚总是不知道一些边界感，每次都无下限的打探我的个人问题和生活，弄得我非常的不适。要怎么样才能有礼貌的进行回应呢？"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                "title"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"过节聚餐时总感到亲戚在惯性「侵犯」我的边界，是我太敏感还是「亲戚PTSD」在作祟？"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF">            ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他还有历史数据获取、WebHook功能可以自己研究一下<a href="https://www.tophubdata.com/documentation#%E5%88%9B%E5%BB%BA%E5%B8%90%E6%88%B7" target="_blank" rel="noopener noreferrer">API文档</a>。不过由于调用会收费，不是长久之计。</p>
<p><strong>② RSS源</strong></p>
<p>如果网站支持RSS，那么可以通过RSS源获取到页面最新的内容信息。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261129942.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261129552.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>如果未提供源，那就要感谢 <a href="https://docs.rsshub.app/zh/guide/" target="_blank" rel="noopener noreferrer">RSSHub</a>项目了，它可以给各种奇奇怪怪的网站生成了 RSS 源，堪称“万物皆可 RSS”。再结合<a href="https://chromewebstore.google.com/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa" target="_blank" rel="noopener noreferrer">RSSHub Radar</a>或脚本<a href="https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss" target="_blank" rel="noopener noreferrer">RSS+</a>对当前页面RSS源进行检测，妈妈再也不用担心我找不到订阅源啦。更多扩展知识可阅读“<a href="https://www.runningcheese.com/rss-subscriptions" target="_blank" rel="noopener noreferrer">可能是 2023 年最全的 RSS 源，微信公众号也有！</a>”这篇文章，一些热门的RSS源可以在<a href="https://github.com/weekend-project-space/top-rss-list" target="_blank" rel="noopener noreferrer">top-rss-list</a>获取。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261129492.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>介绍完RSS源的获取方式后，下面用代码实现从rss源中获取文章名称和地址。</p>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> feedparser</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> parse_rss_feed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">rss_url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 解析 RSS 源</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    feed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> feedparser.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(rss_url)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 创建一个列表存储结果</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 遍历每个条目，提取标题和链接，并添加到结果列表中</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entry </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> feed.entries:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        item </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            'title'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: entry.title,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            'url'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: entry.link</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(item)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 示例 RSS 源 URL</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">rss_url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'https://www.shawnxie.top/feed.xml'</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 调用函数并获取结果</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">parsed_feed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> parse_rss_feed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(rss_url)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打印结果</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> item </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> parsed_feed:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(item)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>③ 自定义爬虫</strong></p>
<p>如果上述两种方式都不能获取到想要的信息，那就只有通过自定义爬虫了。由于实现的逻辑比较定制化，DEMO中暂时没有提供相关功能。下面举例说明抓取掘金热榜数据过程，使用<a href="https://www.selenium.dev/" target="_blank" rel="noopener noreferrer">Selenium</a>加载页面，然后使用<a href="https://pypi.org/project/beautifulsoup4/" target="_blank" rel="noopener noreferrer">BeautifulSoup</a>解析HTML并提取所需的信息。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261130917.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.chrome.service </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver_manager.chrome </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ChromeDriverManager</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> time</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> bs4 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> BeautifulSoup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'https://juejin.cn/hot/articles/6809637769959178254'</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 设置浏览器选项</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">options </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">ChromeOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--headless'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 无头模式，不显示浏览器窗口</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--disable-gpu'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 启动浏览器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Chrome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">service</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">ChromeDriverManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()), </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">options</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">options)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 等待页面加载完成（根据页面复杂度设置适当的等待时间）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 获取页面HTML</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">html </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver.page_source</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用BeautifulSoup解析HTML</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">soup </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> BeautifulSoup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(html, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'html.parser'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查找所有文章项</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">article_items </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> soup.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find_all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'a'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">class_</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'article-item-link'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 存储文章数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">articles </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> item </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> article_items:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    link </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> item[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'href'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    title </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> item.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">class_</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'article-title'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).text.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    articles.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'title'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: title, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'link'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'https://juejin.cn'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> link})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 输出文章数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> article </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> articles:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Title: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">article[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'title'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">, Link: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">article[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'link'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 关闭浏览器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">quit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261130958.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>信息解读</h3>
<p>通过大模型对文章内容进行解读。大模型是否具备搜索能力将影响功能实现的难易程度，OpenAI、Gemini等自带搜索能力的大模型直接将网址发送进行总结即可，而国内的大模型API大多是离线的，则需要提前对网页内容抓取和预处理。由于一些不可抗因素，DEMO使用了不带搜索能力的大模型<a href="https://kimi.moonshot.cn/" target="_blank" rel="noopener noreferrer">KIMI</a>（文档总结能力强），信息解读功能实现分为了两部分：</p>
<p><strong>① 网页内容获取</strong></p>
<p>由于使用的大模型API本身不带搜索能力，因此需要获取网页html静态文本信息并转换为字符串。</p>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.chrome.service </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver_manager.chrome </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ChromeDriverManager</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.common.by </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> By</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.support.ui </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> WebDriverWait</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.support </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> expected_conditions </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66"> EC</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> bs4 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> BeautifulSoup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fetch_article_content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"【LOG】fetch_article_content: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">url</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 设置浏览器选项</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        options </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">ChromeOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--headless'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 无头模式，不显示浏览器窗口</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--disable-gpu'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 启动浏览器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Chrome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">service</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">ChromeDriverManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()), </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">options</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">options)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 等待页面加载完成</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        WebDriverWait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(driver, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">until</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">            EC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">presence_of_element_located</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">TAG_NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"body"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 获取页面内容</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        page_content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver.page_source</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">quit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 解析页面内容</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        soup </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> BeautifulSoup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(page_content, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'html.parser'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        text </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> soup.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get_text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        cleaned_lines </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [line.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> line </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> text.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">splitlines</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> line.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cleaned_lines)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"【LOG】获取文章内容异常: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> None</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261130244.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>直接获取的内容存在较多噪音，如：评论、作者信息、目录以及推荐文章列表等，这些都会对AI生成造成影响，使得生成的结果不符合预期。因此在内容获取后最好再添加一步“预处理”或“数据清洗”动作，仅留下关联性更高的内容。目前DEMO暂未实现清洗功能，后续会调研一下通用实现方案。</p>
<p><strong>② 大模型生成文章摘要</strong></p>
<p>将第一步获取的内容传递给大模型API生成文章摘要。</p>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> openai </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> OpenAI</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fetch, time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 调用kimi api生成摘要</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> summarize_content_kimi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # kimi api暂不支持搜索 需要调用内容抓取</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fetch.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">fetch_article_content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(url)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # 调用kimi api生成摘要</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        client </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> OpenAI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            api_key</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> key,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            base_url</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'https://api.moonshot.cn/v1'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        completion </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> client.chat.completions.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 如果传入的文本太大可以调整模型</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            model</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "moonshot-v1-32k"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            messages</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"role"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"system"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"content"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"你是Kimi，你擅长对软件开发技术博客进行内容总结。你会为用户提供安全，有帮助，准确的回答。"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"role"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"user"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"content"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"请协助我对博客内容进行总结，150字以内，博客内容为："</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> content}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            ],</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">            temperature</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> completion.choices[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].message.content</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 注意控制调用频率，免费版为每分钟3次</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"【LOG】使用ai总结文章异常: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> None</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>结果展示</h3>
<p>将文章原始信息和解读后的摘要按照一定格式进行展示。这部分诉求因人而异，对笔者来说方便信息阅读即可，因此使用<a href="https://github.com/awesmubarak/markdown_strings" target="_blank" rel="noopener noreferrer">markdown_strings</a>生成了简单的md表格。</p>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> markdown_strings </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> md</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">contents </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">file_title </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> date </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '热门文章'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">contents.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(md.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(file_title, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">contents.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(md.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">blockquote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Power By: [developer-hotspots-summary](https://github.com/Xiaoxie1994/developer-hotspots-summary).'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> key, value </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">items</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    contents.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(md.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    table_title </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'文章'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    table_summary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'摘要'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> item </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        table_title.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">item[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'title'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"|"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">](</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">item[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'url'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">)"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        table_summary.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(item[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'summary'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    contents.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(md.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([table_title, table_summary]))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'./result/'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> file_title </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '.md'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'w'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"utf8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(contents))</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>总结</h2>
<p>笔者对此类功能零开发经验，整个过程搜索了大量的资料并使用大模型辅助，整体感觉很不错，很多诉求大模型都可以给出比较接近的解决方案，细节问题也可以通过多轮对话进行解决。DEMO还有很多可以优化的地方，后续会优化一下抓取逻辑提供更多免费的抓取方式并加上重复文章过滤能力，对于文章解读这块也会接入一些自带搜索能力的大模型，尽量让文章的解读更准确和精炼。最后，很期待后续大模型会进化成什么样，但又有点小怕😂。不过回顾历史，解放生产力后往往会创造新的生产力，作为历史洪流中的一粒尘埃，还是顺势而为吧。</p>
<h2>参考</h2>
<ul>
<li><a href="https://www.selenium.dev/zh-cn/documentation/" target="_blank" rel="noopener noreferrer">Selenium 浏览器自动化项目</a></li>
<li><a href="https://www.runningcheese.com/rss-subscriptions" target="_blank" rel="noopener noreferrer">可能是 2023 年最全的 RSS 源，微信公众号也有！</a></li>
<li><a href="https://github.com/fatwang2/sum4all?tab=readme-ov-file" target="_blank" rel="noopener noreferrer">sum4all</a></li>
<li>GPT-4o</li>
</ul>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261127030.png" type="image/png"/>
    </item>
    <item>
      <title>用AI解锁技术调研的新姿势</title>
      <link>https://shawnxie.top/blogs/ai/ai-search.html</link>
      <guid>https://shawnxie.top/blogs/ai/ai-search.html</guid>
      <source url="https://shawnxie.top/rss.xml">用AI解锁技术调研的新姿势</source>
      <description>在日常开发中，为了保证技术方案的质量，一般会在撰写前进行调研。如果先前没有相关领域的知识储备，笔者的调研方式一般是先通过搜索引擎进行关键字查询，然后再基于搜索的结果进行发散。这样调研的结果受关键字抽象程度和搜索引擎排名影响较大，可能会存在偏差导致调研不充分。刚好大模型风靡有一段时间了，就想如果AI能自动检索资料并进行内容总结，岂不美哉。避免重复造轮子，...</description>
      <category>AI探索</category>
      <category>技术提效</category>
      <pubDate>Mon, 15 Jul 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>在日常开发中，为了保证技术方案的质量，一般会在撰写前进行调研。如果先前没有相关领域的知识储备，笔者的调研方式一般是先通过搜索引擎进行关键字查询，然后再基于搜索的结果进行发散。这样调研的结果受关键字抽象程度和搜索引擎排名影响较大，可能会存在偏差导致调研不充分。刚好大模型风靡有一段时间了，就想如果AI能自动检索资料并进行内容总结，岂不美哉。避免重复造轮子，先在网上检索了一下，发现刚好有一个工具“<strong>STORM</strong>”满足诉求。</p>
<!-- more -->
<h2>什么是STORM?</h2>
<p><a href="https://github.com/stanford-oval/storm" target="_blank" rel="noopener noreferrer">STORM</a>是一个由斯坦福大学开发的基于大型语言模型（LLM）的知识管理系统，它能够针对特定主题进行研究，并生成带有引用的完整报告。系统分为预写阶段和写作阶段，通过互联网研究收集参考资料并生成大纲，然后利用这些信息生成带引用的全文。STORM通过视角引导提问和模拟对话来提高生成内容的质量，支持自定义检索器和语言模型，以适应不同的使用场景。基本的执行流程如下图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014095.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>怎么使用STORM?</h2>
<p>可以自己将仓库Clone到本地编译运行（需要设置openai_api_key）或者直接访问<a href="https://storm.genie.stanford.edu/" target="_blank" rel="noopener noreferrer">STORM</a>试用，下面使用直接访问网页的方式进行说明。</p>
<p><strong>① 设置内容主题并描述撰写的目的</strong></p>
<p>主题设置为“代码可视化”，并将撰写目的设置为“介绍技术的核心概念和前沿应用”。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014097.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>② 自动检索互联网相关资料</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014098.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>③ 使用LLM生成文章内容</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014099.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>④ 通过模拟对话优化生成内容</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014100.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>⑤ 展示生成内容</strong></p>
<p>得到生成文章，可以下载为PDF格式。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014101.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>原理浅析</h2>
<p><strong>STORM</strong>通过两个主要阶段来生成带有引用的长篇文章：</p>
<ul>
<li><strong>预写阶段（Pre-writing stage）</strong>：这个阶段系统基于互联网收集参考资料，并生成一个文章大纲。这是文章写作的准备阶段，帮助确定文章的结构和将要包含的关键点；</li>
<li><strong>写作阶段（Writing stage）</strong>：有了大纲和参考资料，系统会利用这些资料生成完整的文章，并在文章中加入适当的引用。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014102.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>STORM</strong>的优势在于过程的自动化，特别是自动的提出好问题。但直接提示语言模型提出的问题效果并不理想，为了提高问题提问的深度和广度，STORM采用了两种策略：</p>
<ul>
<li><strong>视角引导的问题提问（Perspective-Guided Question Asking）</strong>：通过调查类似主题相关文章来发现不同的视角，并利用这些视角来控制提问的过程；</li>
<li><strong>模拟对话（Simulated Conversation）</strong>：模拟了一个维基百科作者和一个互联网主题专家之间的对话，使语言模型能够更新对主题的理解并提出后续问题。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014103.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>整个生成的执行流程如下，可以看到生成一篇文章会进行<strong>多趟</strong>的处理：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014104.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>更多关于功能和原理的介绍可以阅读论文：<a href="https://arxiv.org/abs/2402.14207" target="_blank" rel="noopener noreferrer">Assisting in Writing Wikipedia-like Articles From Scratch with Large Language Models</a>。</p>
<h2>结语</h2>
<p>使用STORM做技术调研相当的舒服，只需要拿到它生成的文章进行阅读并对内容进行甄别（大模型存在幻觉问题），这极大的提升了工作效率。在大模型时代如果有人说他不知道怎么学习和查找资料，那么估计<strong>99.9999999</strong>...%的概率只是懒而已😁。</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270014095.gif" type="image/gif"/>
    </item>
    <item>
      <title>我的内容创作最强搭子——Kimi</title>
      <link>https://shawnxie.top/blogs/ai/kimi.html</link>
      <guid>https://shawnxie.top/blogs/ai/kimi.html</guid>
      <source url="https://shawnxie.top/rss.xml">我的内容创作最强搭子——Kimi</source>
      <description>如果说编程上有难题，现在第一个想到的是问GPT，一般能给出比较满意的答案，生成的代码也基本靠谱。 但由于网络和中文语境要求，日常还是更多使用国内的大模型。在众多国内大模型中，笔者为何对Kimi情有独钟呢？因为我收...那必须是因为它的强项——长文本解读能力啦！</description>
      <category>AI探索</category>
      <category>技术提效</category>
      <pubDate>Sat, 12 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>如果说编程上有难题，现在第一个想到的是问GPT，一般能给出比较满意的答案，生成的代码也基本靠谱。</p>
<p>但由于网络和中文语境要求，日常还是更多使用国内的大模型。在众多国内大模型中，笔者为何对Kimi情有独钟呢？因为我收...那必须是因为它的强项——<strong>长文本解读能力</strong>啦！</p>
<!-- more -->
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img0@main/2024/10/11/1728653751927-a3043a57-b2d8-4ed0-9fe6-a3dcbc7efa56.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>初识Kimi</h2>
<p>初识是在大牛猫的文章里，某期日更里提到了AI独角兽公司“<strong>月之暗面</strong>”和它旗下的产品<strong>Kimi</strong>。当时还是比较初期的版本，大牛猫用它解读了一些文档，都能给出一些比较好的归纳，后面又陆续提到过几次，就记住了。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img12@main/2024/10/11/1728655092434-0b527764-9059-49b2-94c6-333200d56cd7.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>恰逢那段时间在整理“代码可视化”的理论知识，会进行大量的检索和文字阅读，十分的耗费精力。随即就想到了Kimi，网站版自带了检索能力，再结合长文本解读能力，着实节省了我不少素材找寻和解读的时间。</p>
<h2>内容创作v1.0</h2>
<p>有了这次不错的体验后，后续使用Kimi的就更频繁了，但也仅仅停留在简单的文本解读上。直到有一天笔者突然问了Kimi这么一个问题（至于为什么问这个问题就不得而知了）：</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img18@main/2024/10/11/1728655679168-66d76ae9-68d6-4dfa-9080-251f21ffd998.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>回答的第一条是“<strong>知识与学习</strong>”。但学习的方式有很多种，对笔者而言了解新技术和新热点是保持职业热爱很重要的方式。但日常工作已经占用了大量的时间，根本就没有时间搜集并学习新知识。</p>
<p>就想如果有一个工具能<strong>自动抓取技术热点并将长篇大论的文字浓缩为100~200字左右的摘要</strong>，这样每天花半个小时就能消化信息了，这也太棒了吧。</p>
<p>于是做了第一次尝试，实现了一个自动抓取热点并总结的小工具，实现思路见下图。内容回顾戳👉🏻 <a href="https://mp.weixin.qq.com/s/qelnn3DWsOic0_5iXMKrJw" target="_blank" rel="noopener noreferrer">没时间了解技术热点？让大模型帮你整理重点吧！</a></p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img5@main/2024/10/11/1728656247843-80967bb2-f3be-4149-9f1e-eb577aae7aea.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>不过这一版工具有一个缺陷，就是当时Kimi的API不支持搜索功能（目前已支持，戳👉🏻<a href="https://mp.weixin.qq.com/s/BWVAAvqnGum3iIg93pJhuA" target="_blank" rel="noopener noreferrer">Kimi API 支持联网搜索增强了！</a>），于是笔者自己手搓了一个页面检索和内容解析工具，但由于没有处理噪音整体效果比较一般。</p>
<p>但通过这次尝试至少跑通了流程。接着字节推出了coze，也第一时间集成到了工具中。工作流体验确实很不错，替换掉了自己写的搜索和内容解析工具。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img5@main/2024/10/11/1728657739857-e056914e-c3ae-4b06-8292-4712b204a2bf.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>再之后的事大家都知道了，笔者开始发<strong>技术周刊</strong>了！</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img3@main/2024/10/11/1728657483200-149807bd-6e85-4998-8b7d-fcc6500ae29c.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>内容创作v2.0</h2>
<p>不过在第7期的时候笔者逐渐放弃了这个小工具，转而人工的收集周刊内容。究其原因主要有两点：</p>
<h3>内容准确度较差</h3>
<p>这个准确度不是指Kimi总结的内容和原文的差异，指的是收集的很多文章本身是没有营养的，这主要受限于信息源的质量和笔者手搓的爬虫缺少数据预处理能力。</p>
<p>同时也考虑到既然周刊公开发布了，要对自己的内容负责，至少保证最后选出的内容都阅读过一遍。因此在迭代爬虫和转人工中，选择了后者。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img14@main/2024/10/11/1728659145536-d20ab013-10cd-4f17-90c5-6c99fba59ccb.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>Kimi发布浏览器插件了！</h3>
<p>刚好7月Kimi发布了一个超好用的功能“<a href="https://mp.weixin.qq.com/s/-srEcOwDiEoHp1tTdleTPA" target="_blank" rel="noopener noreferrer">Kimi 浏览器插件来了！</a>”，省去了人工粘贴文章链接到Kimi主页的过程，在原始页面上就能进行内容摘要生成。由于这个功能的出现，转人工处理后工作量也没有较大上涨（要是工作量大也坚持不了多久😂）。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img5@main/2024/10/11/1728659698339-ac1726cb-6170-4313-ab06-23ca05b920b8.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>内容创作v3.0</h2>
<p>现在，Kimi发布了新的重磅功能“<a href="https://mp.weixin.qq.com/s/cRXe0HFO5BX0AzziaqoiKg" target="_blank" rel="noopener noreferrer">Kimi 探索版来了，最好的搜索是不用自己搜索</a>”，补齐了信息搜索这一拼图，终于能彻底解放双手啦？官方对探索版的定义是：</p>
<blockquote>
<p>Kimi 探索版具备 AI 自主搜索能力，可以模拟人类的推理思考过程，多级分解复杂问题，执行深度搜索，并即时反思改进结果，提供更全面和准确的答案，帮助你更高效地完成分析调研等复杂任务。</p>
</blockquote>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img1@main/2024/10/11/1728660032061-85b50d2c-8d50-4300-b5eb-bca2d6a5217e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>看了官方示例，更多是帮助用户<strong>节省花在搜索调研任务上的时间</strong>，让大家可以有更多时间<strong>专注于提出问题、思考和创造</strong>。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img16@main/2024/10/11/1728660483053-732aa9ed-ddc4-4457-9201-b5114a9b3a57.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>咦？这好像和笔者之前用过的一个工具有点相似（相关内容戳👉🏻 <a href="https://mp.weixin.qq.com/s/hzZHwjKH5IE6H0yNXVhDPQ" target="_blank" rel="noopener noreferrer">用 AI 解锁技术调研的新姿势</a>）。不过虽然都是针对调研场景，STORM主要的检索页面和生成的结果都是英文的，在知识库选择和语境上还是有明显的差异。<strong>Kimi更适合中国宝宝体质！</strong></p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img18@main/2024/10/11/1728660744143-52c8de18-0706-411a-95ef-0af09e3d6777.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>让Kimi汇总“本周技术人应该关注的热点信息”，得到的结果颇具参考意义。信息有来源可追溯，关键是能节省看网站的时间，想想319个网站全部看一遍标题都得费些功夫了。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img2@main/2024/10/11/1728661394008-55798098-3850-4b10-adab-fa5e32ffe191.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>别忘了Kimi还支持<strong>多轮对话</strong>，能够按照诉求对生成内容进行调整，理论上有更强的扩展性。</p>
<p>所以是时候再迭代一下“<strong>热点收集小工具</strong>”了，把这些新特性融入进去，可能就能实现最初的梦想——<strong>坐等AI把饭</strong>（有用的信息）<strong>喂嘴里</strong>。</p>
<figure><img src="https://fastly.jsdelivr.net/gh/bucketio/img5@main/2024/10/12/1728663283269-f77a2bcf-ee06-4080-8236-2ecfbef62e49.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>最后也希望Kimi越来越好，能够杀出重围，持续提供更多真正好用的功能。</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://fastly.jsdelivr.net/gh/bucketio/img0@main/2024/10/11/1728653751927-a3043a57-b2d8-4ed0-9fe6-a3dcbc7efa56.png" type="image/png"/>
    </item>
    <item>
      <title>代码变更影响分析</title>
      <link>https://shawnxie.top/blogs/code-visualization/cg-diff.html</link>
      <guid>https://shawnxie.top/blogs/code-visualization/cg-diff.html</guid>
      <source url="https://shawnxie.top/rss.xml">代码变更影响分析</source>
      <description>在开发过程中，每一次的代码改动都可能对程序的运行结果造成影响。越早评估出改动的影响面将更容易把风险扼杀在摇篮里，以更小的成本避免事故的发生。先用2个常见的开发场景来还原描述为什么我们需要“代码变更影响分析”： 场景1：修改了方法①逻辑，以为只会影响入口A便只回归了相关的场景，上线后发现影响了入口B的逻辑，造成了线上事故;</description>
      <category>代码可视化</category>
      <pubDate>Fri, 10 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>在开发过程中，每一次的代码改动都可能对程序的运行结果造成影响。越早评估出改动的影响面将更容易把风险扼杀在摇篮里，以更小的成本避免事故的发生。先用2个常见的开发场景来还原描述为什么我们需要“代码变更影响分析”：</p>
<ul>
<li><strong>场景1</strong>：修改了方法①逻辑，以为只会影响入口A便只回归了相关的场景，上线后发现影响了入口B的逻辑，造成了线上事故;</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261143252.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<!-- more -->
<ul>
<li><strong>场景2</strong>：修改了方法②逻辑，并回归了所有已知的流量入口，但上线一段时间后出现了大量异常告警，原来是影响了定时任务和MQ消费逻辑；</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261144371.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>“代码变更影响分析”具体的可以描述为：<strong>如何感知代码改动造成功能逻辑变化的影响范围，具体到影响了哪些类、方法、入口以及调用拓扑。</strong></p>
<h2>实现方案</h2>
<p>针对上述背景，将使用源码静态分析的方式生成CallGraph，并提供代码变更影响分析能力。基本思路为：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/java-call-graph-diff/picture/impl.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>关键代码</h2>
<p>下面阐述基于Java8的具体实现方案，完整源码获取：<a href="https://github.com/Xiaoxie1994/java-call-graph-diff" target="_blank" rel="noopener noreferrer">java-call-graph-diff</a></p>
<h3>方法调用拓扑生成</h3>
<p>变更影响判断基于CG，因此首先需要实现方法调用拓扑的可视化。</p>
<p>生成CG的关键数据是方法和方法调用关系，由<a href="https://shawnxie.top/blogs/code-visualization/compiler.html" target="_blank" rel="noopener noreferrer">编译器前端&amp;中端基础知识</a>可知抽象语法树（AST）包含了完整的类、方法和方法调用相关的信息。因此整个方法调用拓扑的过程可以归纳为：<strong>Code -&gt; AST -&gt; CallGraph</strong>.</p>
<ul>
<li><strong>Code获取</strong>：使用JGit将远程仓库拉取到本地；</li>
</ul>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Repository</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> remoteClone</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> clonePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> localPath) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">StringUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isBlank</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(clonePath)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> localPath) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"remoteClone, clonePath:{}, localPath:{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, clonePath, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">localPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Git</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Git</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloneRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setURI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(clonePath)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTransportConfigCallback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(SSH_TRANSPORT_CONFIG_CALLBACK)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(localPath)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Repository</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> repository </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> repository) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">checkout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(repository, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"main"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"cloneRepo error, path:{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, clonePath, e);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>AST生成</strong>：使用JavaParser解析项目所有源码文件得到类、方法和方法调用信息；</li>
</ul>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 设置JavaParser解析配置</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ParserConfiguration</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> buildJavaParserConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">String</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> sourcePath) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    TypeSolver</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> reflectionTypeSolver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ReflectionTypeSolver</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    CombinedTypeSolver</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> combinedSolver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> CombinedTypeSolver</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(reflectionTypeSolver)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    sourcePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            TypeSolver</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> javaParserTypeSolver</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> JavaParserTypeSolver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            combinedSolver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(javaParserTypeSolver);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"load source path error, path:{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, path);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    JavaSymbolSolver</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> symbolSolver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> JavaSymbolSolver</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(combinedSolver)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ParserConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSymbolResolver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(symbolSolver);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 获取解析出的接口或类相关信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> parseInterfaceOrClass</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">AstEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> astEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> projectRootPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> path) throws FileNotFoundException {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    CompilationUnit</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cu </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> StaticJavaParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(projectRootPath </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "/"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> path));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 类型声明解析</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ClassOrInterfaceDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> classDeclarations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ClassOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(classDeclarations)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 类解析(只解析顶层类定义，其他内部类方法会归属到其下）</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ClassOrInterfaceDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> classOrInterfaceDeclaration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ResolvedReferenceTypeDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> resolve </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    AstEntity</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterfaceOrClassDeclareInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> interfaceOrClassDeclareInfo </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> AstEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">InterfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setClassFileRelativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(path);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSimpleName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getNameAsString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQualifiedName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setInterface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isInterface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setAbstract</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isAbstract</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    NodeList</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ClassOrInterfaceType</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> implementedTypes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getImplementedTypes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 实现接口信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(implementedTypes)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> signatures </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getClassSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(implementedTypes);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setImplementInterfaceSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(signatures);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 继承类信息</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    NodeList</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ClassOrInterfaceType</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> extendedTypes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getExtendedTypes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(extendedTypes)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> signatures </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getClassSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(extendedTypes);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setExtendClassSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(signatures);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 声明方法解析</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> methodDeclarations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(methodDeclarations)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AstEntity</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MethodDeclareInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> methodDeclareInfoMap </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parseMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getNameAsString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(Objects</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nonNull)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Collectors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AstEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MethodDeclareInfo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">getSignature, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">identity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (v1, v2) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> v1));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        astEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSignature2MethodDeclareMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">putAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(methodDeclareInfoMap);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 项目入口识别（目前仅通过注解识别spring http入口，可以扩展其他的模式）</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NodeList</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">AnnotationExpr</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> annotations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getAnnotations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(annotations)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">                &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> annotations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(AnnotationExpr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">getNameAsString)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">anyMatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Controller"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "RestController"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e))</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            methodDeclareInfoMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((signature, methodDeclareInfo) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> isEndpoint</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getAnnotationSimpleNames</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">anyMatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "GetMapping"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "PostMapping"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">                                ||</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "PutMapping"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "DeleteMapping"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "RequestMapping"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (isEndpoint) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    astEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEndPointMethodSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(signature);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    astEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSignature2InterfaceOrClassDeclareMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">interfaceOrClassDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), interfaceOrClassDeclareInfo);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 获取解析出的方法和方法调用相关信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> AstEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MethodDeclareInfo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> parseMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> classSimpleName) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ResolvedMethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> methodResolve </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        AstEntity</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MethodDeclareInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> methodDeclareInfo </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> AstEntity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MethodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSimpleName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getNameAsString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodResolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQualifiedSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setClassSimpleName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(classSimpleName);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setPublic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isPublic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 填充方法参数信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> params </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getParamSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(methodDeclaration);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setParamTypeList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(params);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 填充注解信息</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NodeList</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">AnnotationExpr</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> annotations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getAnnotations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(annotations)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> annotationNames </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> annotations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(AnnotationExpr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">getNameAsString).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Collectors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setAnnotationSimpleNames</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(annotationNames);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 填充方法调用信息</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MethodCallExpr</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> methodCallExprs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MethodCallExpr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">orElse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">emptyList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isNotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(methodCallExprs)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> callMethodSignatures </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodCallExprs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(methodCallExpr </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                            ResolvedMethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodCallExpr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQualifiedSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Throwable</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> throwable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"cannot resolve: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodCallExpr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getNameAsString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    }).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(StringUtils</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">isNotBlank)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Collectors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setCallMethodSignatures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(callMethodSignatures);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> methodDeclareInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Throwable</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"parseMethod error! name:{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getNameAsString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>CallGraph生成</strong>：选择起始节点，基于方法和调用关系生成方法调用拓扑图。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261337339.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>代码变更影响分析</h3>
<p>通过Git Diff获取变更影响了哪些Java类文件，然后对变更前后的类文件进行源码解析得到类方法列表并对比前后差异得到变更影响的方法节点，最后结合之前生成的方法拓扑信息得到变更影响拓扑图。</p>
<ul>
<li><strong>变更文件获取</strong>：使用JGit获取分支变更影响了哪些文件；</li>
</ul>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">DiffEntry</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getBranchDiff</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Repository</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> targetBranch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> sourceBranch) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Git</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> git </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Git</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(repository)) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        AbstractTreeIterator</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> oldTreeParser </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">prepareTreeParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(repository, sourceBranch);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        AbstractTreeIterator</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> newTreeParser </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">prepareTreeParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(repository, targetBranch);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> oldTreeParser </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> newTreeParser) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> git</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">diff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setOldTree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(oldTreeParser).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setNewTree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(newTreeParser).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"getBranchDiff error, repoPath:{}, targetBranch:{}, sourceBranch:{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), targetBranch, sourceBranch, e);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">emptyList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>变更前后方法Diff</strong>：使用JavaParser对变更前后的Java文件进行解析，获取变更前后类的方法列表。之后依次对照变更前后方法体信息（去除了注释影响，并格式化了代码），得到变更影响了哪些方法；</li>
</ul>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 获取类对应所有方法信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> MethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getAllMethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> projectRootPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> path) throws FileNotFoundException {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    CompilationUnit</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cu </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> StaticJavaParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(projectRootPath </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "/"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> path));</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ClassOrInterfaceDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> classDeclarations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ClassOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CollectionUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(classDeclarations)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">emptyMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ClassOrInterfaceDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> classOrInterfaceDeclaration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> methodDeclarations </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> classOrInterfaceDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> declarationMap </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Maps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">newHashMapWithExpectedSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    methodDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(methodDeclaration </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        ResolvedMethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        declarationMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getQualifiedSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), methodDeclaration);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> declarationMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> * 对比前后方法得到变更方法列表</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">String</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findChangeMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> MethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> oldMethodDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                                                Map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> MethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> newMethodDeclarations) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    PrinterConfiguration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> printerConfiguration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DefaultPrinterConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">removeOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DefaultConfigurationOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DefaultPrinterConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ConfigOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">PRINT_COMMENTS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">removeOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DefaultConfigurationOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DefaultPrinterConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ConfigOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">PRINT_JAVADOC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    DefaultPrettyPrinter</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> printer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DefaultPrettyPrinter</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(printerConfiguration)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> changeMethods </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Sets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">newHashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    oldMethodDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((s, methodDeclaration) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        MethodDeclaration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> newMethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> newMethodDeclarations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(s);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> newMethodDeclaration) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            changeMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(s);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> oldMethodBodyStr</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> printer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">methodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> newMethodBodyStr</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> printer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">newMethodDeclaration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">StringUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(oldMethodBodyStr, newMethodBodyStr)) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            changeMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(s);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> changeMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>变更分析生成</strong>：结合方法拓扑生成变更影响拓扑图</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261340508.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>总结</h2>
<p>越早评估出改动的影响面将更容易把风险扼杀在摇篮里，以更小的成本避免事故的发生。本文提供了一种"代码变更影响分析"功能的粗粒度实现方案，综合运用了Git、源码分析、可视化图表等技术。不过针对愈发复杂的业务现状，文中描述的功能还比较初级，还需要按场景进行针对性的增强和细化，从而真正做到对开发者有帮助。</p>
<h2>参考</h2>
<ul>
<li><a href="https://javaparser.org/" target="_blank" rel="noopener noreferrer">JavaParser</a></li>
<li><a href="https://github.com/centic9/jgit-cookbook" target="_blank" rel="noopener noreferrer">JGit-CookBook</a></li>
<li><a href="https://graphviz.org/" target="_blank" rel="noopener noreferrer">Graphviz</a></li>
<li><a href="https://github.com/nidi3/graphviz-java" target="_blank" rel="noopener noreferrer">Graphviz-Java</a></li>
</ul>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261143252.png" type="image/png"/>
    </item>
    <item>
      <title>代码可视化(Code Visualization)</title>
      <link>https://shawnxie.top/blogs/code-visualization/code-visualization-intro.html</link>
      <guid>https://shawnxie.top/blogs/code-visualization/code-visualization-intro.html</guid>
      <source url="https://shawnxie.top/rss.xml">代码可视化(Code Visualization)</source>
      <description>Code visualization is the process of creating graphical representations of source code to help understand and analyze it. 代码可视化是创建源代码的图形表示以帮助理解和分析它的过程。 个人理解：通过使用图形化手段（架构图、依赖图、分布...</description>
      <category>代码可视化</category>
      <pubDate>Wed, 11 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>Code visualization is the process of creating graphical representations of source code to help understand and analyze it.<br>
代码可视化是创建源代码的图形表示以帮助理解和分析它的过程。</p>
</blockquote>
<p><strong>个人理解</strong>：通过使用图形化手段（架构图、依赖图、分布式追踪、类图、火焰图、CallGraph等）使代码在某些特征上变得可观测，用于辅助开发人员理解分析项目或建设一些自动化工具。</p>
<!-- more -->
<h2>为什么需要代码可视化?</h2>
<p>下面通过几个场景来说明开发、测试同学为什么需要代码可视化功能：</p>
<h3>场景1：代码逻辑理解困难</h3>
<p>项目代码量很大且需求迭代快，每次梳理的文档很快就过时了。新同学入手困难苦不堪言，老手也很难对项目整体的业务逻辑有一个全面的认知，常常需要重新梳理逻辑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251311287.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>场景2：代码改动影响面难以评估</h3>
<p>需求的诉求是修改A页面的逻辑，但由于后端代码很多公用逻辑且调用层级很深，上线才后发现影响了B页面的逻辑，造成了线上事故。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251311465.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>场景3：遗留项目重构缺少抓手</h3>
<p>老旧遗留项目经过长时间迭代和多次更换团队，导致内部代码逻辑十分混乱且没人能完全讲明白所有逻辑。但新的业务迭代需求源源不断，在原有项目上修改成本越来越高，亟需重构以获得更高地研发效率。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251311868.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>其他场景</strong>：代码改动影响面评估不准导致自动化case编写困难，回归也常常覆盖不到关联逻辑；线上问题排查困难，难以快速定位到出错代码......</p>
<h2>怎么实现代码可视化?</h2>
<p>实现过程大体可以分两步走：</p>
<ul>
<li>第一步<strong>程序分析</strong>：获取到源码、各种中间表示方式或其他方式采集的数据形成可视化的数据基础；</li>
<li>第二步<strong>数据可视化</strong>：根据想要观测的视角选择对应的图表类型，将第一步获取的数据进行可视化展示。</li>
</ul>
<p>当然对于实际应用场景完成可视化也只是刚刚开始，之后会基于可观测的部分再结合自己的诉求建设更复杂的工具。后面将从理论和实践两部分进行展开阐述：</p>
<ul>
<li>了解实现代码可视化需要掌握的基础理论，例如：AST生成、CFG和DFG等；</li>
<li>实践部分会实现“<strong>CallGraph可视化</strong>”并提供基于Git Diff的代码影响变更分析功能；</li>
<li>也会罗列一些业界已知的实践方案供大家参考学习。</li>
</ul>
<p>相关内容会逐步汇总到”代码可视化“书籍：<a href="https://code-visualization.shawnxie.top/" target="_blank" rel="noopener noreferrer">code-visualization-book</a>.</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251311287.png" type="image/png"/>
    </item>
    <item>
      <title>编译器前端&amp;中端基础知识</title>
      <link>https://shawnxie.top/blogs/code-visualization/compiler.html</link>
      <guid>https://shawnxie.top/blogs/code-visualization/compiler.html</guid>
      <source url="https://shawnxie.top/rss.xml">编译器前端&amp;中端基础知识</source>
      <description>编译器：将用编程语言(源语言)编写的计算机代码翻译成另一种语言(目标语言)的计算机程序。 编译程序以高级程序源代码作为输入，以汇编语言或机器语言表示的目标程序作为输出。目标程序会在机器上运行，得到所需的结果。编译器可能执行以下操作：预处理、词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成。 编译器前端和中端理论知识与代码可视化的实现最...</description>
      <category>代码可视化</category>
      <category>基础理论</category>
      <pubDate>Tue, 26 Mar 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><a href="https://en.wikipedia.org/wiki/Compiler" target="_blank" rel="noopener noreferrer">编译器</a>：将用编程语言(源语言)编写的计算机代码翻译成另一种语言(目标语言)的计算机程序。</p>
</blockquote>
<p>编译程序以高级程序源代码作为输入，以汇编语言或机器语言表示的目标程序作为输出。目标程序会在机器上运行，得到所需的结果。编译器可能执行以下操作：预处理、词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251345967.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>编译器前端和中端理论知识与代码可视化的实现最为相关，后端部分和目标机器代码、特定机器架构相关一般很少用到可视化中。</p>
<!-- more -->
<h2>编译器前端</h2>
<h3>词法分析(Lexical Analysis，or Scanning)</h3>
<p>词法分析又称扫描(scanning)，通过读入组成源程序的字符流，将它们组织成为有意义的词素(lexeme)的序列。词素是源程序中的最小语言单位，如关键字、标识符、常数、操作符和分隔符等。对于每个词素，词法分析器将产生对应的词法单元(token)作为输出。</p>
<p><strong>token:&lt;种别码，属性值&gt;</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251347371.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>词法分析器的核心逻辑基于<a href="https://zh.wikipedia.org/wiki/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA" target="_blank" rel="noopener noreferrer">有限自动机</a>（Finite Automata），可以理解为有限个状态的自动执行机器，用来将扫描得到的字符映射到有限个的可能性上。类型包括：</p>
<ul>
<li><strong>不确定性有限自动机（NFA）</strong>：在某状态和输入符号下可能存在多个可能的转移状态；</li>
<li><strong>确定性有限自动机（DFA）</strong>：在任何状态和输入符号下都只有一个唯一的转移状态。</li>
</ul>
<p>整个自动构造过程见下图，大致了解一下即可，如果想深入学习各种算法细节可自行查阅资料。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251347654.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>使用Antlr词法分析</h4>
<p>接下来我们练练手，使用Antlr对Java源码进行词法分析。<a href="https://www.antlr.org/" target="_blank" rel="noopener noreferrer">Antlr</a>是一个开源工具，支持根据规则文件生成词法分析器和语法分析器，它自身是用 Java 实现的，Mac上可以使用Homebrew安装或者直接使用idea插件<a href="https://plugins.jetbrains.com/plugin/7358-antlr-v4" target="_blank" rel="noopener noreferrer">antlr-v4</a>。同时<a href="https://github.com/antlr/grammars-v4" target="_blank" rel="noopener noreferrer">grammars-v4</a>上提供了很多供参考的规则，我们这里也直接使用其中针对Java8定义的词法分析规则练手。</p>
<ul>
<li>词法规则定义：<a href="https://github.com/antlr/grammars-v4/blob/master/java/java8/Java8Lexer.g4" target="_blank" rel="noopener noreferrer">Java8Lexer.g4</a></li>
</ul>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>- 关键字定义</span></span>
<span class="line"><span>ABSTRACT     : 'abstract';</span></span>
<span class="line"><span>ASSERT       : 'assert';</span></span>
<span class="line"><span>BOOLEAN      : 'boolean';</span></span>
<span class="line"><span>BREAK        : 'break';</span></span>
<span class="line"><span>BYTE         : 'byte';</span></span>
<span class="line"><span>CASE         : 'case';</span></span>
<span class="line"><span>CATCH        : 'catch';</span></span>
<span class="line"><span>CHAR         : 'char';</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 字符串字面量定义</span></span>
<span class="line"><span>StringLiteral: '"' StringCharacters? '"';</span></span>
<span class="line"><span>fragment StringCharacters: StringCharacter+;</span></span>
<span class="line"><span>fragment StringCharacter: ~["\\\r\n] | EscapeSequence;</span></span>
<span class="line"><span>...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>待解析的Java代码</li>
</ul>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">      System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello, World"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>使用Antlr生成词法分析器并执行分析操作</li>
</ul>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># ① 编译词法规则</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">antlr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Java8Lexer.g4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># ② 编译上一步生成的java文件（注意需要把Antlr的JAR文件设置到CLASSPATH环境变量，否则会报错）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">javac</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Java8Lexer.java</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># ③ 调用生成的词法分析器获取分析结果</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">grun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Java8Lexer</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tokens</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -tokens</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ./examples/helloworld.java</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251348903.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>语法分析（Syntactic Analysis, or Parsing）</h3>
<p>语法分析又称解析（parsing），它在词法分析后执行。将tokens组织成语法结构，通常是一棵抽象语法树（Abstract Syntax Tree, AST），这棵树表示了源代码的语法结构。语法分析器需要根据一组预定义的语法规则来分析词法单元序列。这些规则通常以上<a href="https://zh.wikipedia.org/wiki/%E4%B8%8A%E4%B8%8B%E6%96%87%E6%97%A0%E5%85%B3%E6%96%87%E6%B3%95" target="_blank" rel="noopener noreferrer">下文无关文法</a>（Context-Free Grammar, CFG）的形式定义，其中每个规则定义了语言中的一个结构如何由其他结构组成。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251348344.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>这里先简单说一下CFG，如果想深入学习可以再查查资料。一个上下文无关文法由以下四个部分组成：</p>
<ul>
<li>① <strong>非终结符（Non-terminals）</strong>：这些是文法的变量，表示一组字符串的集合。它们通常用大写字母表示，如A,B,Expr等；</li>
<li>② <strong>终结符（Terminals）</strong>：这些是文法的基本符号，它们构成了语言的字符串。在编程语言中，终结符可以是关键字、操作符、标识符等。它们通常用小写字母、数字或其他符号表示；</li>
<li>③ <strong>产生式规则（Production rules）</strong>：这些规则定义了非终结符如何被终结符或其他非终结符的序列替换。规则的形式通常是A → B C，表示非终结符A可以被B C替换；</li>
<li>④ <strong>开始符号（Start symbol）</strong>：这是一个特殊的非终结符，用于表示整个语言或文法的起始点。</li>
</ul>
<p>举个栗子：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>S → a S b</span></span>
<span class="line"><span>S → ε</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251345967.png" type="image/png"/>
    </item>
    <item>
      <title>想提高阅读代码的效率？试试这些工具吧！</title>
      <link>https://shawnxie.top/blogs/code-visualization/read-code-tools.html</link>
      <guid>https://shawnxie.top/blogs/code-visualization/read-code-tools.html</guid>
      <source url="https://shawnxie.top/rss.xml">想提高阅读代码的效率？试试这些工具吧！</source>
      <description>程序员间有句名言——“Talk is cheap, show me the code！”源码的确相较于言语更接近程序真实的状态，包含了更多的一手信息。因此，无论是刚开始学习代码的小白还是久经沙场的代码大神，不管是学习优秀的开源项目还是做老项目的重构，代码阅读都是开发者必备的技能之一。但在业务场景越来越复杂、迭代越来越快的背景下，提高梳理代码的效率能够极...</description>
      <category>代码可视化</category>
      <category>技术提效</category>
      <pubDate>Thu, 04 Jan 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>程序员间有句名言——“Talk is cheap, show me the code！”源码的确相较于言语更接近程序真实的状态，包含了更多的一手信息。因此，无论是刚开始学习代码的小白还是久经沙场的代码大神，不管是学习优秀的开源项目还是做老项目的重构，代码阅读都是开发者必备的技能之一。但在业务场景越来越复杂、迭代越来越快的背景下，提高梳理代码的效率能够极大程度的提高开发人员的工作效率，进一步为业务创造新的价值。</p>
<p>工欲善其事必先利其器，阅读代码也能通过工具来提升效率，本文将介绍3种代码阅读辅助工具，大家不妨在工作中试用一下，看看是否能带来实际帮助。</p>
<!-- more -->
<h2>工具</h2>
<h3><a class="header-anchor" href="#source-insight"><span></span></a><a href="https://www.sourceinsight.com/" target="_blank" rel="noopener noreferrer">Source Insight</a></h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251329061.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>SI使用静态代码分析技术，提供了多个维度代码分析结果展示，对代码阅读、快速查找、代码分析和代码格式化都有帮助。可惜的是只支持Windows系统，Mac如果要使用需要安装虚拟机。</p>
<p><strong>①代码可视化</strong>：提供各种图形可视化能力，包括继承关系图，CallGraph等；</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251329652.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>继承关系图</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251330947.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>CallGraph</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251330987.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>②代码检查</strong>：对于语法格式和样式进行检查；</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251330517.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>③代码探索</strong>：查看函数和变量的使用位置；</p>
<p>自动显示对函数、变量、类等的引用，使用高级搜索功能在整个项目中进行搜索。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251331414.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>④对比分析</strong>：提供了多维度对比分析能力。</p>
<ul>
<li>文件对比</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251331930.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>目录对比</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251332499.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>还有其他功能，有兴趣的同学可以自行探索一下。</p>
<h3><a class="header-anchor" href="#understand"><span></span></a><a href="https://scitools.com/" target="_blank" rel="noopener noreferrer">Understand</a></h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251332435.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Understand使用静态代码分析技术，提供了多个维度的代码分析结果展示，其核心功能和SI类似但更丰富，而且工具易用性更好，也支持多种操作系统。</p>
<p><strong>①代码可视化</strong>：提供各种图形可视化能力，包括依赖关系图，CallGraph，CFG、UML等等；</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251332494.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>控制流程图（CFG）</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251333764.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>CallGraph</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251333617.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>UML</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251333496.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>更多可视化图形介绍可参考：<a href="https://blog.scitools.com/graphlist/" target="_blank" rel="noopener noreferrer">Interesting Graphs about Your Code﻿</a></p>
<p><strong>②代码检查</strong>：使用行业、通用或定制化的标准来检查代码，保证其安全、整洁，可用；</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251333887.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>③代码量化</strong>：使用各种指标对代码进行度量，如：圈复杂度、度量树状图等度量图表；<br>
度量树状图中的每个块都代表代码中的一个文件、类或函数。图块的大小和颜色渐变各不相同，以区分度量指标的程度。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251334441.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>度量图表可提供整个项目的信息，包括最复杂和最大的函数、类和文件等。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251334411.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>④代码探索</strong>：使复杂的代码关系变得简单；<br>
提供了便捷的搜索功能，能够快速查找及定位指定的标识符。对于函数，可查看返回类型、参数和引用列表，点击后可立即进入该实例。对于类可查看成员变量和函数、包含列表以及相关指标。还可以通过信息浏览窗口或右键单击代码中任何已命名的实体来访问图表。使用蝴蝶图可以快速查看调用或被调用特定函数的所有内容。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251334245.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>⑤代码变更分析</strong>：快速查看两个项目代码之间的差异。<br>
可以按文件、文件夹、实体或架构维度查看变更。只需要指定要对比的git版本或要对比的两个数据库，便可以以文本或树形图对比的形式查看变更情况。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251335732.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>还有其他很多功能，有兴趣的同学可以自行探索一下。</p>
<h3><a class="header-anchor" href="#source-trail"><span></span></a><a href="https://github.com/CoatiSoftware/Sourcetrail" target="_blank" rel="noopener noreferrer">Source Trail</a></h3>
<p>Sourcetrail是一款开源免费的跨平台源码分析工具，可在阅读源代码时提高效率。提供了按脑图形式展示的函数调用链路。在分析代码的同时，提供了优雅的图形化界面来展示工程项目中的各类标识符信息和链路图，能够让人更为直观地了解整个工程的调用信息。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251335890.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>总结</h2>
<p>| 工具 | 功能丰富 | 易用性 | 费用 | 支持操作系统 | 维护情况 |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251329061.png" type="image/png"/>
    </item>
    <item>
      <title>看不懂正则表达式？试试可视化工具吧！</title>
      <link>https://shawnxie.top/blogs/code-visualization/regex-vis.html</link>
      <guid>https://shawnxie.top/blogs/code-visualization/regex-vis.html</guid>
      <source url="https://shawnxie.top/rss.xml">看不懂正则表达式？试试可视化工具吧！</source>
      <description>正则表达式是一种用来匹配字符串的强有力工具。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串我们就认为它“匹配”了，否则该字符串就是不合法的。 日常开发中常常会使用正则表达式，例如：对数据格式进行校验（判断一个字符串是否是合法的Email格式、合法的IP格式或是否按照特定格式的数字和字母拼接）；又或是将日志详情按照某种格式匹...</description>
      <category>代码可视化</category>
      <category>技术提效</category>
      <pubDate>Tue, 21 May 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p><a href="https://zh.wikipedia.org/zh-cn/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noopener noreferrer">正则表达式</a>是一种用来匹配字符串的强有力工具。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串我们就认为它“匹配”了，否则该字符串就是不合法的。</p>
</blockquote>
<p>日常开发中常常会使用正则表达式，例如：对数据格式进行校验（判断一个字符串是否是合法的Email格式、合法的IP格式或是否按照特定格式的数字和字母拼接）；又或是将日志详情按照某种格式匹配后采集上报。复杂的正则表达式可读性很差，对地球人来说掌握比较困难，下定决心系统的学习后又会很快的忘记。在有大模型辅助编程前，如果要写一个复杂的正则表达式可能需要花费不少精力搜索资料和验证，有了大模型帮忙确实可以大大简化书写的过程。但不管是之前还是现在，可能对正则表达式执行的正确性仍不太确定（大模型也可能给出错误的结果或者由于描述不准确导致给出不符合预期的结果），这时候如果能对正则表达式可视化的分析，那么将大大增加使用的信心。</p>
<!-- more -->
<h2>工具推荐</h2>
<h3>简介</h3>
<p><a href="https://github.com/Bowen7/regex-vis" target="_blank" rel="noopener noreferrer">regex-vis</a>是一个辅助学习、编写和验证正则的工具，输入一个正则表达式后，会生成它的可视化图形。然后可以点选或框选图形中的单个或多个节点，再在右侧操作面板对其进行操作，具体操作取决于节点的类型，比如在其右侧插入空节点、为节点编组、为节点增加量词等。项目开源，可以拉取代码到本地编译执行，也可以直接在<a href="https://regex-vis.com/" target="_blank" rel="noopener noreferrer">regex-vis.com</a>体验它的功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251322057.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>原理</h3>
<p>通过词法分析和语法分析将一个正则表达式转换为 AST(Abstract Syntax Tree)。其中词法分析将正则字符串转为 Tokens，Tokens 再通过语法分析转为 AST。实现源码参考<a href="https://github.com/Bowen7/regex-vis/tree/master/src/parser" target="_blank" rel="noopener noreferrer">Parser</a>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251319865.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>举例</h3>
<p>下面列举一些常用的正则表达式和对应的可视化图，点击小标题超链接可以直接跳转到RegexVis页面查看。</p>
<h4><a class="header-anchor" href="#_1-邮箱"><span>① </span></a><a href="https://regex-vis.com/?r=%5E%5Ba-zA-Z0-9_-%5D%2B%40%5Ba-zA-Z0-9_-%5D%2B%28%5C.%5Ba-zA-Z0-9_-%5D%2B%29%2B%24&amp;e=0" target="_blank" rel="noopener noreferrer">邮箱</a></h4>
<p>只允许英文字母、数字、下划线、英文句号、以及中划线组成。</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251319181.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4><a class="header-anchor" href="#_2-域名"><span>② </span></a><a href="https://regex-vis.com/?r=%5E%28%28http%3A%5C%2F%5C%2F%29%7C%28https%3A%5C%2F%5C%2F%29%29%3F%28%5Ba-zA-Z0-9%5D%28%5Ba-zA-Z0-9%5C-%5D%7B0%2C61%7D%5Ba-zA-Z0-9%5D%29%3F%5C.%29%2B%5Ba-zA-Z%5D%7B2%2C6%7D%28%5C%2F%29&amp;e=0" target="_blank" rel="noopener noreferrer">域名</a></h4>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>^((http:\/\/)|(https:\/\/))?([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}(\/)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251320148.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4><a class="header-anchor" href="#_3-ip"><span>③ </span></a><a href="https://regex-vis.com/?r=%28%28%3F%3A%28%3F%3A25%5B0-5%5D%7C2%5B0-4%5D%5Cd%7C%5B01%5D%3F%5Cd%3F%5Cd%29%5C.%29%7B3%7D%28%3F%3A25%5B0-5%5D%7C2%5B0-4%5D%5Cd%7C%5B01%5D%3F%5Cd%3F%5Cd%29%29&amp;e=0" target="_blank" rel="noopener noreferrer">IP</a></h4>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d?\d))</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251320467.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4><a class="header-anchor" href="#_4-url"><span>④ </span></a><a href="https://regex-vis.com/?r=%5Ehttps%3F%3A%5C%2F%5C%2F%28www%5C.%29%3F%5B-a-zA-Z0-9%40%3A%25._%5C%2B%7E%23%3D%5D%7B2%2C256%7D%5C.%5Ba-z%5D%7B2%2C6%7D%5Cb%28%5B-a-zA-Z0-9%40%3A%25_%5C%2B.%7E%23%28%29%3F%26%2F%2F%3D%5D*%29%24&amp;e=0" target="_blank" rel="noopener noreferrer">URL</a></h4>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#()?&amp;//=]*)$</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251321241.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4><a class="header-anchor" href="#_5-html标签"><span>⑤ </span></a><a href="https://regex-vis.com/?r=%5E%3C%28%5Ba-z%5D%2B%29%28%5B%5E%3C%5D%2B%29*%28%3F%3A%3E%28.*%29%3C%5C%2F%5C1%3E%7C%5Cs%2B%5C%2F%3E%29%24&amp;e=0" target="_blank" rel="noopener noreferrer">HTML标签</a></h4>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>^&lt;([a-z]+)([^&lt;]+)*(?:&gt;(.*)&lt;\/\1&gt;|\s+\/&gt;)$</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251321250.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>扩展阅读</h2>
<ul>
<li><a href="https://deerchao.cn/tutorials/regex/regex.htm" target="_blank" rel="noopener noreferrer">正则表达式30分钟入门教程</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/dotnet/standard/base-types/regular-expression-language-quick-reference?redirectedfrom=MSDN" target="_blank" rel="noopener noreferrer">正则表达式语言 - 快速参考</a></li>
<li><a href="https://github.com/cdoco/common-regex" target="_blank" rel="noopener noreferrer">常用正则表达式</a></li>
<li><a href="https://tool.oschina.net/uploads/apidocs/jquery/regexp.html" target="_blank" rel="noopener noreferrer">正则表达式手册</a></li>
</ul>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251322057.gif" type="image/gif"/>
    </item>
    <item>
      <title>编程史上的趣事（一）</title>
      <link>https://shawnxie.top/blogs/history/code-funny.html</link>
      <guid>https://shawnxie.top/blogs/history/code-funny.html</guid>
      <source url="https://shawnxie.top/rss.xml">编程史上的趣事（一）</source>
      <description>最近干货吸收的有点多，脑子快转不动了。闲暇时搜罗了一些编程相关的趣事，放松一下。相关内容没有进行严格考证，大家图一乐就好~</description>
      <category>历史考究</category>
      <pubDate>Sun, 01 Dec 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>最近干货吸收的有点多，脑子快转不动了。闲暇时搜罗了一些编程相关的趣事，放松一下。相关内容没有进行严格考证，大家图一乐就好~</p>
<!-- more -->
<h3>第一台可编程机器</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411301954799.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>世界上第一个可编程的机器是由法国人<a href="https://en.wikipedia.org/wiki/Joseph_Marie_Jacquard" target="_blank" rel="noopener noreferrer">Joseph Marie Jacquard</a>于1801年发明的<a href="https://en.wikipedia.org/wiki/Jacquard_machine" target="_blank" rel="noopener noreferrer">雅卡尔织布机</a>，使用打孔卡片进行编程，控制织布机织出不同图案的布。</p>
<h3>第一位程序员</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302007587.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>英国诗人拜伦的女儿，数学家Ada Lovelace描述了一个计算伯努利数的算法和程序，被认为是最早的计算机程序，并被尊为第一位程序员。但是，1815年才出生的她，理论上比Jacquard更晚才进行编程工作（毕竟拜伦女儿更出名吧，然后法国人...每日辱法）。后来美国国防部组织开展研发的Ada语言以这位女数学家的名字命名。</p>
<h3>第一门高级编程语言</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302008811.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>一般认为1957年发明的Fortran是世界上第一门高级编程语言，而实际上早在1942至1945年，发明了世界上第一台图灵完全的通用数字计算机Z3的德国工程师<a href="https://en.wikipedia.org/wiki/Konrad_Zuse" target="_blank" rel="noopener noreferrer">Konrad Zuse</a>还研发了一种叫作<a href="https://en.wikipedia.org/wiki/Plankalk%C3%BCl" target="_blank" rel="noopener noreferrer">Plankalkül</a>的语言。</p>
<p>可惜的是，Z3在1944年柏林轰炸中被炸毁，Plankalkül在战争结束前既没有正式发表，也没有被实现。这门语言的设计一直到了1972年才被正式发表出来，而1998年第一个该语言的编译器才首次被实现。这门语言对后世的编程语言设计几乎没有任何影响，但是它却考虑了包括赋值语句、子程序、条件判断、循环、浮点小数计算、数组、拥有层次结构的结构体、断言、异常处理、结果导向执行等后来许多语言都不具有的功能，这些设计在当时以及之后的很长一段时间内都是非常具有先进性的。</p>
<h3>C++ 为什么这么复杂</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302010688.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>C++之父“本贾尼·斯特劳斯特卢普”说他发明C++只是因为发现程序员门槛太低， 导致工资也低，所以发明一个晦涩难学的语言，为的是让程序员能够由此多拿些工资。</p>
<h3>世界上最好的语言</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302016029.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>PHP官方文档激进的言论：PHP是最好的语言！目前是程序员常用梗，用来嘲讽程序员技术较差，比较初级，或者只善于做键盘侠，而没有真本事。</p>
<h3>被谷歌嫌弃年龄的老年大叔</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302000993.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Java创始人James Gosling(詹姆斯·高斯林)最早在IBM工作，但是很不受IBM高管的待见，所以辞职转至Sun公司。在Sun公司，他主持并开发了“Oak”语言，这就是Java语言的前生。2000年的时候，Java语言开始大规模流行普及，James Gosling得到了业界的认可。2009年，Sun公司被甲骨文收购，James Gosling随之也去了甲骨文，但是不满一年，他就从甲骨文辞职加入了Google。在加入Google的时候，他曾被HR告知，“通常我们不招你这种年龄的程序员，但你的情况特殊(指的是他 Java 之父的身份)，所以对你特殊考虑”。进入谷歌以后，他的同事都想通过整容变得年轻一点。可能是老年大叔实在无法与年轻人一起愉快的工作，几个月之后，他就从谷歌辞职加入了一家创业公司。</p>
<h3>打发时间创造的编程语言</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302013733.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>1989年，Guido van Rossum在阿姆斯特丹为了打发圣诞节的咸鱼时间，开发了一门编程语言——Python。Python是一种解释型、面向对象、动态数据类型的高级程序设计语言，也是全面都应该学习的一种计算机语言，目前的大数据、算法、人工智能等前沿领域都是用其编写。</p>
<h3>hello, world</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302026027.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>"Hello, World!"是编程界最经典的入门示例，用于展示一个语言的基本语法和输出功能。</p>
<p>1972年，在<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%88%BE%E5%AF%A6%E9%A9%97%E5%AE%A4" title="贝尔实验室" target="_blank" rel="noopener noreferrer">贝尔实验室</a>成员<a href="https://zh.wikipedia.org/wiki/%E5%B8%83%E8%90%8A%E6%81%A9%C2%B7%E6%9F%AF%E6%9E%97%E6%BC%A2" title="布莱恩·柯林汉" target="_blank" rel="noopener noreferrer">布莱恩·柯林汉</a>撰写的内部技术文件《A Tutorial Introduction to the Language B》中首次提到了Hello World这一字符串。当时，他使用<a href="https://zh.wikipedia.org/wiki/B%E8%AA%9E%E8%A8%80" title="B语言" target="_blank" rel="noopener noreferrer">B语言</a>撰写了一个用于演示外部变量的示例程序。</p>
<p>1974年，时值<a href="https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80" title="C语言" target="_blank" rel="noopener noreferrer">C语言</a>取代B语言，在贝尔实验室的又一内部备忘录《Programming in C: A Tutorial》中，柯林汉用C语言再次编写了一个Hello World程序作为教学示例。这一程序在他和<a href="https://zh.wikipedia.org/wiki/%E4%B8%B9%E5%B0%BC%E6%96%AF%C2%B7%E9%87%8C%E5%A5%87" title="丹尼斯·里奇" target="_blank" rel="noopener noreferrer">丹尼斯·里奇</a>于1978年出版的《<a href="https://zh.wikipedia.org/wiki/C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80_(%E4%B9%A6)" title="C程序设计语言 (书)" target="_blank" rel="noopener noreferrer">C程序设计语言</a>》中得到继承。</p>
<h3>Talk is cheap. Show me the code.</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302031989.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>在 2000 年 8 月 25 日，在讨论关于Linux内核线程优化的问题时，一个人提出了一个他认为非常高效的<a href="https://lkml.org/lkml/2000/8/25/106" target="_blank" rel="noopener noreferrer">方案</a>。Linus Torvalds 认为这个方案不好，便在回信中写下了这句至理名言。</p>
<h3>BUG</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302035861.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>1947年9月9日，<a href="https://zh.wikipedia.org/wiki/%E8%91%9B%E9%BA%97%E7%B5%B2%C2%B7%E9%9C%8D%E6%99%AE" title="葛丽丝·霍普" target="_blank" rel="noopener noreferrer">葛丽丝·霍普</a>（Grace Hopper）发现了第一个电脑bug。有一次<a href="https://zh.wikipedia.org/wiki/%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A1%AC%E9%AB%94%E6%AD%B7%E5%8F%B2#%E5%B7%A8%E5%83%8F%E9%9B%BB%E8%85%A6" title="计算机硬件历史" target="_blank" rel="noopener noreferrer">Mark II</a>突然宕机，整队团队都搞不清电脑为何不能正常运作。经过大家深度挖掘，发现原来有<a href="https://zh.wikipedia.org/wiki/%E9%A3%9E%E8%9B%BE" title="飞蛾" target="_blank" rel="noopener noreferrer">飞蛾</a>意外飞入一台电脑引起故障（如图所示）。团队很快排除错误，并在日志本记录这事。也因此，人们逐渐开始用“Bug”（原意为“虫子”）来称呼计算机隐藏错误。</p>
<h3>价值十亿美元的错误</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302039073.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>1965年，托尼·霍尔发明了空指针，尽管他也发明过快速排序和霍尔逻辑，但空指针是他最毁誉参半的发明。 2009年一次会议上，他公开道歉，认为这个发明是个价值十亿美元的错误。</p>
<h3>无法退休的 COBOL 程序员</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302043906.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>美国至少有 12 个州的失业救济系统运行在已经有 60 年历史、使用 COBOL 编程语言的大型机上。很多 COBOL 职位的招聘要求拥有 20 年工作经验，但开出的年薪却只有 35000 美元。年轻人不愿意学这种复杂的过时语言，这就意味着这些已经 60 岁高龄的 COBOL 程序员至少还需要在未来一二十年里继续维护这些老系统。</p>
<h3>CAFEBABE</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411302054213.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Java中<code>class</code>文件的前四个字节是&nbsp;<code>CAFEBABE</code>，为什么这么定义，Java之父詹姆斯•高斯林是这么解释：</p>
<p>我们过去常去一个叫 St Michael's Alley 的地方吃午饭。根据当地传说，在深邃黑暗的过去，Grateful Dead 乐队在成名之前曾在那里演出。这是一个非常时髦的地方，绝对是一个 Grateful Dead Kinda Place。当 Jerry 去世时，他们甚至建立了一个佛教风格的小神殿，我们把这个地方称为 Cafe Dead。</p>
<p>可以看到，这是一个十六进制数。那时候我正好需要维护一些文件的编码格式，需要用到两个魔数: 一个用于对象持久化文件，另一个用于类文件。于是我就用 CAFEDEAD 作为对象持久化文件的魔数, 类文件选中了BABE。</p>
<p>当时这个魔数并没有什么特别的意义，也没有什么重要的，或许很快就会消失在历史中。所以 CAFEBABE 成为 class 文件的魔数，CAFEDEAD 成为持久对象的魔数。但没多久，持久化对象(persistent object)技术真的消失了，就如同魔数 CAFEDEAD 含义一样 —— 被 RMI 取代。</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411301954799.png" type="image/png"/>
    </item>
    <item>
      <title>【知识点++】TCP Fast Open</title>
      <link>https://shawnxie.top/blogs/notes/tcp-fast-open.html</link>
      <guid>https://shawnxie.top/blogs/notes/tcp-fast-open.html</guid>
      <source url="https://shawnxie.top/rss.xml">【知识点++】TCP Fast Open</source>
      <description>“知识点++”主题专注于记录日常学习中有意思的知识点，并用一篇文章阐述清楚，选题可能是某个概念、工具、原理、应用等。 前言 面试中问到 TCP 相关知识时一般会问到三次握手和四次挥手，内容大家一定回答过很多次并熟记于心了。传统的 TCP 建立连接时需要三次握手，并且握手时只发送简单的 SYN 和 ACK 报文（部分优化的网络协议栈可以在第三次握手时直接...</description>
      <category>知识点++</category>
      <category>学习随笔</category>
      <pubDate>Mon, 10 Feb 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<blockquote>
<p>“<strong>知识点++</strong>”主题专注于记录日常学习中有意思的知识点，并用一篇文章阐述清楚，选题可能是某个概念、工具、原理、应用等。</p>
</blockquote>
<h2>前言</h2>
<p>面试中问到 TCP 相关知识时一般会问到三次握手和四次挥手，内容大家一定回答过很多次并熟记于心了。传统的 TCP 建立连接时需要三次握手，并且握手时只发送简单的 SYN 和 ACK 报文（部分优化的网络协议栈可以在第三次握手时直接发送数据）。</p>
<p>从网络带宽的资源利用的角度来看，传输层的 TCP 头部 + 网络层的 IP 头部，最少有 40 个字节，为了发送几个字节的报文数据包，而额外组装了 40 个字节的头部，着实有点浪费资源。</p>
<p>从应用优化的角度来看，因为要等到 TCP 经过三次握手建立连接之后才能发送应用层数据，所以会造成应用程序首次发送数据时存在一定的延迟，尤其是短连接、移动设备等场景中，这种副作用会加剧。</p>
<p>为解决上述问题，<strong>TCP Fast Open</strong> 应运而生。</p>
<!-- more -->
<h2>原理</h2>
<p>TFO <a href="https://conferences.sigcomm.org/co-next/2011/papers/1569470463.pdf" target="_blank" rel="noopener noreferrer">提案</a>最初于2011年提出，并于2014年12月作为实验性 <a href="https://datatracker.ietf.org/doc/html/rfc7413" target="_blank" rel="noopener noreferrer">RFC 7413</a>发布。作为 TCP 协议的扩展，TFO 可以在 TCP 连接建立时就发送数据，而不需要等待 SYN 报文的确认。这大大提高 TCP 连接的建立速度，减少延迟。其核心原理是在发送方和接收方通信中引入 Cookie 机制，这样使发送方在后续重连接收方时能够得到简化。</p>
<p>由此可见，TFO 在双方首次连接时相比传统连接并没有优势，重点在于提升后续连接建立的效率。其工作分两个阶段：</p>
<h3>首次连接请求</h3>
<ul>
<li>客户端发送一个 SYN 包，头部包含 Fast Open 选项，且该选项的Cookie 为空，这表明客户端请求 Fast Open Cookie</li>
<li>服务端收取 SYN 包以后，生成一个 cookie 值（一串字符串）</li>
<li>服务端发送 SYN + ACK 包，在 Options 的 Fast Open 选项中设置 cookie 的值</li>
<li>客户端缓存服务端的 IP 和收到的 cookie 值</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857971.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>后续连接建立</h3>
<ul>
<li>当发送方再次连接同一个接收方时，可以在 SYN 报文中携带上次保存的 TFO Cookie，同时在 SYN 报文中附带应用层数据 (第一次握手时就直接发送数据)</li>
<li>接收方验证发送方的 TFO Cookie 后，将数据发送给应用层处理，并返回 SYN-ACK 报文 (同时也可以发送数据)</li>
<li>发送方收到 SYN-ACK 报文后，发送 ACK 报文给接收方，完成三次握手</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857973.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>优缺点</h3>
<h4>优势</h4>
<ul>
<li><strong>降低连接延迟</strong>：通过在首次连接时获取Cookie，后续连接可以在第一次握手时就发送数据，跳过了一个RTT的延迟，能够显著提高连接建立的速度。对于频繁建立连接的应用场景，如网页浏览、在线游戏等，性能提升效果明显。</li>
<li><strong>减轻服务器负担</strong>：在某些情况下，例如突发的大量连接请求，TFO可以减少服务器在连接建立阶段的处理负担，因为部分数据可以在早期就开始传输，而不需要等待三次握手完全完成。</li>
</ul>
<h4>劣势</h4>
<ul>
<li><strong>中间设备的影响</strong>：防火墙、负载均衡器等中间设备可能会影响TCP Fast Open的使用，导致连接回退到传统的三次握手方式。</li>
<li><strong>安全性</strong>：由于TCP Fast Open允许在连接建立时发送数据，可能会带来一些安全风险，如放大攻击等。因此，需要在使用时进行适当的安全配置。</li>
<li><strong>数据量限制</strong>：IPv4中，与SYN报文一起发送的数据量有一定限制，通常为1460字节。如果数据量过大，可能不适合使用TFO。</li>
<li><strong>应用类型限制</strong>：并非所有的应用都适合使用TCP Fast Open。例如，对于POST等非幂等性的请求，使用TFO可能会带来安全风险，因为在连接尚未完全建立时就发送数据可能会被恶意利用。</li>
</ul>
<h2>实践</h2>
<h3>Linux服务端开启TFO</h3>
<h4>确保内核版本支持TFO（3.7及以上）</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -r</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h4>查看服务器是否开启 TFO</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /proc/sys/net/ipv4/tcp_fastopen</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>0 表示禁用，1 表示开启客户端，2 表示开启服务器端 ，3 表示开启TFO客户端和服务器端。</p>
<h4>内核开启 TFO</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/proc/sys/net/ipv4/tcp_fastopen</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h4>应用软件开启 TFO</h4>
<p>使用 Nginx 充当应用，先在服务器上安装。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 安装Nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> epel-release</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 修改NG配置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/nginx/nginx.conf</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 nginx 配置 listen 80 fastopen=256，使之支持 TFO。</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen 80  fastopen=256;</span></span>
<span class="line"><span>    server_name example.com;</span></span>
<span class="line"><span>    access_log  /var/log/nginx/example.com main;</span></span>
<span class="line"><span>    location /{</span></span>
<span class="line"><span>        default_type text/html;</span></span>
<span class="line"><span>        return 200 '&lt;html&gt;Hello, Nginx&lt;/html&gt;';</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>验证 TFO 效果</h3>
<h4>检查 macOS 是否开启客户端 TFO</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sysctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> net.inet.tcp.fastopen</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>0 表示禁用，1 表示开启客户端，2 表示开启服务器端 ，3 表示开启TFO客户端和服务器端。</p>
<h4>打开 wireshark 抓包</h4>
<p>使用 <strong>tcp.options.tfo</strong> 过滤条件，快速筛选出和 TCP Fast Open 有关的 TCP 报文。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857974.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>首次请求</h4>
<p>执行调用（curl 7.49及以后的版本支持 TFO）。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --tcp-fastopen</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> http://example.com</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>接收方返回 SYN-ACK 报文的同时，附带一个随机生成的名为 TFO Cookie 的标识符给发送方。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857975.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>再次请求</h4>
<p>再次调用会携带Cookie简化握手流程，第一次握手时就可以直接发送数据。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857976.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>结语</h2>
<p>HTTP/3 通过 QUIC 协议提供了类似 TFO 的快速连接建立功能，且设计更为先进，能够直接在首次握手时发送数据，并解决了TCP的队头阻塞问题。等 HTTP/3 推广开来，TFO 也将成为时代的眼泪了。</p>
<p>当前主流的网站已开始陆续支持HTTP/3，可以在 Chrome 浏览器打开开发者工具（F12），在 Network 面板中查看协议使用情况。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857978.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>拓展阅读</h2>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/TCP%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80" target="_blank" rel="noopener noreferrer">TCP 快速打开</a></li>
<li><a href="https://dbwu.tech/posts/network/what-is-tcp-fast-open/" target="_blank" rel="noopener noreferrer">TCP Fast Open</a></li>
<li><a href="https://lwn.net/Articles/814522/" target="_blank" rel="noopener noreferrer">A QUIC look at HTTP/3</a></li>
<li><a href="https://www.inlighting.org/archives/understand-tcp" target="_blank" rel="noopener noreferrer">理解TCP</a></li>
</ul>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202502101857971.png" type="image/png"/>
    </item>
    <item>
      <title>龙年（2024）总结：折腾</title>
      <link>https://shawnxie.top/blogs/talk/2024-end.html</link>
      <guid>https://shawnxie.top/blogs/talk/2024-end.html</guid>
      <source url="https://shawnxie.top/rss.xml">龙年（2024）总结：折腾</source>
      <description>若要给龙年的自己一个关键词，那非“折腾”莫属。 工作上这一年达成目标，也逐渐在团队中扮演更重要的角色。家庭上喜迎迷你谢（辛苦火火妈咪），家庭读书会办了 7 场，促进了三代人（迷你谢也开始旁听了！）的关系和睦。个人上技术能力有所突破，认知也在缓慢迭代中，公众号保持住了更新频率，可喜可贺。 由于个人总结很大程度上是写给自己看的，通过给记忆加一个锚点，让回顾...</description>
      <category>肖恩杂谈</category>
      <pubDate>Fri, 24 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>若要给龙年的自己一个关键词，那非“<strong>折腾</strong>”莫属。</p>
<p>工作上这一年达成目标，也逐渐在团队中扮演更重要的角色。家庭上喜迎迷你谢（辛苦火火妈咪），家庭读书会办了 7 场，促进了三代人（迷你谢也开始旁听了！）的关系和睦。个人上技术能力有所突破，认知也在缓慢迭代中，公众号保持住了更新频率，可喜可贺。</p>
<p>由于个人总结很大程度上是写给自己看的，通过给记忆加一个锚点，让回顾的时候有迹可循。因此下面内容会有点流水账，大家选感兴趣的读读就好。</p>
<!-- more -->
<h2>个人成长</h2>
<p>美团内部有句老话：“<strong>和高人聊，从书上学，在事上练</strong>”，这句话用在个人成长上再合适不过。</p>
<h3>书上学</h3>
<p>这一年看了较多书，也很杂，输入最多的是这三本：</p>
<h4>《置身事内：中国政府与经济发展》</h4>
<p>这本书真的让我开了眼界，年度最佳。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304342.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>《瓦尔登湖》</h4>
<p>书中金句频频，值得反复看，常看常新。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304344.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>《长安的荔枝》</h4>
<p>社畜真是苦逼，但别小瞧了小人物的决心！</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304345.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>事上练</h3>
<p>眼过千遍不如手过一遍。</p>
<h4>写周刊</h4>
<p>记录周刊开阔了视野，助我逃离井底。这一年共发表了30期周刊，累计87037字（仅统计汉字），各类内容共320条，公众号累计阅读1962人次。</p>
<p>合集传送门👉🏻：<a href="https://mp.weixin.qq.com/s/q9MAebCSH_9FCbkhIAibZw" target="_blank" rel="noopener noreferrer">2024年周刊合集（01期 - 30期）：AI！AI！还是XX的AI！</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202412302324791.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>写博文</h4>
<p>2024年撰写博文<strong>14</strong>篇，很好的锻炼了写作能力。</p>
<p>时间线：<a href="https://shawnxie.top/timeline/" target="_blank" rel="noopener noreferrer">https://shawnxie.top/timeline/</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501261346278.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>写书籍</h4>
<p>书籍比起博文能更全面的梳理自己的知识体系，发现更多知识盲点。24年开了一本书的坑，目前仅完成大纲和部分内容。</p>
<p>尝鲜阅读：<a href="https://code-visualization.shawnxie.top/" target="_blank" rel="noopener noreferrer">https://code-visualization.shawnxie.top/</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304347.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>做项目</h4>
<p>业余时间写了两个小项目，累计收获 8 Star和 4 Fork（略惨，哈哈）。</p>
<p>① <a href="https://github.com/Xiaoxie1994/java-call-graph-diff" target="_blank" rel="noopener noreferrer">java-call-graph-diff</a>：CG的Java实现方式。采用源码静态分析方式，提供静态调用关系图生产和代码变更影响面分析能力。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/java-call-graph-diff/picture/impl.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>② <a href="https://github.com/Xiaoxie1994/developer-hotspots-summary" target="_blank" rel="noopener noreferrer">developer-hotspots-summary</a>：自动汇总并解读热榜内容。通过抓取技术热榜列表数据，并将相关文章内容发送给大模型生成摘要。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/developer-hotspots-summary/picture/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>做分享</h4>
<p>参加四川农业大学“朋辈分享沙龙”活动，和有想法的朋友们交流了经验和观点。</p>
<p>分享内容传送门👉🏻：<a href="https://mp.weixin.qq.com/s/u7nu5KiptHwgkfABcZkIsg" target="_blank" rel="noopener noreferrer">从求学到职场成长之路</a></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304348.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>高人聊</h3>
<h4>和朋友聊</h4>
<p>我的朋友构成基本是同学、同乡和同事，大家随着年龄增长逐渐都积累了很多有意思的想法，因此经常和朋友聊是一件很值得做的事。</p>
<p>和朋友聊的好处有：</p>
<ul>
<li>大多数是同辈且成长经历类似，聊问题能够快速引起共鸣</li>
<li>认知水平差异不会太大，不会存在沟通障碍</li>
<li>彼此熟悉且没有利益冲突，沟通时不用过于顾虑面子</li>
</ul>
<p>但也存在一些劣势：</p>
<ul>
<li>由于互相太熟悉，也会忽略掉一些问题（双方可能都不重视）</li>
<li>容易带入共同记忆，影响对事物的判断</li>
<li>朋友也需要常聊常新，很久不联系的朋友反而可能会带来一些负面影响</li>
</ul>
<p>列举一些和朋友聊获得的输入：</p>
<ul>
<li><strong>朋友A</strong>（海归教授）：<s>雷司令真好喝</s>，我们都有从平凡到卓越的想法和潜力，不甘于现状那就开始折腾。</li>
<li><strong>朋友B</strong>（资深产品）：</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304349.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><strong>朋友C</strong>（大学师兄）：你的文章每期必看（情绪价值Max！），可以尝试不同的领域，先模仿。</li>
<li><strong>朋友D</strong>（好基友）：要在擅长的、感兴趣的和能满足大众需求的交集里做文章，这是理想副业的样子（副业三叶草模型）。</li>
</ul>
<p>还有很多给予鼓励和建议的朋友就不一一列举了。</p>
<h4>和同事聊</h4>
<p>同事真的是宝藏，不用起来真的太浪费了！在公司除了同组的同事，还有内部的技术分享圈子、论坛一类，都是很好的交流渠道。</p>
<p>和同事聊的好处有：</p>
<ul>
<li>公司藏龙卧虎，同事能在专业领域发表见解，填补自己知识的空白</li>
<li>拥有相同的公司背景，可以聊得很深</li>
<li>毕竟同事关系，氛围好，聊的比较轻松</li>
</ul>
<p>但也存在一些劣势：</p>
<ul>
<li>公司也有群体潜意识，容易形成相似的思维模式，拥有相同的思维盲点</li>
<li>敏感话题不适合聊</li>
<li>碎片时间交流，难以体系化</li>
</ul>
<p>这一年和很多同事讨论了技术和成长经验，收获颇丰。</p>
<h4>和面试官聊</h4>
<p>上面两种方式随着和朋友聊的次数越多，在一家公司待的时间越久，都会出现边际效益。还有一种方式能获得持续的输入，但过程会比较激烈，那就是和面试官聊。</p>
<p>和面试官聊的好处有：</p>
<ul>
<li>能巩固自身知识，重新梳理知识体系</li>
<li>目的性强，单位时间信息密度高</li>
<li>匿名聊天，不用太在乎颜面</li>
<li>面试官一般经验更丰富，能带来一些新的思考角度</li>
<li>能够很好的锻炼临场表达能力</li>
</ul>
<p>但也存在一些劣势：</p>
<ul>
<li>大厂一般是买方市场，应聘者处于弱势，多数情况下交流是不平等的</li>
<li>认知可能差异大，有被全盘否定的可能</li>
<li>遇人看运气，可能相性不好，过程不愉快</li>
<li>面试未通过会造成不小打击，影响一段时间情绪</li>
<li>大厂一般存在冷却期，如果近期有换工作打算会浪费机会</li>
</ul>
<p>可见虽然收益很大，但带来的负面影响也不小。所以和面试官聊别太频繁，建议半年来一次就好了。而且由于不是刻意准备面试很可能不通过，但也不要灰心，我们的目的只是提升自己，面试的结果并不那么重要。</p>
<p>列举一些从面试官那里获得的输入：</p>
<ul>
<li><strong>面试官A</strong>：需要将技术思维转变为产品思维，即只给用户提供他们需要的信息。</li>
<li><strong>面试官B</strong>：一个项目要明确需要解决的核心痛点，再通过分析项目的难点找出需要解决的关键问题。事情的成败在于能否解决关键问题。</li>
</ul>
<h2>个人收获</h2>
<h3>副业收益</h3>
<p>全部收益将用来春节在公众号发红包，感谢大家一年的支持！</p>
<h4>公众号</h4>
<ul>
<li>打赏收益</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304350.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>流量主收益</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304351.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>内推</h4>
<p>推荐了<strong>657</strong>份简历，截止目前顺利入职了4人，收益 <strong>40</strong> 元（目前都是实习生入职，奖励比较少）。</p>
<h3>获得荣誉</h3>
<p>耕耘一年，获得奖牌一个（其实还有个破壁机礼品），感谢公司神灯社区，满足了个人小小的虚荣心。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304352.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>娱乐项目</h2>
<p>这一年娱乐活动较少，名义上是被孩子禁锢住了，其实是折腾的事太多消耗了大多数精力。下面对相关事项罗列一下：</p>
<h3>书籍</h3>
<ul>
<li>阅读书单</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304353.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>家庭读书会</li>
</ul>
<p>举办了7场家庭读书会（各种原因没能完成一年12次的目标），进行了多次思想上的碰撞，不仅增长了知识也促进了家人之间的了解，真的是非常不错的活动。但由于已经举办三年了，逐渐开始出现边际效益，是时候调整一下流程了。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232302643.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>影视</h3>
<p>24年只去了1次电影院，看了“<strong>沙丘2</strong>”，画质和音乐还是一如既往的优秀，可惜剧情节奏有点差，很多细节没有交代清楚，推进不流畅。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251418532.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>平常就刷刷B站，看看下饭视频。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304354.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>音乐</h3>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304355.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>演唱会</h3>
<p>告五人重庆演唱会，超嗨！</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304356.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304357.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304358.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>旅行</h3>
<p>媳妇怀孕，24年基本只在成都周边转转。<br>
<img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304359.png" alt="" loading="lazy"></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304360.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304361.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304362.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304363.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304364.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304365.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304366.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304367.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304368.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>游戏</h3>
<p>24年游戏玩的不多，除了黑神话其他都是一些休闲小游戏。25年mhw2要发售了，游戏时间应该会增加不少。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304369.png" alt="" loading="lazy"><br>
<img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304370.png" alt="" loading="lazy"></p>
<h2>新年展望</h2>
<p>前段时间和媳妇聊天，聊起我们回成都的初衷是为了定居，想让更多的时间回归到生活本身，过慢一点。但回来这一年半的时间却像开了快进键一样，我们实际上把生活过的更忙碌了。探讨了背后根本原因并得到一个结论：<strong>我们没办法立刻躺平，还是有太多的欲望</strong>。就像在原地做仰卧起坐的人，刚躺下去就因为各种原因又坐了起来，可能是因为个人发展差异、城市差异、工作氛围差异、人际关系差异或是群体潜意识差异。偶尔我也会在心里做对比，如果留在北京留在熟悉的工作岗位，是不是能比现在获得更多。</p>
<p>但事情总要往前发展，我逐渐接受了城市、工作的差异，也开始在更多事情上寻找意义。人生绝不是一条路走到黑，换条路走走也挺好，就算最后又绕回了原点，但至少风景已经留在脑海了。况且这条路本就没有终点，走快走慢又有什么意义呢，自己开心才最重要。</p>
<p>25年继续尝试回归生活本身，告别45°人生，好好生活，过慢一点。</p>
<p>（年底就达成<strong>练习时长两年半</strong>了，应该能来一波丝滑转身。）</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304371.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501232304342.png" type="image/png"/>
    </item>
    <item>
      <title>工作五年小结 | 面对不确定性快速上升的外部环境，我们该如何寻求突破？</title>
      <link>https://shawnxie.top/blogs/talk/5-years-summarize.html</link>
      <guid>https://shawnxie.top/blogs/talk/5-years-summarize.html</guid>
      <source url="https://shawnxie.top/rss.xml">工作五年小结 | 面对不确定性快速上升的外部环境，我们该如何寻求突破？</source>
      <description>工作五年了，来京东马上满一年，前四年在开水团，不禁感叹时间过的真快啊！回想19年从西安交大硕士毕业孤身前往北京开始职业生涯，经历了孤独迷茫到自立坚定，再到23年下定决心携妻还蜀安家，并来到京东开始新的征程，这5年过的很快也很充实。 今年也是我的而立之年，感觉一迈过这个坎，眼前的世界就不一样了，事业上还未成气候，更多的生活琐事就开始扑面而来。网上有段子笑...</description>
      <category>肖恩杂谈</category>
      <pubDate>Fri, 16 Aug 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>工作五年了，来京东马上满一年，前四年在开水团，不禁感叹时间过的真快啊！回想19年从西安交大硕士毕业孤身前往北京开始职业生涯，经历了孤独迷茫到自立坚定，再到23年下定决心携妻还蜀安家，并来到京东开始新的征程，这5年过的很快也很充实。</p>
<p>今年也是我的而立之年，感觉一迈过这个坎，眼前的世界就不一样了，事业上还未成气候，更多的生活琐事就开始扑面而来。网上有段子笑称现代的“五子登科”中的五子分别指的是“车子、票子、房子、妻子和孩子”，这个词本来表达的是人们对美好生活的向往，但旧词新义体现更多的是中年人的无奈。</p>
<!-- more -->
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251156351.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>英国物理学家霍金曾说“<strong>21世纪将是复杂性的世纪</strong>”，科学的事我不懂，但我的直观感受是各行各业的复杂性都在持续的上涨且很快。就程序员这个职业来说，面试的难度是越来越大，当然面试可能存在一定的造火箭行为，但工作整体的难度确实是在逐年上涨。举个例子，之前业务开发主要工作是完成需求编码，而且由于很多都是新开业务也不存在太多历史债务，工作的条线和职责比较清晰。但随着业务进入成熟期，增长变缓导致更多的运维负担和质量问题开始凸显，开发不仅要完成基本的编码，也需要参与到更多<strong>运维监控和质量保障</strong>工作中，这使得工作的内容变得复杂多样，认知负载极速增加。而且就算是基本的编码工作，为了保证能适应未来发展趋势也会在前期投入更多精力进行方案设计，越来越考验开发的知识储备和架构思维。</p>
<p>同时新的技术在不断地出现并对我们的工作造成实际的影响，从2022年12月OpenAi发布<strong>ChatGPT</strong>至今不到两年时间里，大模型已经侵入到了生活中的方方面面。哪个程序员敢说自己完全没有用过大模型，基于大模型衍生的编码辅助、智能问答、内容&amp;图片生成等工具真真切切的影响到了我们工作的方式。开发已然变成了一个<strong>复合型职业</strong>，对个人能力提出了更高要求。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251157081.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>外部环境的走向不是个人能够左右的，因此我不聊公司或城市的差异，也不聊如何和生活琐事对线，仅仅聊一下“<strong>个人成长</strong>”，因为这个话题的主动权掌握在我们自己手上，最好的投资就是投资自己（想到A股😭）。那么在这个复杂性快速上升的21世纪，面对不确定性上升的外部环境，我们该如何寻求突破呢？我当前的答案是：<strong>持续学习，制造正反馈，相信复利效应。</strong></p>
<h2>收获</h2>
<h3>业务理解</h3>
<p>目前参与的业务方向具有保密性质并逐渐进入成熟期，系统架构也逐渐趋于稳定，日常的工作内容更多投入在技术支持、运维监控和质量保障上，系统功能迭代频率下降，部分开发精力投入在提效工具建设上。由于项目保密性质，这里就不展开说明业务上的具体工作内容，仅对如何快速了解业务知识和熟悉系统代码进行总结。</p>
<h4>了解业务</h4>
<p>我学习业务知识的基本思路是“<strong>读-&gt;想-&gt;写-&gt;讲</strong>”四步循环，下面是具体的执行步骤，其中步骤2→6我会多跑几轮，逐渐建立起深入的业务认识。</p>
<ul>
<li><strong>① 信息收集</strong>：尽可能检索业务和系统相关的文档、分享视频、代码和配置数据等；</li>
<li><strong>② 信息整合</strong>：从用户视角出发串联业务流程，并将流程拆分成独立的功能模块。整合不仅仅聚焦于负责的业务，也要考虑到上下游；</li>
<li><strong>③ 功能细化</strong>：针对业务各个模块进行细化，包含模块主要功能、输入输出定义和交互中间件等，思路可以参考<a href="https://www.infoq.cn/article/c4-architecture-model" target="_blank" rel="noopener noreferrer">C4模型</a>；</li>
<li><strong>④ 文档沉淀</strong>：将理解的内容整理成文档，从背景、名词、现状、未来发展等方面进行叙述，串联业务和系统整个生命周期；</li>
<li><strong>⑤ 业务串讲</strong>：将总结的内容分享出来，并收集熟悉业务听众的反馈（收集反馈很重要，老同事能够指出难以发现的细枝末节并分享一些历史原因导致的设计缺陷）；</li>
<li><strong>⑥ 认知迭代</strong>：基于新的输入重新迭代自己的业务认知。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251157679.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>熟悉代码</h4>
<p>可以找之前负责的同事领读，不过这种方式只能对项目有一个大致的认识，具体的细节很难面面俱到。熟悉代码没有捷径，只能通过阅读代码，但阅读代码是有方法的。关于如何高效阅读代码我还没有总结出一套完整的方案，不过大体的思路是<strong>方法+工具</strong>结合方式：从系统入口开始，结合业务完整跑通核心链路，若有不懂的逻辑可以使用debug或代码分析工具，边读边做好笔记，并最好进行一次代码串讲收集反馈。下面推荐一些经验总结：</p>
<ul>
<li>
<p><strong>① 阅读代码方法</strong>：<a href="https://www.thoughtworks.com/zh-cn/insights/blog/careers-at-thoughtworks/how-to-read-code" target="_blank" rel="noopener noreferrer">如何阅读代码</a>、<a href="https://stackoverflow.blog/2022/08/15/how-to-interrogate-unfamiliar-code/" target="_blank" rel="noopener noreferrer">how-to-interrogate-unfamiliar-code</a>、<a href="https://catcoding.me/p/learn-from-source-code/" target="_blank" rel="noopener noreferrer">如何高效阅读源代码</a></p>
</li>
<li>
<p><strong>② 阅读代码工具</strong>：<a href="https://www.shawnxie.top/archives/1716733748336" target="_blank" rel="noopener noreferrer">想提高阅读代码的效率？试试这些工具吧！</a></p>
</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251158633.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>不过工具和方法永远不是最重要的，<strong>去读</strong>，并在遇到困难的时候，看不明白的时候，咬牙坚持下去，抽丝剥茧，逐个击破。</p>
<h3>技术提升</h3>
<p>技术能力是开发的立足之本，因此前言中提到的寻求突破更多指的是技术能力上的突破，提升的方法我采取三步走：<strong>持续学习，制造正反馈，相信复利效应。</strong></p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251158351.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>持续学习</h4>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251158538.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>为什么需要持续学习，说白了是为了适应社会发展和保持个人竞争力，只出不进，我们将很快达到能力瓶颈。</p>
<ul>
<li><strong>应对快速变化的世界</strong>：世界经济论坛2020年的<a href="https://www.weforum.org/publications/the-future-of-jobs-report-2020/" target="_blank" rel="noopener noreferrer">一份报告</a>说到 2025 年，员工执行工作所需的 44% 的技能将因快速的技术进步而改变。持续学习可以帮助我们跟上这些变化，不被时代淘汰。</li>
<li><strong>个人成长与发展</strong>：通过持续学习，我们可以扩展自己的知识面，有朝一日也会运用到工作中去解决问题。</li>
<li><strong>保持心理健康</strong>：持续学习有助于保持大脑活跃，预防认知衰退，并且可以带来心理上的满足感和幸福感，扩展阅读“<a href="https://36kr.com/p/2857916221541250" target="_blank" rel="noopener noreferrer">锻炼大脑，这里有一套全指南</a>”。</li>
</ul>
<h4>制造正反馈</h4>
<p>正反馈能提供持续学习的动力，适当的正反馈也有利于习惯的培养。我目前通过分享来获得正反馈，分享带来的阅读量、评论、点赞和收藏都会促使我继续学习并分享，而且反馈中的建议也很宝贵，能够指出我的知识盲区。目前保持了两个分享习惯：</p>
<ul>
<li><strong>每月在内部社区发表一篇文章（部分已同步外网）</strong></li>
</ul>
<p>要特别感谢公司神灯社区，从去年10月发布第一篇文章开始，我基本保持一月一篇的频率，神灯社区的互动和积分给我带来了大量的正反馈，提供了我持续学习的动力ღ( ´･ᴗ･` )。</p>
<p>|   |   |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251156351.png" type="image/png"/>
    </item>
    <item>
      <title>现在才开始探索个人IP是不是晚了？</title>
      <link>https://shawnxie.top/blogs/talk/ip-exploration.html</link>
      <guid>https://shawnxie.top/blogs/talk/ip-exploration.html</guid>
      <source url="https://shawnxie.top/rss.xml">现在才开始探索个人IP是不是晚了？</source>
      <description>现在开始探索个人IP是不是晚了？这赛道已经是一片红海了，前两年大量出现的离职博主，到如今很多也开始老老实实回去上班了。如果把个人IP当做自己的主业并想快速通过它赚米，那确实难如登天（头部效应很明显，平台可能都不会给新人多少流量）。但如果把打造IP看成一件长期的事，在维持一份基本的工作之外，不急功近利，慢慢打磨内容，降低预期后或许能得到意想不到的收获（但...</description>
      <category>肖恩杂谈</category>
      <pubDate>Thu, 12 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>现在开始探索个人IP是不是晚了？这赛道已经是一片<strong>红海</strong>了，前两年大量出现的<strong>离职博主</strong>，到如今很多也开始老老实实回去上班了。如果把个人IP当做自己的主业并想快速通过它赚米，那确实难如登天（头部效应很明显，平台可能都不会给新人多少流量）。但如果把打造IP看成一件<strong>长期的事</strong>，在维持一份基本的工作之外，不急功近利，慢慢打磨内容，降低预期后或许能得到意想不到的收获（但行好事莫问前程？<strong>食饼</strong>🤡）。</p>
<!-- more -->
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251247185.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>我在MT、JD等互联网公司干了5年后端开发，磨炼了设计和实现复杂业务系统的能力。大规模互联网项目的经验不仅提高了我的技术洞察力，也丰富了我对互联网应用多样性的理解。但大公司同样也对我的发展有了一些限制，我不愿意走业务架构或者技术管理的路线，领导给我的规划却往往是这样，因为大多数的场景还是更重业务属性，这条路会容易些。但<strong>与其还没有挣扎就接受命运，我更愿意尝试后死的明明白白</strong>。</p>
<p>俗话说“<strong>种一棵树最好是十年前其次是现在</strong>”，做个人IP更多是想探索自我的可能性。如果职业生涯一眼就能望到头（还有35岁这道坎），通过阅读、学习、分享和交流拓宽认知边界，是否可以走出一条不同的路？我在"<strong><a href="https://mp.weixin.qq.com/s?__biz=MzkwODY0ODQzOQ==&amp;mid=2247484279&amp;idx=1&amp;sn=be672baa85c0179e61ff0af5a42c54cd&amp;scene=21#wechat_redirect" title="工作五年小结 | 面对不确定性快速上升的外部环境，我们该如何寻求突破？" target="_blank" rel="noopener noreferrer">工作五年小结 | 面对不确定性快速上升的外部环境，我们该如何寻求突破？</a></strong>"一文中提到在这个复杂性快速上升的21世纪，面对不确定性上升的外部环境，我们该如何寻求突破呢？我的答案是：<strong>持续学习，制造正反馈，相信复利效应</strong>。因此做个人IP没有风险，这只是践行理论的一种方式，相信只要坚持就会有回报，只是多少的差异而已（<strong>再食饼</strong>🤡）。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251158351.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>搞什么内容？</h2>
<p>说服自己只是第一步，肚子里没墨水也白瞎。其实去年我就萌生了这个想法，并于10月开始写技术博文，并把日常见闻和点滴想法进行记录。同时进行了高强度检索，了解其他个人IP都在干什么，哪些有借鉴意义。最近得到一个结论“<strong>要在擅长的、感兴趣的和能满足大众需求的交集里做文章</strong>”，这是完美副业的样子。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251248675.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>内容首先得从“<strong>擅长</strong>”出发，因为擅长才更容易出良品，好的内容是个人IP的核心竞争力。接着是“<strong>感兴趣</strong>”，只有做起来有乐趣的事情才容易长久，这是保证持续精进的原动力。最后是“<strong>能满足大众需求</strong>”，这一点决定了IP的价值，不能满足大众的需求则永远都是自娱自乐。</p>
<p>|擅长|兴趣|需求|<br>
|</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251247185.png" type="image/png"/>
    </item>
    <item>
      <title>离开工位老是忘记锁屏？试着让电脑自动完成这事吧！</title>
      <link>https://shawnxie.top/blogs/tools/auto-lock.html</link>
      <guid>https://shawnxie.top/blogs/tools/auto-lock.html</guid>
      <source url="https://shawnxie.top/rss.xml">离开工位老是忘记锁屏？试着让电脑自动完成这事吧！</source>
      <description>公司要求离开工位要立刻锁定电脑屏幕防止信息泄露，但无论是使用锁屏快捷键还是设置触发角，总感觉不得劲。想想汽车现在基本都是自动锁车了，电脑它就不能自己锁屏吗？于是抽空搜罗了一些自动化的解决方案，并按照Win和Mac进行分类。</description>
      <category>技术提效</category>
      <pubDate>Mon, 08 Apr 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>公司要求离开工位要<strong>立刻</strong>锁定电脑屏幕防止信息泄露，但无论是使用锁屏快捷键还是设置触发角，总感觉不得劲。想想汽车现在基本都是自动锁车了，电脑它就不能自己锁屏吗？于是抽空搜罗了一些自动化的解决方案，并按照Win和Mac进行分类。</p>
<!-- more -->
<h2>配置方式</h2>
<h3>Windows</h3>
<p>Windows官方系统就支持“动态锁”，其通过检测和电脑配对的蓝牙设备距离来触发操作，当蓝牙配对设备低于最大接收信号强度指示器 (RSSI) 值时，会自动锁定 Windows 设备。不过此功能仅当蓝牙信号下降且系统处于空闲状态时，动态锁定功能才会锁定设备，也就说如果有人在你刚离开就操作电脑就不能生效😂。<br>
<strong>如何设置自动锁屏</strong></p>
<ol>
<li>使用蓝牙将你的手机与电脑配对；</li>
<li>进入「设置」→「账户」→「登录选项」→「动态锁」（或者直接在设置中搜索“动态锁”）；</li>
<li>勾选「允许 Windows 在你离开时自动锁定设备」前的复选框。</li>
</ol>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251211203.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>官方文档“<a href="https://support.microsoft.com/zh-cn/windows/%E7%A6%BB%E5%BC%80windows%E8%87%AA%E5%8A%A8%E9%94%81%E5%AE%9A%E7%94%B5%E8%84%91-d0a5f536-74ac-0859-820a-4140dac9fcaf" target="_blank" rel="noopener noreferrer">离开Windows自动锁定电脑</a>”中对锁定场景的描述是“走出蓝牙覆盖范围约1分钟后自动锁定电脑”，这一点对于需要立即触发锁定的场景不太友好。但在我实际测试中发现只要设备远离到一定程度就会自动锁定，后续官方应该有更新但文档并未同步。</p>
<p>之后从文档“<a href="https://learn.microsoft.com/zh-cn/windows/security/identity-protection/hello-for-business/hello-feature-dynamic-lock" target="_blank" rel="noopener noreferrer">动态锁</a>”中看到目前可以配置动态锁定因素，目前默认的配置如下：<strong>rssiMin</strong>属性值信号指示设备被视为在范围内所需的强度，默认值-10；<strong>rssiMaxDelta</strong>的默认值-10为，超过度量值后锁定设备。RSSI测量值是相对值，会随两台配对设备之间信号的减弱而降低。测量值0强于-10，-10强于-60，-60表示设备正在相互远离，这个描述可以简单理解为在RSSI[-60,0]范围内不会锁定设备，超过之后自动锁定。一般这个设置足够使用了，去上个厕所的距离大多超过了这个范围。</p>
<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rule</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> schemaVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">signal</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"bluetooth"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> scenario</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Dynamic Lock"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> classOfDevice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"512"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> rssiMin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"-10"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> rssiMaxDelta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"-10"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>Mac</h3>
<p>Mac的设置方式则根据你是否拥有苹果设备和是否愿意有一定花销分成了不同的方式：</p>
<h4>有苹果设备且愿意花点小钱</h4>
<p>如果你有苹果设备，那么可以通过下载<a href="https://nearlock.me/" target="_blank" rel="noopener noreferrer">Near Lock</a>应用实现丝滑的锁屏&amp;解锁动作。不过软件虽然可以免费下载使用，但想要在 iPhone 锁定的时候仍然可以使用距离感应来解锁 Mac电脑的话，是需要付费的（这一点挺适合花点小钱提高生活品质的朋友）。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251211407.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>如何设置自动锁屏</strong><br>
分别在 iPhone 和 Mac 上安装好 Near Lock 以后，接下来便可以进入配对操作了。首先请分别在 iPhone 和 Mac 上打开 Near Lock 应用，随后请等待它们之间的配对识别。如下图所示，当 Mac 上的 Near Lock 识别到附近的 iPhone 设备以后，会在 Mac 电脑上显示。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251211050.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>突然想起本人没有苹果移动设备😭，手机端的配置就不展示了，大家可以自己下载试一试。类似的软件还有MacID（收费）。</p>
<h4>没有苹果设备或一毛不拔</h4>
<p>如果你啥苹果设备都没有或者就是不想花钱，那么可以使用<a href="https://github.com/ts1/BLEUnlock" target="_blank" rel="noopener noreferrer">BLEUnlock</a>这款开源软件实现自动解/锁屏。其原理是通过检测蓝牙设备的距离来控制解/锁屏，使用时蓝牙设备无需安装任何应用程序。当蓝牙设备靠近 Mac 电脑时，自动解锁屏幕并唤醒电脑；而当蓝牙设备远离时，自动锁定屏幕并暂停播放音乐/视频。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251212133.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>尝试了一下，此软件对苹果设备的蓝牙支持更好，其他品牌的设备存在识别不够灵敏的情况，大家可以用自己的手机或者手环试一试。网上也有一些相关的设置教程，如：<a href="https://juejin.cn/post/6964669944327831560?from=search-suggest" target="_blank" rel="noopener noreferrer">小米手环解锁MacOS系统笔记本MacBookPro</a>。</p>
<p>看到最后是不是觉得还是锁屏快捷键更便利（想想汽车就算有自动锁车还是会人工确认一遍😂，主打一个安心），那就从现在开始养成习惯吧，形成肌肉记忆后锁屏就和呼吸一样自然了，哈哈。</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202501251211203.png" type="image/png"/>
    </item>
    <item>
      <title>自建Docker镜像代理加速</title>
      <link>https://shawnxie.top/blogs/tools/docker-proxy.html</link>
      <guid>https://shawnxie.top/blogs/tools/docker-proxy.html</guid>
      <source url="https://shawnxie.top/rss.xml">自建Docker镜像代理加速</source>
      <description>Docker Hub 是一个容器注册表，专为开发人员和开源贡献者构建，用于查找、使用和共享其容器镜像。但从2023年5月中旬，hub.docker.com “不知” 何种原因国内均无法正常访问了，好在国内各大高校和容器技术社区提供了加速站点，国内开发者还是能获取到各种镜像。</description>
      <category>技术提效</category>
      <pubDate>Thu, 05 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>Docker Hub 是一个容器注册表，专为开发人员和开源贡献者构建，用于查找、使用和共享其容器镜像。但从2023年5月中旬，<a href="http://hub.docker.com" target="_blank" rel="noopener noreferrer">hub.docker.com</a> “不知” 何种原因国内均无法正常访问了，好在国内各大高校和容器技术社区提供了加速站点，国内开发者还是能获取到各种镜像。</p>
<!-- more -->
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017430.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>好景不长，今年6月份各大高校和容器技术社区由于一些不可抗因素，纷纷关闭了镜像加速站点，这极大地影响了工作效率和开发进度。</p>
<p>为了继续使用DockerHub获取各种各样的镜像数据，我们可以尝试自己搭建代理，中转对Docker官方镜像仓库的请求，解决一些访问限制和加速访问的问题。下文介绍基于Cloudflare Workers的Docker镜像代理部署和使用。</p>
<h2>部署DockerHub代理</h2>
<h3><a class="header-anchor" href="#fork仓库-cf-workers-docker-io"><span>fork仓库 </span></a><a href="http://CF-Workers-docker.io" target="_blank" rel="noopener noreferrer">CF-Workers-docker.io</a></h3>
<p>将 <a href="https://github.com/cmliu/CF-Workers-docker.io" target="_blank" rel="noopener noreferrer">CF-Workers-docker.io</a> fork到自己仓库。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017433.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>部署到Cloudflare的pages中</h3>
<ul>
<li>创建pages应用</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017434.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>连接GitHub</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017435.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>选择存储库部署</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017436.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>等待部署完成</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017437.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>获取镜像代理域名</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017438.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017439.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>自定义域名（可选）</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017440.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017441.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017442.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017443.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>如何配置镜像加速</h2>
<h3>官方镜像路径前加域名</h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dockers.shawnxie.top/library/nginx:latest</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>设置镜像加速docker配置</h3>
<p>修改文件 /etc/docker/daemon.json（如果不存在则创建）</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/docker</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/docker/daemon.json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">'EOF'</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "registry-mirrors": ["https://dockers.shawnxie.top"]  # 请替换为您自己的Worker自定义域名</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">EOF</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> docker</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以执行 docker info命令，如果从结果中看到了如下内容，说明配置成功。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> info</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270017430.png" type="image/png"/>
    </item>
    <item>
      <title>打造更好用的Mac终端</title>
      <link>https://shawnxie.top/blogs/tools/mac-terminal.html</link>
      <guid>https://shawnxie.top/blogs/tools/mac-terminal.html</guid>
      <source url="https://shawnxie.top/rss.xml">打造更好用的Mac终端</source>
      <description>Mac 自带的终端很简陋，缺少很多必要的功能，用户体验较差。但一个好用的终端将直接给开发人员的工作效率带来极大提升，毕竟很多操作是直接在命令行上执行的。笔者对终端有几个基本的诉求： 好看的界面，并包含一些关键信息，如：用户名、文件路径以及git相关信息等； 关键字高亮，让命令行更加易读易懂； 自动补全，根据历史命令和当前输入内容，自动推荐可能的命令。 ...</description>
      <category>技术提效</category>
      <pubDate>Thu, 28 Nov 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>Mac 自带的终端很简陋，缺少很多必要的功能，用户体验较差。但一个好用的终端将直接给开发人员的工作效率带来极大提升，毕竟很多操作是直接在命令行上执行的。笔者对终端有几个基本的诉求：</p>
<ul>
<li><strong>好看的界面</strong>，并包含一些<strong>关键信息</strong>，如：用户名、文件路径以及git相关信息等；</li>
<li><strong>关键字高亮</strong>，让命令行更加易读易懂；</li>
<li><strong>自动补全</strong>，根据历史命令和当前输入内容，自动推荐可能的命令。</li>
</ul>
<p>当然还有一些非必要的功能，有的话可以锦上添花，例如：</p>
<ul>
<li><strong>快速访问</strong>，快速跳转到常用目录；</li>
<li><strong>Git命令缩写</strong>，有的命令着实有点长了，能够有效的减少命令输入量；</li>
<li><strong>模糊搜索</strong>，快速搜索历史命令、文件、目录等。</li>
</ul>
<!-- more -->
<p>笔者目前的终端是基于 <strong>iTerm2 + zsh + Oh My Zsh</strong> 打造的，这套组合基本能满足上述诉求。这些工具不算新了，笔者第一份工作时mentor就给我推荐了。由于存在一定的配置成本，每次更换电脑都需要重新配置，为方便后续配置有迹可循，就有了这篇文章。</p>
<h2>工具介绍</h2>
<p>对本文涉及的工具进行简要介绍：</p>
<h3><a class="header-anchor" href="#homebrew"><span></span></a><a href="https://brew.sh/zh-cn/" target="_blank" rel="noopener noreferrer">Homebrew</a></h3>
<p>Mac OS 下强大的包管理工具，用来安装软件。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271656646.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3><a class="header-anchor" href="#iterm2"><span></span></a><a href="https://iterm2.com/" target="_blank" rel="noopener noreferrer">iTerm2</a></h3>
<p>iTerm2是 Mac OS 终端的替代品，也是iTerm的继承者。iTerm2将终端带入了"只有想不到，没有做不到"的时代。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271704342.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3><a class="header-anchor" href="#zsh"><span></span></a><a href="https://www.zsh.org/" target="_blank" rel="noopener noreferrer">zsh</a></h3>
<p>zsh 是 shell 语言类型，兼容bash，提供强大的<strong>交互式</strong>命令行功能，比如 tab 补全，自动纠错功能等。但有一个缺点，就是配置太麻烦。下图介绍了一些常见的shell类型：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271717934.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3><a class="header-anchor" href="#oh-my-zsh"><span></span></a><a href="https://ohmyz.sh/" target="_blank" rel="noopener noreferrer">Oh My Zsh</a></h3>
<p>管理 zsh 配置的框架，提供了数百个插件、主题和功能。只需要简单的修改配置文件，就能让 zsh 用的很顺手。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271716417.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>配置流程</h2>
<h3>第一步：安装 Homebrew</h3>
<h4>安装命令</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/bin/bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -fsSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>如果执行不成功，可选择国内镜像安装：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/bin/zsh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -fsSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271838726.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>常用命令</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看配置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 更新 Homebrew</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#  搜索相关的包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [关键词] </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看包的信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [软件名]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 查看已安装的包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 更新某个软件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> upgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [软件名]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 清理所有软件的旧版</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cleanup</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 卸载某个软件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> uninstall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [软件名]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 安装某个软件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [软件名]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 安装cask软件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --cask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [软件名]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>第二步：安装 iTerm 2</h3>
<h4>安装命令</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iterm2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271841097.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>个性化设置</h4>
<p>可以在Settings中进行个性化配置，如字体、背景、快捷键等，笔者一般情况下直接使用默认配置。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271847191.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>第三步：安裝 zsh</h3>
<p>更多安装信息可以访问<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH" target="_blank" rel="noopener noreferrer">Installing ZSH</a>。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zsh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271851444.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>第四步：安装 Oh My Zsh 并配置</h3>
<h4>安装命令</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -fsSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271907948.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>个性化配置</h4>
<ul>
<li><strong>别名配置</strong></li>
</ul>
<p>oh my zsh内置了很多命令缩写别名，可执行aliases命令展示所有的别名（很多和git相关）。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 获取所有别名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">aliases</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">——————</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 别名列表（部分）</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ——————</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">-</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -'</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">...</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">..</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">....</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">..</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.....</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">..</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">......</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">..</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -1'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -2'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -3'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -4'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">5</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -5'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">6</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -6'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">7</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -7'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">8</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -8'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">9</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'cd -9'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'sudo '</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">egrep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'grep -E'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fgrep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'grep -F'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">g</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">git</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ga</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gaa</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --all'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gam</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gama</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --abort'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gamc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --continue'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gams</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --skip'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gamscp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --show-current-patch'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gap</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git apply'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gapa</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --patch'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gapt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git apply --3way'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gau</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --update'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gav</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --verbose'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gb</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbD</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --delete --force'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gba</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --all'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --delete'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'LANG=C git branch -vv | grep ": gone\]"'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbgD</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'LANG=C git branch --no-color -vv | grep ": gone\]" | cut -c 3- | awk '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'{print $1}'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' | xargs git branch -D'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbgd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'LANG=C git branch --no-color -vv | grep ": gone\]" | cut -c 3- | awk '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'{print $1}'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' | xargs git branch -d'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git blame -w'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbm</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --move'</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">......</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">history</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">omz_history</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">l</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'ls -lah'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">la</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'ls -lAh'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ll</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'ls -lh'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ls</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'ls -G'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">lsa</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'ls -lah'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">md</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'mkdir -p'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">rmdir</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">run-help</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">man</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">which-command</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">whence</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>主题设置</strong></li>
</ul>
<p>主题主要用于定制Zsh终端外观，默认主题为“robbyrussell”。替换方式是编辑<code>~/.zshrc</code>文件，将<code>ZSH_THEME</code>设置为对应主题。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 编辑文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 添加内容后执行</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .zshrc</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271938526.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>但一些主题可能和系统默认字体不兼容，导致一些字符不能正常展示。这种情况下需要额外安装字体，笔者懒得折腾，一般就使用默认主题。下面展示agnoster和gnzh主题样式，更多样式可以到<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes" target="_blank" rel="noopener noreferrer">Themes</a>查看。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271939377.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271942728.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>至此，<strong>好看的界面</strong>这一诉求已经达成了，其他的诉求则通过插件方式实现。</p>
<ul>
<li><strong>插件配置</strong></li>
</ul>
<p>Oh My Zsh 有几百个<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins" target="_blank" rel="noopener noreferrer">官方插件</a>，还有很多第三方插件，提供了各式各样的功能。但很多并不常用，笔者这里只推荐个人平常使用较多的插件，若对插件感兴趣可自行阅读一下相关文档。</p>
<p><strong>① git</strong></p>
<p>官方插件，默认开启。提供<strong>Git命令别名</strong>，帮助在终端中加快使用Git的速度。下面展示部分内容，查看全部别名列表可访问<a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git/" target="_blank" rel="noopener noreferrer">git</a>。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">g</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">git</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ga</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gaa</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --all'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gam</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gama</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --abort'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gamc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --continue'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gams</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --skip'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gamscp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git am --show-current-patch'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gap</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git apply'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gapa</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --patch'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gapt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git apply --3way'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gau</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --update'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gav</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git add --verbose'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gb</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbD</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --delete --force'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gba</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --all'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --delete'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'LANG=C git branch -vv | grep ": gone\]"'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbgD</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'LANG=C git branch --no-color -vv | grep ": gone\]" | cut -c 3- | awk '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'{print $1}'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' | xargs git branch -D'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbgd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'LANG=C git branch --no-color -vv | grep ": gone\]" | cut -c 3- | awk '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'{print $1}'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' | xargs git branch -d'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git blame -w'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gbm</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'git branch --move'</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">......</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② sudo</strong></p>
<p>官方插件，把<code>sudo</code>&nbsp;作为当前或前一个命令的前缀，只需按两下<code>ESC</code>。通过编辑<code>~/.zshrc</code>文件，在<code>plugins</code>配置换行添加插件名即可开启。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272009329.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>③ z</strong></p>
<p>官方插件，开启方式同上。跟踪最常访问的目录，能够通过输入所需目录路径中的几个字符来<strong>快速访问</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272030894.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272013222.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>④ zsh-autosuggestions</strong></p>
<p>三方插件，<strong>自动补全</strong>插件，根据历史命令和当前输入内容，自动推荐可能的命令。安装命令：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zsh-autosuggestions</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 编辑文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 将下面配置加到.zshrc内容末尾</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 添加内容后执行</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .zshrc</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272038502.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>⑤ zsh-syntax-highlighting</strong></p>
<p>三方插件，<strong>语法高亮</strong>插件，让命令行更加易读易懂。安装命令：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 编辑文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 将下面配置加到.zshrc内容末尾</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 添加内容后执行</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .zshrc</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272029765.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>⑥ fzf</strong></p>
<p>三方插件，<strong>模糊搜索</strong>插件，可以快速搜索历史命令、文件、目录等。安装命令：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fzf</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ~/.fzf.zsh ] &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/.fzf.zsh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272055083.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>结语</h2>
<p>上述配置后就能获得一个基本好用的终端了，但也只是基本好用，因为在AI时代，终端也需要与时俱进。iTerm2提供了与OpenAI的集成方法，但功能仅仅是用大模型辅助生成命令，能提供的帮助比较有限。</p>
<figure><img src="https://pic-bed-1256249917.cos.ap-chengdu.myqcloud.com/uPic/iterm2-ai-003-20240614205616478.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>其他比较火的AI终端有<a href="https://www.warp.dev" target="_blank" rel="noopener noreferrer">warp</a>，但由于笔者还没有深入试用，下次再分享吧。warp官方做了与ITerm2的功能对比，可以先看看<a href="https://www.warp.dev/compare-terminal-tools/iterm2-vs-warp" target="_blank" rel="noopener noreferrer">iterm2-vs-warp</a>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411272128581.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411271656646.png" type="image/png"/>
    </item>
    <item>
      <title>用一行命令把任意网站变成桌面应用</title>
      <link>https://shawnxie.top/blogs/tools/one-cmd-web-to-app.html</link>
      <guid>https://shawnxie.top/blogs/tools/one-cmd-web-to-app.html</guid>
      <source url="https://shawnxie.top/rss.xml">用一行命令把任意网站变成桌面应用</source>
      <description>传统意义上，网站不是”用户拥有的东西“，而更像是”用户访问的地方“，具有以下特点： 用户不访问时，网站不在用户的设备上存在：这意味着网站不像应用程序那样可以安装在用户的设备上，用户不使用时，网站不会占用设备资源； 用户只能通过打开浏览器访问网站：用户需要主动打开浏览器，输入网址或点击链接才能访问网站； 高度依赖网络连接：网站需要网络连接才能访问，如果用...</description>
      <category>技术提效</category>
      <pubDate>Sat, 28 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>传统意义上，网站不是”用户<strong>拥有</strong>的东西“，而更像是”用户<strong>访问</strong>的地方“，具有以下特点：</p>
<ol>
<li><strong>用户不访问时，网站不在用户的设备上存在</strong>：这意味着网站不像应用程序那样可以安装在用户的设备上，用户不使用时，网站不会占用设备资源；</li>
<li><strong>用户只能通过打开浏览器访问网站</strong>：用户需要主动打开浏览器，输入网址或点击链接才能访问网站；</li>
<li><strong>高度依赖网络连接</strong>：网站需要网络连接才能访问，如果用户没有网络，就无法访问网站。</li>
</ol>
<p>但如果我们发现了一个有意思的网站，想拥有它，这时就不希望它是传统意义上的网站了，更希望是一个原生的APP。这样当我们使用时，点击一个图标即可打开，提供沉浸式的用户体验。</p>
<!-- more -->
<p>举个例子，笔者写公众号使用的排版工具<a href="https://doocs.github.io/md/" target="_blank" rel="noopener noreferrer"><strong>doocs/md</strong></a>，官方提供了网站，也可以自己本地部署，但页面用起来体验始终不如本地APP，并且自己部署也会存在新功能难以快速同步的问题。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030266.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>PWA很好，但不通用</h2>
<p>使用Chrome浏览器打开网页时，细心地小伙伴能发现导航栏有时会有这样的小图标。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030267.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>点击一下，就能将网页下载到本地。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030268.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>这种能下载的网页叫<strong>渐进式Web应用</strong>（Progressive Web App，<strong>PWA</strong>），可以直接通过浏览器安装，像原生APP一样在线或离线使用。但想让一个网站成为PWA是有前提的，需要在网站开发的时候就按照规定的方式编写代码（具体的要求这里就不详述了，有兴趣的朋友可以自行查一下）。</p>
<p>对于一些不是PWA的网站，如前文提到的doocs/md，还有没有其他办法将其变成桌面软件呢？</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030270.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>将任意网页变为桌面应用</h2>
<p>是的，有，刚好有这么一个便利的工具——<a href="https://github.com/tw93/Pake" target="_blank" rel="noopener noreferrer"><strong>Pake</strong></a>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030271.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Pake是国内一个前端大佬做的开源工具，能够将<strong>任何网页</strong>转换成桌面应用程序。它支持Mac、Windows和Linux系统，并且相较于Electron打包的应用程序体积更小、速度更快。Pake提供了命令行工具来简化打包流程，并允许用户自定义开发。</p>
<p>下面简要介绍一下提供的三种使用方式：</p>
<h3>常用包下载</h3>
<p>提供了一些常用网站的包，进行一些定制优化，可以去仓库<a href="https://github.com/tw93/Pake/releases" target="_blank" rel="noopener noreferrer">Release</a>下载安装使用。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030272.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>命令行一键打包</h3>
<p>对于未提供的网站，可以使用下面命令一键打包。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用 npm 进行安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pake-cli</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 命令使用格式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [OPTIONS]...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打包举例</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://www.shawnxie.top/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Shawn-Weekly</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令参数详细说明可以参考<a href="https://github.com/tw93/Pake/blob/master/bin/README_CN.md" target="_blank" rel="noopener noreferrer">README_CN</a>。</p>
<p>注：Pake底层使用的是Tauri，环境一定要按照<a href="https://tauri.app/zh-cn/v1/guides/getting-started/prerequisites/#%E7%AE%A1%E7%90%86-rust-%E5%AE%89%E8%A3%85" target="_blank" rel="noopener noreferrer">要求</a>安装，不然会出现一些报错。如果按照下面命令安装后还有问题，可以在Issue里找一下解决方法。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># MAC环境安装</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 安装 CLang 和 macOS 开发依赖项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">xcode-select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --install</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 安装 Rust</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '=https'</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --tlsv1.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://sh.rustup.rs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -sSf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># node安装一下最新版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v20.17.0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们就用一行命令把前文中提到的doocs/md打包成桌面APP吧！</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://doocs.github.io/md</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Wechat-MD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --icon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ./Markdown.icns</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>省略命令执行过程，得到一个安装包。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030273.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>安装之后我们就能像本地APP一样使用doocs/md网站啦，大功告成！</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030274.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>定制开发</h3>
<p>针对爱折腾的用户，也提供了「定制开发」方式，可深度二次开发定制功能。笔者刚好前端和Rust都不会，直接Pass。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> i</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 本地开发[右键可打开调试模式]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 打包应用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> build</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>原理浅析</h3>
<p>前面提到Pake底层使用了<a href="https://tauri.app/zh-cn/" target="_blank" rel="noopener noreferrer">Tauri</a>，它是一款应用构建的工具包，能够为使用Web技术的所有主流桌面操作系统构建软件。Tauri的核心是用Rust构建的，CLI（命令行界面）则利用了Node.js。相较于其他同类型工具，Tauri拥有诸多优点。奈何笔者前端和Rust都不太懂，就不进一步探究啦，感兴趣的小伙伴可以自行查查资料。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030275.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411270030266.png" type="image/png"/>
    </item>
    <item>
      <title>文章图片自动管理方案</title>
      <link>https://shawnxie.top/blogs/tools/picture-manage.html</link>
      <guid>https://shawnxie.top/blogs/tools/picture-manage.html</guid>
      <source url="https://shawnxie.top/rss.xml">文章图片自动管理方案</source>
      <description>笔者在我的内容创作最强搭子——Kimi中介绍了周刊创作时素材收集和整理的基本思路，这之后便会进行文章撰写。 写作在电脑本地进行，采用 Markdown 语法，不过其有一个缺点——不能所见即所得。因此需要一个专业的 Markdown 写作编辑器来展示效果，笔者目前使用双链笔记工具 Obsidian。 另外本地写作使用 Markdown 时还有一个痛点——...</description>
      <category>技术提效</category>
      <pubDate>Sat, 23 Nov 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>笔者在<a href="https://mp.weixin.qq.com/s/HDUjesD7Qs5o9qm3bPs_ZA" target="_blank" rel="noopener noreferrer">我的内容创作最强搭子——Kimi</a>中介绍了周刊创作时素材收集和整理的基本思路，这之后便会进行文章撰写。</p>
<p>写作在电脑本地进行，采用 <a href="https://www.markdownguide.org" target="_blank" rel="noopener noreferrer">Markdown</a> 语法，不过其有一个缺点——<strong>不能所见即所得</strong>。因此需要一个专业的 Markdown 写作编辑器来展示效果，笔者目前使用双链笔记工具 Obsidian。</p>
<p>另外本地写作使用 Markdown 时还有一个痛点——<strong>图片管理困难</strong>。图片粘贴后默认存放到本地目录下，如果路径进行了变更还需要手动调整图片的引用。前期周刊写完后还需要一一检查图片的引用，相当的痛苦，这对写作意愿有不小的消耗。</p>
<p>针对上述第二个痛点，本文将介绍一种图片管理方案，不花一分钱即可实现文章图片自动管理，做到“<strong>一次写作，到处（粘贴）发布</strong>”。</p>
<!-- more -->
<h2>工具介绍</h2>
<p>对本文涉及的工具进行简要介绍：</p>
<ul>
<li><strong><a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a></strong></li>
</ul>
<p>代码托管云服务网站，帮助开发者存储和管理其项目源代码。在本文中充当<strong>免费图床</strong>作用。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231816214.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><strong><a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener noreferrer">PicGo</a></strong></li>
</ul>
<p>一个用于快速上传图片并获取图片 URL 链接的工具。在本文中提供<strong>图片上传+管理</strong>功能。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231814767.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><strong><a href="https://www.jsdelivr.com/" target="_blank" rel="noopener noreferrer">jsDelivr</a></strong></li>
</ul>
<p>国外的优秀公共 CDN 服务提供商，也是首个打通中国大陆与海外的免费 CDN 服务。在本文中用来<strong>加速 Github 仓库的图片链接访问速度</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231817239.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li><strong><a href="https://obsidian.md/" target="_blank" rel="noopener noreferrer">Obsidian</a></strong></li>
</ul>
<p>一款强大的知识管理和笔记软件，以Markdown编辑器为基础，支持双向链接和图谱视图，帮助用户构建知识网络。在本文中配合插件<a href="https://github.com/renmu123/obsidian-image-auto-upload-plugin" target="_blank" rel="noopener noreferrer">image-auto-upload</a>实现文章<strong>图片自动管理</strong>。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231819700.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>详细方案</h2>
<p><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231847843.png" alt="" loading="lazy"><br>
上图为各工具交互示意图，黑色箭头表示图片上传过程，红色箭头表示图片访问过程，下面将介绍详细配置步骤：</p>
<h3>第一步：配置GitHub免费图床</h3>
<h4>① 创建公共仓库</h4>
<p>在Github中<a href="https://github.com/new" target="_blank" rel="noopener noreferrer">创建</a>一个公共仓库，用于存放上传的图片。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231928488.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>② 生成Github访问token</h4>
<ul>
<li>在<a href="https://github.com/settings/tokens" target="_blank" rel="noopener noreferrer">开发设置</a>中选择生成新token</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231930473.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>选择永不过期，并按照下图设置访问权限</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231931131.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>拉到最下面，点击&nbsp;<code>Generate token</code>，生成并复制（一定要保存好token，只会在创建时显示一次）</li>
</ul>
<h3>第二步：安装PicGo并配置图床</h3>
<ul>
<li>访问<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener noreferrer">releases</a>找到对应操作系统安装包下载并安装</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231937398.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>打开PicGo，在图床设置中配置好GitHub设置（token即为第一步中申请值）</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231940672.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>第三步：配置图片链接CDN加速</h3>
<p>按照下述格式配置图片链接即可享有jsdelivr提供的加速能力。</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>https://cdn.jsdelivr.net/gh/{github账号名}/{仓库名}/{图片路径}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>在PicGo中GitHub设置中设定自定义域名，即可自动生成加速后图片链接。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231949714.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>第四步：Obsidian图片自动上传配置</h3>
<ul>
<li>在Obsidian的偏好“第三方插件”配置中关闭安全模式，之后浏览插件市场安装image-auto-upload并开启插件</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231951700.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>插件设置中已经默认配好了PicGo相关参数，如有需要也可以自行调整</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231953924.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>按上述配置好后，即可开启丝滑的写作体验</li>
</ul>
<p>将图片粘贴到文章中，将自动上传并展示。Markdown图文内容变成了<strong>纯静态数据</strong>，想粘贴就粘贴。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411232002552.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>结语</h2>
<p>文章写好后再结合之前推荐的<a href="https://mp.weixin.qq.com/s/4Du8pyhz9357lxkG0Z8gpQ" target="_blank" rel="noopener noreferrer">doocs/md</a>公众号排版工具，只需<strong>点点点</strong>（粘贴markdown到md，粘贴排版后内容到公众号，再点击发布），一篇规整的公众号文章就发出来啦！</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411232018369.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>图片存储还有很多其他方案（专业图床），有兴趣的朋友可以自行检索一下。如果图片链接可以顺畅访问则不需要配置cdn加速，例如使用Gitee作为图床。另外PicGo还提供了大量插件，如果有特殊的需求不妨看看。</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202411231816214.png" type="image/png"/>
    </item>
    <item>
      <title>碎片时间刷文章！懒人阅读方案分享</title>
      <link>https://shawnxie.top/blogs/tools/read-flow.html</link>
      <guid>https://shawnxie.top/blogs/tools/read-flow.html</guid>
      <source url="https://shawnxie.top/rss.xml">碎片时间刷文章！懒人阅读方案分享</source>
      <description>成年人缓解焦虑的三种方式：阅读、运动和冥想。其中阅读的门槛和成本最低，通过碎片化阅读能有效利用垃圾时间，在缓解焦虑的同时提升自己。但在这个信息爆炸的时代，优质信息反而更难发现。 首先是信息分散，各类APP、公众号、网站和newsletter像一盘散沙，阅读时需要反复切换、筛选，进一步消耗本就稀缺的时间和精力。 其次是信息密度低，内容形式日益短视频化，降...</description>
      <category>技术提效</category>
      <pubDate>Sun, 11 May 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>成年人缓解焦虑的三种方式：<strong>阅读、运动和冥想</strong>。其中阅读的门槛和成本最低，通过碎片化阅读能有效利用垃圾时间，在缓解焦虑的同时提升自己。但在这个信息爆炸的时代，优质信息反而更难发现。</p>
<p>首先是<strong>信息分散</strong>，各类APP、公众号、网站和newsletter像一盘散沙，阅读时需要反复切换、筛选，进一步消耗本就稀缺的时间和精力。</p>
<p>其次是<strong>信息密度低</strong>，内容形式日益短视频化，降低了碎片化阅读的效率。</p>
<p>再者是<strong>算法困境</strong>，各类APP为留住用户都会使用推荐算法，通过分析用户的行为和偏好，推荐“感兴趣”的内容给用户，但算法收集的信息毕竟有限，会导致推荐的内容单一，用户的行为又会进一步加重这种单一化，最终形成信息茧房。</p>
<p>最后是<strong>AI的冲击</strong>，低成本的AI工具快速生成了大量垃圾内容，充斥在各大平台，严重干扰到有价值内容的获取。</p>
<p>针对以上问题，如果有这样一个工具，能够统一整合所有类型的信息源，让我们在碎片化的时间里，<strong>像刷短视频一样阅读</strong>，岂不美滋滋？</p>
<!-- more -->
<h2>基本思路</h2>
<p>基本思路见下图，大体包含四个部分：</p>
<ul>
<li><strong>信息收集</strong>：标准化信息源内容拉取过程；</li>
<li><strong>信息存储</strong>：云端数据存储，支持多端快速访问；</li>
<li><strong>信息阅读</strong>：碎片化阅读，注重效率和体验；</li>
<li><strong>信息留存</strong>：一键留存，扩充个人知识库。</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101720464.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>详细方案</h2>
<p>介绍一种具体的实现方案，大家可以自行折腾平替方案。</p>
<h3>环境搭建</h3>
<h4>准备运行环境</h4>
<p>推荐使用阿里云、腾讯云和UCloud等云服务器，也可以使用自己的电脑。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101046200.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>安装宝塔面板</h4>
<p><a href="https://www.bt.cn/new/index.html" target="_blank" rel="noopener noreferrer">宝塔面板</a>是一款服务器管理软件，支持windows和linux系统，可以通过Web端轻松管理服务器，提升运维效率。例如：创建管理网站、FTP、数据库，拥有可视化文件管理器，可视化软件管理器，可视化CPU、内存、流量监控图表，计划任务等功能。</p>
<p>简而言之，它能够简化服务器操作，减少大量繁琐的环境配置工作。</p>
<ul>
<li>云厂商一键安装宝塔面板</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101049740.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>手动安装宝塔面板</li>
</ul>
<p>Windows直接下载软件安装，Linux系统使用命令安装（<a href="https://www.bt.cn/new/download.html" target="_blank" rel="noopener noreferrer">官方安装文档</a>）：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /usr/bin/curl ];</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> curl -sSO https://download.bt.cn/install/install_panel.sh;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install_panel.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ed8484bec</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>宝塔面板主页</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101055001.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>安装MySQL</h4>
<p>用来存储RSS源和文章内容。宝塔面板支持各种数据库的快捷创建和配置，步骤：</p>
<ul>
<li>点击数据库边栏，选择对应的数据库类型并安装环境</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101106730.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>环境安装完成后，点击“添加数据库”创建（具体创建参数在工具使用DB时说明）</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101109934.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>对接方式统一</h3>
<p>数据源对接方式采用<a href="https://zh.wikipedia.org/wiki/RSS" target="_blank" rel="noopener noreferrer">RSS</a>，它是一种消息来源格式规范，用以聚合多个网站更新的内容并自动通知网站订阅者。这个规范很久远了，已从曾经的互联网“宠儿”变成了如今的“弃子”。但针对本文场景却是一个不错的选择，确定了规范就能标准化对接方式，况且还有不少怀旧人士在使用和折腾RSS。</p>
<p>使用 RSS 的一大难题是找到“订阅源”，因为不是所有的信息源都支持RSS订阅，如果不支持则需要通过工具为其生成。</p>
<h4>有RSS订阅</h4>
<p>一些网站提供了明显的RSS订阅链接：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101131338.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>如果网页没有明显的RSS订阅链接，可以通过油猴脚本快速查找：</p>
<ul>
<li>安装<a href="https://chromewebstore.google.com/detail/%E7%AF%A1%E6%94%B9%E7%8C%B4/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener noreferrer">篡改猴</a>浏览器插件并配置<a href="https://greasyfork.org/zh-CN/scripts/373252-rss-show-site-all-rss" target="_blank" rel="noopener noreferrer">RSS+</a>脚本</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101136358.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>检索网页RSS订阅源</li>
</ul>
<p>如果网页提供了订阅源，则会在页面右下角显示数字，点击后可查看订阅源详情。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101138241.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h4>无RSS订阅</h4>
<p>如果信息源本身不提供RSS，通过下面这些工具能够覆盖90%场景的RSS订阅源生成。</p>
<ol>
<li><a href="https://github.com/cooderl/wewe-rss" target="_blank" rel="noopener noreferrer">wewe-rss：公众号转RSS</a></li>
</ol>
<p>能够将公众号文章转换成RSS订阅源。宝塔面板配置步骤：</p>
<ul>
<li>配置MySQL数据库</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101201484.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>新增Docker编排模版</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101202910.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>模版内容填入：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'3.9'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">cooderl/wewe-rss:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">4000:4000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 数据库连接地址(下面password替换为刚刚新建数据库密码，172.17.0.1是容器中宿主机IP)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">DATABASE_URL=mysql://wewe-rss:password@172.17.0.1:3306/wewe-rss?schema=public&amp;connect_timeout=30&amp;pool_timeout=30&amp;socket_timeout=30</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 服务接口请求授权码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">AUTH_CODE=123456</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 提取全文内容模式</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # - FEED_MODE=fulltext</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 定时更新订阅源Cron表达式（每天8、11、17、20点刷新）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">CRON_EXPRESSION=0 0 8,11,17,20 * * ?</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 服务接口请求限制，每分钟请求次数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # - MAX_REQUEST_PER_MINUTE=60</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 外网访问时，需设置为服务器的公网 IP 或者域名地址</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # - SERVER_ORIGIN_URL=http://localhost:4000</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>添加Docker容器编排</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101206927.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>wewe-rss配置</li>
</ul>
<p>若执行顺利就能在{服务器IP}:4000访问wewe-rss服务了，如果打不开检查一下容器是否正常启动或者端口外网访问防火墙是否开启。</p>
<p>a. 配置微信读书账号</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101311856.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>b. 添加公众号源</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101318012.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>c. 获取RSS订阅源</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101319691.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ol start="2">
<li><a href="https://github.com/DIYgod/RSSHub" target="_blank" rel="noopener noreferrer">RSSHub：万物皆可 RSS</a></li>
</ol>
<p>RSSHub 给各种奇奇怪怪的网站生成了 RSS 源，堪称“万物皆可 RSS”。适配了 300 多个网站，，涵盖了知乎、微博、豆瓣、B站、贴吧、斗鱼、小红书、网易云音乐、U2B、Github、Reddit 等国内外主流网站。</p>
<p>国内访问官网比较慢，可通过宝塔面板自部署，再结合<a href="https://chromewebstore.google.com/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa" target="_blank" rel="noopener noreferrer">RssHub Radar</a>浏览器插件快速获取RSS订阅源。配置步骤：</p>
<ul>
<li>宝塔面板安装RSSHub</li>
</ul>
<p>在Docker应用商店搜索安装即可。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101341409.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>正常启动后，可在{服务器IP}:1200访问RSSHub服务。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101340524.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>RssHub Radar 插件配置实例地址</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101343885.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>获取RSS订阅源</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101344308.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ol start="3">
<li>自定义爬虫</li>
</ol>
<p>如果上述工具都无法满足需求，可通过自定义爬虫来实现RSS订阅源定制生成。虽然有一定技术门槛，但使用现成的爬虫工具结合AI编程，实现难度也不算高。笔者目前定制化诉求不高，这部分暂不展开，等之后有具诉求再写文章讲述。</p>
<h3>信息存储</h3>
<p>信息对接统一后需要一个工具来获取并存储信息。<a href="https://github.com/FreshRSS/FreshRSS" target="_blank" rel="noopener noreferrer">FreshRSS</a>是一个开源的RSS阅读器，支持多平台（web应用），支持自定义订阅，内容分类管理和API（多端集成），非常适合用来进行内容存储和同步。宝塔面板配置步骤：</p>
<ul>
<li>数据库配置</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101201684.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>新增Docker编排模版</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101357126.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>模版内容填入：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"3"</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  freshrss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">freshrss/freshrss:latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">freshrss</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">freshrss-app</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"8900:80"</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 主机端口:容器端口</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./data:/var/www/FreshRSS/data</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 持久化数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">./extensions:/var/www/FreshRSS/extensions</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 插件目录</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      TZ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Asia/Shanghai</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 时区</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      MYSQL_HOST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">172.17.0.1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      MYSQL_USER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">freshrss</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       # 替换为自己的数据库密码</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      MYSQL_PASSWORD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">password</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      MYSQL_DATABASE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">freshrss</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>添加Docker容器编排</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101359797.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>FreshRSS配置</li>
</ul>
<p>正常部署后就能在{服务器IP}:8900访问FreshRSS了，首次登录会有一些环境检查和配置，按照引导操作即可。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101403533.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>a. 信息源导入</p>
<p>在订阅管理”导入/导出“中导入事先整理好的RSS订阅源，之后返回主页刷新即可实现内容拉取。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101404498.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>b. 自动刷新</p>
<p>默认未开启自动刷新，这对懒人来说不太友好，可通过配置宝塔面板定时任务实现定时刷新。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101457371.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> freshrss</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> php</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /var/www/FreshRSS/app/actualize_script.php</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>c. API授权</p>
<p>为了实现多端接入FreshRSS，需要开启API授权。</p>
<ul>
<li>认证配置中开启”允许 API 访问“</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101409415.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>在账户配置”API“管理中设置密码并提交</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101411990.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>多端阅读</h3>
<p>终于到了阅读时刻！为了实现随时随地像刷短视频一样阅读，需要在手机上安装<a href="https://github.com/readrops/Readrops" target="_blank" rel="noopener noreferrer">Readrops</a>并连接到FreshRss。Readrops 是一款开源的多服务 RSS 客户端，适用于 Android 平台，它支持本地 RSS 解析、外部服务支持（集成FreshRSS）、分享等功能。</p>
<ul>
<li>安装</li>
</ul>
<p>在<a href="https://github.com/readrops/Readrops/releases" target="_blank" rel="noopener noreferrer">releases</a>中下载最新apk安装即可。</p>
<ul>
<li>FreshRSS账号配置</li>
</ul>
<p>在账号管理中添加FreshRSS账号，确认后返回主页刷新内容。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101421950.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>分享模版配置</li>
</ul>
<p>首选项最后一项可以设置分享文本模版，方便快速生成内容留存文案。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101424231.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3>碎片信息记录（素材化）</h3>
<p><a href="https://flomoapp.com/" target="_blank" rel="noopener noreferrer">flomo</a>（浮墨笔记）是一款全平台的卡片笔记工具，能帮助用户快速记录想法与灵感，并更好地回顾过往记录。通过Readrops分享到flomo，实现碎片素材快速记录，方便后续写作时寻找灵感。</p>
<ul>
<li>分享到flomo</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101435952.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ul>
<li>flomo回顾</li>
</ul>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101434539.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2>结语</h2>
<p>如果不想折腾这套流程，市面上也有一些现成的产品，推荐网站 bestblogs.dev。提供了大量信息源内容汇总，且结合AI打分对内容进行了精选，每周也能整理精选内容形成周刊并通过邮件推送。网站的信息收集和处理流程已经十分完善，如果你没有太多个性化诉求，完全可以直接使用。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505100947286.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>但对笔者来说，个性化比流程完整更重要，以最小成本实现个性化诉求，是我的首要目标。对信息的挑剔感能培养人在内容上的品味。搭建完这套流程后，通过不断优化信息源和阅读转换方案，让我们更好地逃离垃圾信息，冲破信息茧房。</p>
<div style="text-align: center;"> —— 完 —— </div>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/Xiaoxie1994/images/images/202505101720464.png" type="image/png"/>
    </item>
  </channel>
</rss>